var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/entities/Address.html",[0,1.384,1,1.951]],["body/entities/Address.html",[0,1.65,1,3.154,2,1.62,3,0.297,4,0.297,5,0.264,6,2.299,7,0.264,8,1.31,9,4.608,10,4.608,11,3.867,12,3.867,13,3.015,14,1.985,15,4.608,16,0.866,17,0.029,18,1.329,19,2.103,20,3.902,21,1.038,22,2.74,23,2.74,24,2.74,25,3.694,26,3.867,27,2.74,28,3.867,29,2.74,30,2.576,31,3.015,32,2.74,33,2.74,34,3.937,35,2.887,36,1.943,37,2.74,38,2.74,39,0.477,40,1.476,41,3.937,42,1.352,43,0.297,44,0.115,45,0.017,46,0.017]],["title/controllers/AppController.html",[47,1.629,48,2.16]],["body/controllers/AppController.html",[3,0.44,4,0.44,5,0.391,7,0.391,17,0.029,18,1.166,19,1.457,21,0.719,39,0.622,43,0.44,44,0.171,45,0.023,46,0.023,47,2.535,48,3.36,49,2.003,50,3.406,51,1.709,52,4.97,53,4.059,54,1.351,55,0.85,56,3.035,57,3.406,58,2.656,59,2.656,60,1.253,61,4.059]],["title/modules/AppModule.html",[62,1.499,63,2.16]],["body/modules/AppModule.html",[3,0.318,4,0.318,5,0.282,17,0.029,36,1.444,39,0.733,43,0.318,44,0.123,45,0.018,46,0.018,48,3.127,49,2.036,55,0.613,56,3.058,57,2.456,62,1.874,63,4.162,64,1.444,65,2.222,66,2.456,67,2.456,68,2.456,69,3.356,70,3.356,71,3.058,72,3.522,73,2.7,74,1.915,75,1.915,76,2.926,77,3.026,78,2.7,79,2.926,80,1.576,81,2.456,82,1.73,83,2.926,84,2.926,85,2.926,86,2.926,87,2.926,88,2.926,89,2.926,90,2.926,91,2.456,92,2.456]],["title/injectables/AppService.html",[56,1.778,93,0.691]],["body/injectables/AppService.html",[3,0.464,4,0.464,5,0.413,7,0.413,17,0.029,18,1.205,21,0.758,39,0.518,43,0.464,44,0.18,45,0.023,46,0.023,51,1.767,52,5.066,54,1.425,55,0.897,56,2.86,60,1.321,93,1.112,94,1.944,95,3.593,96,4.281,97,4.281,98,4.281]],["title/controllers/AuthController.html",[47,1.629,99,2.16]],["body/controllers/AuthController.html",[3,0.291,4,0.291,5,0.258,7,0.258,16,0.573,17,0.029,19,1.391,21,0.687,39,0.705,43,0.291,44,0.113,45,0.017,46,0.017,47,1.323,49,1.323,51,1.29,54,1.29,55,0.561,59,1.754,60,1.196,92,3.252,99,2.535,100,2.249,101,2.249,102,2.68,103,2.504,104,3.252,105,3.82,106,2.249,107,3.259,108,2.68,109,3.875,110,3.252,111,2.68,112,1.391,113,1.29,114,1.391,115,2.461,116,2.68,117,3.259,118,2.68,119,3.82,120,3.252,121,3.875,122,2.68,123,3.875,124,2.68,125,2.249,126,2.249,127,3.875,128,2.249,129,3.875,130,1.966,131,2.249,132,1.754,133,1.908,134,1.584,135,2.249,136,2.535,137,2.249,138,3.252,139,1.584,140,2.68,141,2.249,142,2.68,143,1.584,144,2.68,145,3.875,146,2.535,147,2.68,148,2.68,149,2.68,150,2.68]],["title/modules/AuthModule.html",[62,1.499,69,1.951]],["body/modules/AuthModule.html",[3,0.294,4,0.294,5,0.261,17,0.029,39,0.731,43,0.294,44,0.114,45,0.017,46,0.017,49,1.926,55,0.567,62,1.772,64,1.335,65,2.101,69,3.738,71,2.979,73,2.553,74,1.77,75,1.77,77,2.861,78,2.553,91,2.271,99,2.994,133,2.589,134,1.599,151,2.271,152,2.271,153,2.705,154,2.271,155,2.805,156,3.45,157,3.27,158,2.705,159,3.274,160,3.274,161,1.984,162,2.705,163,1.599,164,1.984,165,2.553,166,1.984,167,2.705,168,2.705,169,2.705,170,2.705,171,3.901,172,1.77,173,2.705]],["title/injectables/AuthService.html",[93,0.691,133,1.384]],["body/injectables/AuthService.html",[3,0.199,4,0.199,5,0.176,7,0.176,14,1.815,16,0.661,17,0.03,18,1.08,21,0.792,39,0.645,40,0.986,43,0.199,44,0.077,45,0.013,46,0.013,51,0.966,54,1.365,55,0.383,59,2.358,60,1.38,80,0.986,93,0.608,94,0.831,103,2.418,104,2.435,105,2.435,106,2.435,107,2.643,110,1.536,112,1.605,113,1.488,114,1.605,115,2.348,117,2.424,119,3.025,120,2.435,133,1.216,135,1.536,138,2.435,139,1.082,143,3.147,160,4.183,161,1.342,174,1.536,175,2.901,176,3.604,177,1.432,178,1.83,179,2.562,180,3.261,181,1.83,182,2.901,183,1.83,184,1.83,185,2.901,186,1.83,187,1.83,188,1.83,189,1.941,190,1.83,191,2.435,192,1.83,193,1.83,194,1.83,195,1.342,196,1.83,197,2.209,198,2.435,199,1.83,200,1.83,201,1.83,202,2.128,203,1.83,204,1.83,205,1.83,206,1.83,207,1.536,208,2.901,209,3.025,210,3.604,211,3.604,212,3.604,213,2.901,214,2.901,215,2.128,216,2.131,217,1.83,218,1.83,219,1.83,220,1.83,221,1.83,222,2.901,223,1.83,224,3.604,225,1.83,226,1.83,227,1.536,228,1.342,229,1.83,230,1.83,231,1.83]],["title/injectables/CaslAbilityFactory.html",[93,0.691,155,1.499]],["body/injectables/CaslAbilityFactory.html",[3,0.272,4,0.272,5,0.242,7,0.242,14,1.714,16,0.762,17,0.03,18,0.569,21,0.444,39,0.624,40,1.351,43,0.604,44,0.105,45,0.016,46,0.016,51,1.229,54,0.835,55,0.525,60,0.774,93,0.773,94,1.139,103,1.99,112,0.901,113,0.835,114,0.901,115,1.822,133,1.051,134,1.483,155,1.677,163,1.483,197,2.603,216,1.483,232,1.677,233,1.238,234,3.692,235,2.708,236,2.508,237,2.857,238,1.641,239,1.839,240,1.677,241,1.483,242,1.839,243,2.183,244,2.416,245,2.416,246,2.416,247,2.416,248,2.416,249,1.641,250,2.59,251,1.988,252,2.183,253,2.416,254,1.641,255,1.839,256,1.839,257,2.708,258,1.839,259,3.213,260,1.839,261,1.839,262,2.708,263,1.839,264,2.708,265,1.839,266,1.839,267,1.839,268,1.988,269,1.839,270,2.416,271,2.416,272,1.988,273,1.351,274,1.641,275,1.483,276,2.416,277,1.641]],["title/interfaces/CaslPermission.html",[251,1.778,252,1.951]],["body/interfaces/CaslPermission.html",[3,0.276,4,0.276,5,0.245,7,0.245,8,1.242,14,1.242,16,0.801,17,0.03,18,1.003,39,0.627,40,1.371,43,0.607,44,0.107,45,0.016,46,0.016,55,0.533,60,0.786,93,0.782,103,1.156,115,1.256,133,1.067,134,1.505,155,1.156,163,1.505,197,2.621,216,1.505,232,1.156,233,1.256,235,1.867,237,2.877,238,1.665,239,1.867,240,1.695,241,1.505,242,1.867,243,2.877,244,2.442,245,2.442,246,2.442,247,2.442,248,2.442,249,1.665,250,2.612,251,2.01,252,2.612,253,3.39,254,1.665,255,1.867,256,1.867,257,2.737,258,1.867,259,3.971,260,1.867,261,1.867,262,2.737,263,1.867,264,2.737,265,1.867,266,1.867,267,1.867,268,2.01,269,1.867,270,2.442,271,2.442,272,2.01,273,1.371,274,1.665,275,1.505,276,2.442,277,1.665,278,1.867]],["title/classes/CreateUserDto.html",[44,0.139,279,2.421]],["body/classes/CreateUserDto.html",[3,0.33,4,0.33,5,0.293,7,0.293,8,1.41,16,0.85,17,0.029,18,1.404,19,2.064,21,1.018,25,3.108,39,0.368,43,0.33,44,0.178,45,0.019,46,0.019,189,2.627,202,2.23,279,3.108,280,1.797,281,4.949,282,2.551,283,4.094,284,3.578,285,4.094,286,4.094,287,3.192,288,3.04,289,3.192,290,3.04,291,4.878,292,3.04,293,4.481,294,3.04,295,3.04,296,3.04,297,3.04,298,4.238,299,3.04,300,1.989,301,3.04]],["title/controllers/HealthController.html",[47,1.629,302,2.16]],["body/controllers/HealthController.html",[3,0.359,4,0.359,5,0.319,7,0.319,17,0.03,19,1.188,21,0.586,39,0.714,43,0.359,44,0.139,45,0.02,46,0.02,47,1.633,49,1.633,51,1.495,54,1.101,55,0.693,60,1.021,80,1.782,101,2.777,125,2.777,128,2.777,130,2.427,131,2.777,132,2.165,136,2.939,141,2.777,143,3.234,177,1.633,180,2.939,302,2.939,303,2.777,304,4.492,305,5.719,306,3.309,307,3.309,308,4.492,309,4.492,310,4.492,311,4.492,312,2.427,313,3.309,314,3.309,315,3.309,316,3.309,317,3.309,318,3.309,319,3.309,320,3.309,321,3.309,322,3.309]],["title/modules/HealthModule.html",[62,1.499,70,1.951]],["body/modules/HealthModule.html",[3,0.428,4,0.428,5,0.38,17,0.029,39,0.733,43,0.428,44,0.166,45,0.022,46,0.022,49,2.49,55,0.827,62,2.292,64,1.948,70,2.983,78,2.582,132,2.582,302,3.639,312,2.895,323,3.947,324,5.045,325,3.947,326,5.045,327,3.312,328,3.947,329,3.947,330,3.947,331,3.947,332,3.947,333,3.947]],["title/interfaces/IPolicyHandler.html",[251,1.778,268,1.778]],["body/interfaces/IPolicyHandler.html",[3,0.274,4,0.274,5,0.243,7,0.243,14,1.234,16,0.764,17,0.03,18,0.573,21,0.447,39,0.625,40,1.359,43,0.605,44,0.106,45,0.016,46,0.016,51,1.234,54,0.84,55,0.528,60,0.779,93,0.777,103,1.146,112,0.906,113,0.84,114,0.906,115,1.245,133,1.058,134,1.491,155,1.146,163,1.491,197,2.61,216,1.491,232,1.684,233,1.245,235,1.85,237,3.052,238,1.651,239,1.85,240,1.684,241,1.491,242,1.85,243,2.192,244,2.426,245,2.426,246,2.426,247,2.426,248,2.426,249,1.651,250,3.052,251,1.997,252,2.192,253,2.426,254,1.651,255,1.85,256,1.85,257,2.719,258,1.85,259,3.224,260,1.85,261,1.85,262,2.719,263,1.85,264,2.719,265,1.85,266,1.85,267,1.85,268,2.368,269,2.719,270,2.876,271,2.426,272,1.997,273,1.359,274,1.651,275,1.491,276,2.426,277,1.651,278,1.85,334,3.708,335,2.523]],["title/injectables/JwtAuthGuard.html",[93,0.691,165,2.16]],["body/injectables/JwtAuthGuard.html",[3,0.36,4,0.36,5,0.32,7,0.32,16,0.666,17,0.029,21,0.798,36,1.64,39,0.663,43,0.36,44,0.14,45,0.02,46,0.02,51,1.499,54,1.106,55,0.696,58,2.174,60,1.39,93,0.943,94,1.509,112,1.617,113,1.499,114,1.617,137,2.788,165,2.947,172,2.174,177,1.64,197,1.789,336,4.289,337,2.788,338,3.78,339,2.788,340,4.955,341,3.322,342,3.78,343,4.598,344,3.322,345,2.788,346,3.322,347,2.436,348,2.436,349,2.788,350,3.322,351,2.788,352,3.78,353,3.322,354,2.788,355,3.322,356,3.322]],["title/injectables/JwtStrategy.html",[93,0.691,157,1.951]],["body/injectables/JwtStrategy.html",[3,0.366,4,0.366,5,0.325,7,0.325,16,0.673,17,0.029,21,0.806,39,0.668,43,0.366,44,0.142,45,0.02,46,0.02,51,1.515,54,1.123,55,0.707,58,2.208,59,2.208,60,1.041,80,1.817,93,0.953,94,1.532,103,2.339,112,1.634,113,1.515,114,1.634,157,2.691,166,2.474,177,1.665,180,3.881,209,2.832,227,2.832,228,2.474,347,2.474,349,2.832,351,2.832,357,2.832,358,4.552,359,2.832,360,3.374,361,4.552,362,3.374,363,4.552,364,3.374,365,3.374,366,3.374,367,3.374,368,2.832,369,3.374,370,3.374,371,3.374,372,3.374,373,3.374,374,3.374]],["title/classes/LoginDto.html",[44,0.139,107,1.951]],["body/classes/LoginDto.html",[3,0.44,4,0.44,5,0.391,7,0.391,8,1.709,16,0.76,17,0.029,18,1.344,19,1.844,21,0.91,39,0.491,43,0.44,44,0.216,45,0.023,46,0.023,107,3.036,189,3.035,191,4.729,280,2.399,293,4.48,300,2.656,375,3.406,376,4.059,377,4.059]],["title/entities/Permission.html",[0,1.384,240,1.499]],["body/entities/Permission.html",[0,1.868,2,1.934,3,0.355,4,0.355,5,0.315,7,0.315,8,1.484,13,3.317,16,0.805,17,0.029,18,1.012,19,1.955,20,3.727,21,0.965,30,2.916,31,3.317,39,0.614,42,1.615,43,0.355,44,0.137,45,0.02,46,0.02,164,2.399,232,1.486,240,2.024,243,2.997,253,3.317,378,2.745,379,5.444,380,4.781,381,3.271,382,3.271,383,3.271,384,2.932,385,2.399,386,4.457,387,3.271,388,2.399,389,3.269,390,2.399,391,3.271]],["title/guards/PoliciesGuard.html",[156,1.951,392,2.421]],["body/guards/PoliciesGuard.html",[3,0.294,4,0.294,5,0.262,7,0.262,14,0.903,16,0.678,17,0.029,21,0.812,39,0.555,43,0.294,44,0.114,45,0.017,46,0.017,51,1.301,54,1.301,55,0.569,60,1.415,93,0.819,103,2.082,112,1.646,113,1.526,114,1.646,115,1.93,143,3.143,155,2.592,156,2.312,163,1.604,164,1.99,172,1.776,177,1.93,197,2.469,198,2.278,237,3.143,250,2.965,272,2.701,273,2.106,338,4.209,339,2.278,340,4.647,342,3.282,343,4.209,345,2.278,354,2.278,393,2.714,394,2.278,395,3.91,396,2.714,397,2.714,398,3.91,399,2.714,400,3.91,401,2.278,402,2.714,403,2.714,404,2.714,405,2.714,406,2.714,407,2.714,408,2.714,409,1.776,410,2.714,411,2.714]],["title/injectables/PostgresConfigService.html",[72,1.951,93,0.691]],["body/injectables/PostgresConfigService.html",[3,0.376,4,0.376,5,0.334,7,0.334,16,0.686,17,0.029,21,0.822,36,1.712,39,0.633,43,0.376,44,0.146,45,0.02,46,0.02,51,1.544,54,1.155,55,0.727,58,2.27,60,1.071,72,2.741,80,1.869,82,2.051,93,0.971,94,1.576,112,1.246,113,1.155,114,1.246,177,1.712,180,3.913,189,1.869,254,2.27,287,2.27,359,2.912,401,2.912,412,2.912,413,5.576,414,3.469,415,3.469,416,5.224,417,4.637,418,3.469,419,3.469,420,3.469,421,3.469,422,3.469,423,3.469,424,3.469,425,3.469,426,3.469,427,3.469,428,3.469,429,3.469]],["title/classes/RefreshTokenDto.html",[44,0.139,117,1.951]],["body/classes/RefreshTokenDto.html",[3,0.464,4,0.464,5,0.413,7,0.413,8,1.767,16,0.633,17,0.029,18,1.205,19,1.537,21,0.758,39,0.518,43,0.464,44,0.223,45,0.023,46,0.023,117,3.139,215,4.234,280,2.531,293,4.234,300,2.801,430,4.457,431,3.593,432,4.281]],["title/entities/Role.html",[0,1.384,384,1.778]],["body/entities/Role.html",[0,1.768,2,1.785,3,0.328,4,0.328,5,0.291,7,0.468,8,1.404,13,3.18,14,1.751,16,0.778,17,0.029,18,0.957,19,1.889,20,2.759,21,0.932,30,2.759,31,3.18,35,3.858,36,2.83,39,0.588,40,1.626,42,1.49,43,0.328,44,0.127,45,0.019,46,0.019,113,1.618,240,2.389,241,1.785,384,2.271,385,3.093,389,3.564,390,2.214,433,2.533,434,5.535,435,5.535,436,3.019,437,3.019,438,3.019,439,4.217,440,3.019,441,4.217,442,3.019]],["title/classes/TokenDto.html",[44,0.139,139,1.951]],["body/classes/TokenDto.html",[3,0.413,4,0.413,5,0.367,7,0.367,8,1.641,16,0.809,17,0.029,18,1.464,21,0.969,43,0.413,44,0.16,45,0.022,46,0.022,112,1.367,113,1.267,114,1.367,139,2.914,177,1.879,207,5.027,215,4.58,280,2.251,443,3.195,444,4.93,445,4.93,446,3.807,447,3.807,448,3.807]],["title/entities/User.html",[0,1.384,14,1.099]],["body/entities/User.html",[0,1.311,1,2.928,2,1.191,3,0.219,4,0.219,5,0.194,7,0.417,8,1.041,11,3.218,12,3.218,13,2.509,14,1.041,16,0.879,17,0.029,18,1.273,19,2.11,20,3.794,21,1.041,25,3.918,26,3.218,28,3.218,30,2.047,31,2.509,35,3.432,36,2.818,39,0.464,42,0.994,43,0.219,44,0.085,45,0.014,46,0.014,189,2.065,202,1.478,228,2.294,270,2.047,283,3.218,284,2.812,285,3.218,286,3.218,287,2.509,380,3.927,384,2.328,385,1.478,388,1.478,389,2.294,390,2.294,449,1.691,450,3.834,451,3.834,452,3.834,453,2.015,454,3.128,455,2.015,456,2.015,457,2.015,458,3.628,459,2.015,460,2.015,461,2.015,462,3.128,463,3.128,464,2.015,465,2.015,466,2.015,467,3.128,468,2.015,469,2.015,470,2.015,471,2.015,472,3.128,473,2.015,474,2.015,475,1.691,476,3.128]],["title/modules/UserModule.html",[62,1.499,71,1.778]],["body/modules/UserModule.html",[1,2.677,3,0.363,4,0.363,5,0.323,14,1.114,17,0.029,39,0.745,42,1.652,43,0.363,44,0.141,45,0.02,46,0.02,55,0.701,62,2.056,64,1.652,65,2.439,71,3.259,73,2.962,74,2.19,75,2.19,77,3.32,78,2.19,81,2.81,82,1.979,159,3.8,179,3.453,240,2.056,241,1.979,384,2.439,388,2.455,475,2.81,477,2.81,478,2.81,479,2.81,480,3.348,481,3.32,482,2.81,483,3.348,484,3.348]],["title/injectables/UserService.html",[93,0.691,179,1.778]],["body/injectables/UserService.html",[3,0.365,4,0.365,5,0.324,7,0.324,8,1.511,14,1.119,16,0.671,17,0.029,18,1.167,19,1.207,21,0.804,39,0.667,42,1.659,43,0.365,44,0.141,45,0.02,46,0.02,51,1.511,54,1.119,55,0.704,60,1.037,82,1.987,93,0.951,94,1.526,103,2.335,112,1.207,113,1.119,114,1.207,115,2.241,143,3.039,179,2.445,284,2.465,287,2.199,481,3.77,482,2.821,485,2.821,486,5.14,487,5.14,488,3.361,489,3.361,490,5.505,491,4.54,492,3.361,493,3.361,494,3.361]],["title/coverage.html",[495,3.289]],["body/coverage.html",[0,1.987,1,1.425,5,0.232,6,2.022,14,0.802,16,0.356,17,0.029,44,0.213,45,0.016,46,0.016,47,2.112,48,1.577,50,2.022,56,1.298,72,1.425,93,1.152,95,2.022,99,1.577,100,2.022,107,1.425,117,1.425,133,1.01,136,1.577,139,1.425,155,1.094,156,1.425,157,1.425,165,1.577,174,2.022,179,1.298,195,1.767,216,1.425,232,2.301,233,2.5,240,1.628,251,1.93,252,1.425,268,1.298,273,1.298,275,1.425,279,1.767,281,2.022,282,2.022,302,1.577,303,2.022,336,2.022,337,2.022,348,1.767,357,2.022,375,2.022,378,3.008,384,1.298,392,1.767,394,2.022,409,2.8,412,2.022,430,2.022,431,2.022,433,2.022,443,2.022,449,2.022,485,2.022,495,1.767,496,2.022,497,2.41,498,2.41,499,6.532,500,5.772,501,5.309,502,5.498,503,2.41,504,4.739,505,3.584,506,3.008,507,2.022,508,2.022,509,2.41,510,2.41,511,3.008,512,3.584,513,3.584,514,2.022,515,2.41,516,2.41]],["title/dependencies.html",[65,2.135,517,2.322]],["body/dependencies.html",[17,0.03,42,1.659,44,0.191,45,0.02,46,0.02,55,0.704,65,1.81,80,1.81,82,1.987,130,2.465,132,2.199,161,2.465,166,2.465,172,2.199,238,2.199,300,2.199,312,2.465,327,2.821,347,2.465,368,2.821,518,3.361,519,3.361,520,5.14,521,3.361,522,3.361,523,3.361,524,4.54,525,4.54,526,5.505,527,3.361,528,3.361,529,3.361,530,3.361,531,3.361,532,2.821,533,3.361,534,3.361,535,3.361,536,3.361,537,3.361,538,3.361,539,3.361,540,3.361,541,3.81,542,3.361,543,3.361,544,3.361,545,3.361,546,3.361,547,3.361,548,3.361,549,3.361,550,3.361,551,3.361,552,3.361,553,3.361,554,3.361,555,3.361]],["title/miscellaneous/enumerations.html",[556,1.257,557,3.327]],["body/miscellaneous/enumerations.html",[7,0.425,17,0.028,45,0.024,46,0.024,232,2.004,233,2.67,243,3.199,244,3.54,245,3.54,246,3.54,247,3.54,248,3.54,289,4.096,556,2.004,557,3.703,558,3.236]],["title/miscellaneous/functions.html",[556,1.257,559,3.327]],["body/miscellaneous/functions.html",[7,0.346,16,0.701,17,0.025,18,1.449,45,0.021,46,0.021,112,1.702,113,1.578,114,1.702,146,3.101,189,1.931,195,3.476,289,2.346,409,3.101,507,3.009,508,4.456,511,3.009,514,3.978,532,3.978,556,1.628,559,3.009,560,3.585,561,4.74,562,3.585,563,5.875,564,4.74,565,5.65,566,5.31,567,3.585,568,3.585,569,3.585,570,3.585,571,4.74,572,5.31,573,4.74,574,3.585,575,3.585,576,3.585,577,3.585,578,3.585]],["title/index.html",[7,0.267,579,2.767,580,2.767]],["body/index.html",[17,0.029,45,0.02,46,0.02,146,2.19,481,2.455,495,2.455,496,2.81,541,2.81,581,3.348,582,3.348,583,4.528,584,3.348,585,3.348,586,3.348,587,3.348,588,3.348,589,3.348,590,3.348,591,3.348,592,3.348,593,3.348,594,6.051,595,3.348,596,4.528,597,3.348,598,5.918,599,3.348,600,3.348,601,4.528,602,3.348,603,3.348,604,3.348,605,5.13,606,4.528,607,3.348,608,3.348,609,3.348,610,3.348,611,4.528,612,4.528,613,3.348,614,3.348,615,3.348,616,3.348,617,3.348,618,3.348,619,3.348,620,3.348,621,3.348,622,4.528,623,3.348,624,3.348,625,3.348,626,3.348,627,5.13,628,3.348,629,3.348,630,3.348]],["title/modules.html",[64,2.213]],["body/modules.html",[17,0.025,45,0.025,46,0.025,63,3.027,64,2.283,69,2.735,70,2.735,71,2.492,631,5.974,632,5.974,633,5.974,634,6.199,635,4.626,636,4.626]],["title/overview.html",[637,3.764]],["body/overview.html",[2,1.816,17,0.028,45,0.019,46,0.019,49,1.517,56,2.642,63,4.135,64,1.517,65,2.299,66,2.579,67,2.579,68,2.579,69,3.788,70,2.9,71,3.185,72,2.9,73,2.793,74,2.01,75,2.01,94,1.396,133,2.479,151,2.579,152,2.579,154,2.579,155,2.686,156,3.134,157,2.9,179,3.185,278,2.253,280,1.816,392,2.253,477,2.579,478,2.579,479,2.579,637,2.579,638,4.269,639,3.073,640,3.073,641,3.073,642,3.073,643,3.073]],["title/properties.html",[8,1.32,517,2.322]],["body/properties.html",[8,1.618,17,0.029,45,0.025,46,0.025,126,4.08,146,3.181,644,4.861,645,4.861,646,4.861,647,4.861]],["title/miscellaneous/typealiases.html",[556,1.257,648,3.964]],["body/miscellaneous/typealiases.html",[7,0.43,16,0.659,17,0.026,45,0.024,46,0.024,232,2.025,233,3.099,237,2.636,249,3.563,250,3.219,268,2.401,271,3.846,272,2.933,409,2.917,556,2.025,558,4.49,649,4.458]],["title/miscellaneous/variables.html",[556,1.257,650,3.327]],["body/miscellaneous/variables.html",[7,0.386,16,0.753,17,0.029,18,1.155,36,1.975,45,0.022,46,0.022,136,3.331,232,1.818,233,2.763,272,2.155,273,2.742,274,2.618,275,3.009,276,3.331,277,2.618,289,3.855,348,3.733,352,3.359,458,4.944,506,3.359,556,1.818,558,3.733,650,3.359,651,5.09,652,4.002]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"entities/Address.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"classes/CreateUserDto.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"entities/Permission.html":{},"guards/PoliciesGuard.html":{},"injectables/PostgresConfigService.html":{},"classes/RefreshTokenDto.html":{},"entities/Role.html":{},"classes/TokenDto.html":{},"entities/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":499,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":644,"title":{},"body":{"properties.html":{}}}],["0.0.8",{"_index":519,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":548,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":536,"title":{},"body":{"dependencies.html":{}}}],["0.3.6",{"_index":555,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":535,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":500,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":501,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":502,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":505,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":509,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":503,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":510,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":642,"title":{},"body":{"overview.html":{}}}],["1/1",{"_index":513,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":333,"title":{},"body":{"modules/HealthModule.html":{}}}],["100",{"_index":512,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":643,"title":{},"body":{"overview.html":{}}}],["2.0.1",{"_index":530,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":521,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":639,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":550,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":538,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":638,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":543,"title":{},"body":{"dependencies.html":{}}}],["4.4.0",{"_index":554,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":641,"title":{},"body":{"overview.html":{}}}],["5.0.1",{"_index":533,"title":{},"body":{"dependencies.html":{}}}],["5.2.0",{"_index":542,"title":{},"body":{"dependencies.html":{}}}],["5.2.1",{"_index":528,"title":{},"body":{"dependencies.html":{}}}],["5.4.4",{"_index":518,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":331,"title":{},"body":{"modules/HealthModule.html":{}}}],["7",{"_index":640,"title":{},"body":{"overview.html":{}}}],["7.1.0",{"_index":540,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":552,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":520,"title":{},"body":{"dependencies.html":{}}}],["8.0.1",{"_index":522,"title":{},"body":{"dependencies.html":{}}}],["8.0.6",{"_index":529,"title":{},"body":{"dependencies.html":{}}}],["8.1.4",{"_index":531,"title":{},"body":{"dependencies.html":{}}}],["8.2.2",{"_index":523,"title":{},"body":{"dependencies.html":{}}}],["8.4.6",{"_index":527,"title":{},"body":{"dependencies.html":{}}}],["8.7.3",{"_index":545,"title":{},"body":{"dependencies.html":{}}}],["ability",{"_index":237,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{},"miscellaneous/typealiases.html":{}}}],["ability.factory",{"_index":164,"title":{},"body":{"modules/AuthModule.html":{},"entities/Permission.html":{},"guards/PoliciesGuard.html":{}}}],["ability.factory.ts",{"_index":233,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ability.factory.ts:25",{"_index":236,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["ability.factory.ts:41",{"_index":335,"title":{},"body":{"interfaces/IPolicyHandler.html":{}}}],["acc",{"_index":262,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{}}}],["access_token",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{},"classes/TokenDto.html":{}}}],["action",{"_index":253,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"entities/Permission.html":{}}}],["address",{"_index":1,"title":{"entities/Address.html":{}},"body":{"entities/Address.html":{},"entities/User.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["address.user",{"_index":454,"title":{},"body":{"entities/User.html":{}}}],["addresses",{"_index":450,"title":{},"body":{"entities/User.html":{}}}],["aliases",{"_index":649,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apiforbiddenresponse",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{}}}],["apitags('auth",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('health",{"_index":315,"title":{},"body":{"controllers/HealthController.html":{}}}],["apiunauthorizedresponse",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{}}}],["app",{"_index":596,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":57,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_guard",{"_index":171,"title":{},"body":{"modules/AuthModule.html":{}}}],["appability",{"_index":250,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{},"miscellaneous/typealiases.html":{}}}],["appcontroller",{"_index":48,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":629,"title":{},"body":{"index.html":{}}}],["applications",{"_index":589,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":63,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":56,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtStrategy.html":{},"guards/PoliciesGuard.html":{},"injectables/UserService.html":{}}}],["auth",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":170,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":167,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard.ts",{"_index":337,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:12",{"_index":344,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:7",{"_index":341,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.service",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{}}}],["auth/auth.module",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":99,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":346,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('jwt",{"_index":350,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":69,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":647,"title":{},"body":{"properties.html":{}}}],["authservice",{"_index":133,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"coverage.html":{},"overview.html":{}}}],["autoloadentities",{"_index":429,"title":{},"body":{"injectables/PostgresConfigService.html":{}}}],["available",{"_index":636,"title":{},"body":{"modules.html":{}}}],["await",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{},"guards/PoliciesGuard.html":{}}}],["bcrypt",{"_index":532,"title":{},"body":{"dependencies.html":{},"miscellaneous/functions.html":{}}}],["body",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{}}}],["boolean",{"_index":270,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"entities/User.html":{}}}],["bootstrap",{"_index":508,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":634,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":631,"title":{},"body":{"modules.html":{}}}],["building",{"_index":584,"title":{},"body":{"index.html":{}}}],["called",{"_index":257,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{}}}],["canactivate",{"_index":338,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/PoliciesGuard.html":{}}}],["canactivate(context",{"_index":342,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/PoliciesGuard.html":{}}}],["casl",{"_index":163,"title":{},"body":{"modules/AuthModule.html":{},"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{}}}],["casl/ability",{"_index":238,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"dependencies.html":{}}}],["caslabilityfactory",{"_index":155,"title":{"injectables/CaslAbilityFactory.html":{}},"body":{"modules/AuthModule.html":{},"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{},"coverage.html":{},"overview.html":{}}}],["caslpermission",{"_index":252,"title":{"interfaces/CaslPermission.html":{}},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"coverage.html":{}}}],["caslpermissions",{"_index":264,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{}}}],["catch",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{}}}],["check",{"_index":305,"title":{},"body":{"controllers/HealthController.html":{}}}],["check_policies_key",{"_index":273,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["check_policy",{"_index":274,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"miscellaneous/variables.html":{}}}],["checkpolicies",{"_index":275,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["city",{"_index":9,"title":{},"body":{"entities/Address.html":{}}}],["class",{"_index":44,"title":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/TokenDto.html":{}},"body":{"entities/Address.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"classes/CreateUserDto.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"entities/Permission.html":{},"guards/PoliciesGuard.html":{},"injectables/PostgresConfigService.html":{},"classes/RefreshTokenDto.html":{},"entities/Role.html":{},"classes/TokenDto.html":{},"entities/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":280,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/RefreshTokenDto.html":{},"classes/TokenDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":151,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":154,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":153,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":152,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":477,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":478,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":479,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["code",{"_index":626,"title":{},"body":{"index.html":{}}}],["column",{"_index":20,"title":{},"body":{"entities/Address.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["column({default",{"_index":467,"title":{},"body":{"entities/User.html":{}}}],["column({nullable",{"_index":457,"title":{},"body":{"entities/User.html":{}}}],["column({unique",{"_index":462,"title":{},"body":{"entities/User.html":{}}}],["command",{"_index":621,"title":{},"body":{"index.html":{}}}],["compare",{"_index":573,"title":{},"body":{"miscellaneous/functions.html":{}}}],["comparepasswords",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["comparepasswords(password",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{}}}],["comparepasswords(rawpassword",{"_index":562,"title":{},"body":{"miscellaneous/functions.html":{}}}],["compares",{"_index":567,"title":{},"body":{"miscellaneous/functions.html":{}}}],["compodoc/compodoc",{"_index":617,"title":{},"body":{"index.html":{}}}],["compose",{"_index":606,"title":{},"body":{"index.html":{}}}],["config",{"_index":317,"title":{},"body":{"controllers/HealthController.html":{}}}],["config/postgres.config.service",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{},"controllers/HealthController.html":{},"injectables/JwtStrategy.html":{},"injectables/PostgresConfigService.html":{}}}],["configservice.get('access_token_secret",{"_index":373,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["configservice.get('app_url",{"_index":374,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["const",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"guards/PoliciesGuard.html":{}}}],["constructor",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{},"controllers/HealthController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"guards/PoliciesGuard.html":{},"injectables/PostgresConfigService.html":{},"classes/TokenDto.html":{}}}],["constructor(access_token",{"_index":444,"title":{},"body":{"classes/TokenDto.html":{}}}],["constructor(configservice",{"_index":359,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/PostgresConfigService.html":{}}}],["constructor(private",{"_index":58,"title":{},"body":{"controllers/AppController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PostgresConfigService.html":{}}}],["constructor(reflector",{"_index":339,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/PoliciesGuard.html":{}}}],["constructor(userservice",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{}}}],["context",{"_index":345,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/PoliciesGuard.html":{}}}],["context.getclass",{"_index":355,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.gethandler",{"_index":354,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/PoliciesGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":404,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["controller",{"_index":47,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/HealthController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/HealthController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('health",{"_index":314,"title":{},"body":{"controllers/HealthController.html":{}}}],["controllers",{"_index":49,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"overview.html":{}}}],["country",{"_index":10,"title":{},"body":{"entities/Address.html":{}}}],["coverage",{"_index":495,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":244,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"miscellaneous/enumerations.html":{}}}],["createdatecolumn",{"_index":26,"title":{},"body":{"entities/Address.html":{},"entities/User.html":{}}}],["createforuser",{"_index":234,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["createforuser(user",{"_index":235,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{}}}],["createtypeormoptions",{"_index":413,"title":{},"body":{"injectables/PostgresConfigService.html":{}}}],["createuserdto",{"_index":279,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["credentials",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["csrf",{"_index":537,"title":{},"body":{"dependencies.html":{}}}],["database",{"_index":254,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"injectables/PostgresConfigService.html":{}}}],["date",{"_index":25,"title":{},"body":{"entities/Address.html":{},"classes/CreateUserDto.html":{},"entities/User.html":{}}}],["datecreated",{"_index":11,"title":{},"body":{"entities/Address.html":{},"entities/User.html":{}}}],["dateofbirth",{"_index":283,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/User.html":{}}}],["dateupdated",{"_index":12,"title":{},"body":{"entities/Address.html":{},"entities/User.html":{}}}],["db",{"_index":318,"title":{},"body":{"controllers/HealthController.html":{}}}],["dbpermissions",{"_index":260,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{}}}],["dbpermissions.map((p",{"_index":265,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{}}}],["decorators",{"_index":19,"title":{},"body":{"entities/Address.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"controllers/HealthController.html":{},"classes/LoginDto.html":{},"entities/Permission.html":{},"classes/RefreshTokenDto.html":{},"entities/Role.html":{},"entities/User.html":{},"injectables/UserService.html":{}}}],["default",{"_index":458,"title":{},"body":{"entities/User.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":21,"title":{},"body":{"entities/Address.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CreateUserDto.html":{},"controllers/HealthController.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"entities/Permission.html":{},"guards/PoliciesGuard.html":{},"injectables/PostgresConfigService.html":{},"classes/RefreshTokenDto.html":{},"entities/Role.html":{},"classes/TokenDto.html":{},"entities/User.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":247,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"miscellaneous/enumerations.html":{}}}],["dependencies",{"_index":65,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["dev",{"_index":428,"title":{},"body":{"injectables/PostgresConfigService.html":{}}}],["dev.yml",{"_index":608,"title":{},"body":{"index.html":{}}}],["development",{"_index":597,"title":{},"body":{"index.html":{}}}],["docker",{"_index":605,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":496,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dto",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{}}}],["e2e",{"_index":613,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":585,"title":{},"body":{"index.html":{}}}],["email",{"_index":284,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/User.html":{},"injectables/UserService.html":{}}}],["emailorusername",{"_index":490,"title":{},"body":{"injectables/UserService.html":{}}}],["encoded",{"_index":578,"title":{},"body":{"miscellaneous/functions.html":{}}}],["encodepassword",{"_index":514,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["encodepassword(rawpassword",{"_index":574,"title":{},"body":{"miscellaneous/functions.html":{}}}],["encodes",{"_index":575,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entities",{"_index":2,"title":{},"body":{"entities/Address.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{},"overview.html":{}}}],["entity",{"_index":0,"title":{"entities/Address.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{}},"body":{"entities/Address.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{},"coverage.html":{}}}],["enum",{"_index":242,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{}}}],["enumerations",{"_index":557,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["execpolicyhandler",{"_index":395,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["execpolicyhandler(handler",{"_index":398,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["executioncontext",{"_index":343,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/PoliciesGuard.html":{}}}],["expiresin",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":43,"title":{},"body":{"entities/Address.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"classes/CreateUserDto.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"entities/Permission.html":{},"guards/PoliciesGuard.html":{},"injectables/PostgresConfigService.html":{},"classes/RefreshTokenDto.html":{},"entities/Role.html":{},"classes/TokenDto.html":{},"entities/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":159,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["express",{"_index":525,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":349,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["extractjwt",{"_index":366,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":371,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["f",{"_index":607,"title":{},"body":{"index.html":{}}}],["false",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"entities/User.html":{}}}],["fast",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{}}}],["fastify",{"_index":526,"title":{},"body":{"dependencies.html":{}}}],["file",{"_index":5,"title":{},"body":{"entities/Address.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"classes/CreateUserDto.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"entities/Permission.html":{},"guards/PoliciesGuard.html":{},"injectables/PostgresConfigService.html":{},"classes/RefreshTokenDto.html":{},"entities/Role.html":{},"classes/TokenDto.html":{},"entities/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["findbyusernameoremail",{"_index":487,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyusernameoremail(emailorusername",{"_index":488,"title":{},"body":{"injectables/UserService.html":{}}}],["firstname",{"_index":285,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/User.html":{}}}],["forbiddenexception",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{}}}],["forbiddenexception('invalid",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{}}}],["framework",{"_index":583,"title":{},"body":{"index.html":{}}}],["function",{"_index":409,"title":{},"body":{"guards/PoliciesGuard.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":559,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generatenewtoken",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatenewtoken(user",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{}}}],["get()@healthcheck",{"_index":306,"title":{},"body":{"controllers/HealthController.html":{}}}],["gethello",{"_index":52,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":579,"title":{"index.html":{}},"body":{}}],["graph",{"_index":635,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":392,"title":{"guards/PoliciesGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":393,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["handle",{"_index":334,"title":{},"body":{"interfaces/IPolicyHandler.html":{}}}],["handle(ability",{"_index":269,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{}}}],["handler",{"_index":400,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["handler(ability",{"_index":410,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["handler.handle(ability",{"_index":411,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["handlers",{"_index":276,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"miscellaneous/variables.html":{}}}],["hash",{"_index":563,"title":{},"body":{"miscellaneous/functions.html":{}}}],["health",{"_index":304,"title":{},"body":{"controllers/HealthController.html":{}}}],["health.controller",{"_index":325,"title":{},"body":{"modules/HealthModule.html":{}}}],["health/health.module",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["healthcheck",{"_index":308,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":309,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":302,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":70,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["hello",{"_index":97,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":539,"title":{},"body":{"dependencies.html":{}}}],["host",{"_index":419,"title":{},"body":{"injectables/PostgresConfigService.html":{}}}],["http",{"_index":316,"title":{},"body":{"controllers/HealthController.html":{}}}],["http://localhost:3000:/api/docs",{"_index":630,"title":{},"body":{"index.html":{}}}],["http://localhost:8080",{"_index":623,"title":{},"body":{"index.html":{}}}],["httphealthindicator",{"_index":310,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpmodule",{"_index":326,"title":{},"body":{"modules/HealthModule.html":{}}}],["id",{"_index":13,"title":{},"body":{"entities/Address.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["identifier",{"_index":497,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["implements",{"_index":401,"title":{},"body":{"guards/PoliciesGuard.html":{},"injectables/PostgresConfigService.html":{}}}],["import",{"_index":39,"title":{},"body":{"entities/Address.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"classes/CreateUserDto.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"entities/Permission.html":{},"guards/PoliciesGuard.html":{},"injectables/PostgresConfigService.html":{},"classes/RefreshTokenDto.html":{},"entities/Role.html":{},"entities/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/UserModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"entities/Address.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"classes/CreateUserDto.html":{},"controllers/HealthController.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"entities/Permission.html":{},"guards/PoliciesGuard.html":{},"injectables/PostgresConfigService.html":{},"classes/RefreshTokenDto.html":{},"entities/Role.html":{},"classes/TokenDto.html":{},"entities/User.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index()@column({unique",{"_index":437,"title":{},"body":{"entities/Role.html":{}}}],["info",{"_index":3,"title":{},"body":{"entities/Address.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"classes/CreateUserDto.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"entities/Permission.html":{},"guards/PoliciesGuard.html":{},"injectables/PostgresConfigService.html":{},"classes/RefreshTokenDto.html":{},"entities/Role.html":{},"classes/TokenDto.html":{},"entities/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["inject",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["injectable",{"_index":93,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PostgresConfigService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"guards/PoliciesGuard.html":{},"injectables/PostgresConfigService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":94,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PostgresConfigService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectrepository",{"_index":493,"title":{},"body":{"injectables/UserService.html":{}}}],["injectrepository(user",{"_index":491,"title":{},"body":{"injectables/UserService.html":{}}}],["installation",{"_index":593,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":595,"title":{},"body":{"index.html":{}}}],["interface",{"_index":251,"title":{"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{}},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"coverage.html":{}}}],["interfaces",{"_index":278,"title":{},"body":{"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"overview.html":{}}}],["invalid",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{}}}],["invoice",{"_index":255,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{}}}],["ipolicyhandler",{"_index":268,"title":{"interfaces/IPolicyHandler.html":{}},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["is_public_key",{"_index":348,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isaccountactivated",{"_index":451,"title":{},"body":{"entities/User.html":{}}}],["isdate",{"_index":298,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isdate()@validateif((_object",{"_index":288,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isemail",{"_index":291,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isemailverified",{"_index":452,"title":{},"body":{"entities/User.html":{}}}],["isglobal",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["isnotempty",{"_index":293,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/RefreshTokenDto.html":{}}}],["ispublic",{"_index":352,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["issuer",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["it.permissions",{"_index":263,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{}}}],["jwt",{"_index":166,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":168,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtauthguard",{"_index":165,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":370,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtservice",{"_index":160,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":157,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["lastname",{"_index":286,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/User.html":{}}}],["license",{"_index":645,"title":{},"body":{"properties.html":{}}}],["limit",{"_index":332,"title":{},"body":{"modules/HealthModule.html":{}}}],["login",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(logindto",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login.dto",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logindto",{"_index":107,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["logindto.password",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{}}}],["logindto.usernameoremail",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{}}}],["look",{"_index":625,"title":{},"body":{"index.html":{}}}],["manage",{"_index":248,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"miscellaneous/enumerations.html":{}}}],["manytomany",{"_index":389,"title":{},"body":{"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["manytomany(undefined",{"_index":385,"title":{},"body":{"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["manytoone",{"_index":41,"title":{},"body":{"entities/Address.html":{}}}],["manytoone(undefined",{"_index":33,"title":{},"body":{"entities/Address.html":{}}}],["matching",{"_index":46,"title":{},"body":{"entities/Address.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"classes/CreateUserDto.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"entities/Permission.html":{},"guards/PoliciesGuard.html":{},"injectables/PostgresConfigService.html":{},"classes/RefreshTokenDto.html":{},"entities/Role.html":{},"classes/TokenDto.html":{},"entities/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["memory",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{}}}],["metadata",{"_index":547,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":51,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"controllers/HealthController.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"guards/PoliciesGuard.html":{},"injectables/PostgresConfigService.html":{},"injectables/UserService.html":{}}}],["miscellaneous",{"_index":556,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":601,"title":{},"body":{"index.html":{}}}],["module",{"_index":62,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/UserModule.html":{}}}],["modules",{"_index":64,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["name",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"guards/PoliciesGuard.html":{},"injectables/PostgresConfigService.html":{},"entities/Role.html":{},"classes/TokenDto.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["nest",{"_index":590,"title":{},"body":{"index.html":{}}}],["nestjs/axios",{"_index":327,"title":{},"body":{"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":55,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"guards/PoliciesGuard.html":{},"injectables/PostgresConfigService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"controllers/HealthController.html":{},"injectables/JwtStrategy.html":{},"injectables/PostgresConfigService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":172,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"guards/PoliciesGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":161,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":347,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":524,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":312,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/throttler",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"injectables/PostgresConfigService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["new",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"coverage.html":{}}}],["node.js",{"_index":582,"title":{},"body":{"index.html":{}}}],["npm",{"_index":594,"title":{},"body":{"index.html":{}}}],["npx",{"_index":616,"title":{},"body":{"index.html":{}}}],["null",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"entities/User.html":{}}}],["nullable",{"_index":35,"title":{},"body":{"entities/Address.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["number",{"_index":30,"title":{},"body":{"entities/Address.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["object",{"_index":258,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{}}}],["onetomany",{"_index":476,"title":{},"body":{"entities/User.html":{}}}],["onetomany(undefined",{"_index":453,"title":{},"body":{"entities/User.html":{}}}],["optional",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"guards/PoliciesGuard.html":{},"injectables/PostgresConfigService.html":{},"classes/TokenDto.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["order",{"_index":624,"title":{},"body":{"index.html":{}}}],["out",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":637,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":618,"title":{},"body":{"index.html":{}}}],["p.action",{"_index":266,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{}}}],["p.resource",{"_index":267,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{}}}],["package",{"_index":517,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":627,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"guards/PoliciesGuard.html":{},"injectables/PostgresConfigService.html":{},"classes/TokenDto.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["passport",{"_index":368,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportstrategy",{"_index":365,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":369,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"injectables/PostgresConfigService.html":{},"entities/User.html":{},"miscellaneous/functions.html":{}}}],["payload",{"_index":363,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["permission",{"_index":240,"title":{"entities/Permission.html":{}},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"entities/Permission.html":{},"entities/Role.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["permissionaction",{"_index":243,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"entities/Permission.html":{},"miscellaneous/enumerations.html":{}}}],["permissionobjecttype",{"_index":249,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"miscellaneous/typealiases.html":{}}}],["permissions",{"_index":434,"title":{},"body":{"entities/Role.html":{}}}],["permissions.roles",{"_index":439,"title":{},"body":{"entities/Role.html":{}}}],["pg",{"_index":544,"title":{},"body":{"dependencies.html":{}}}],["policies.guard",{"_index":169,"title":{},"body":{"modules/AuthModule.html":{}}}],["policiesguard",{"_index":156,"title":{"guards/PoliciesGuard.html":{}},"body":{"modules/AuthModule.html":{},"guards/PoliciesGuard.html":{},"coverage.html":{},"overview.html":{}}}],["policyhandler",{"_index":272,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["policyhandlercallback",{"_index":271,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"miscellaneous/typealiases.html":{}}}],["policyhandlers",{"_index":402,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["policyhandlers.every((handler",{"_index":406,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["port",{"_index":421,"title":{},"body":{"injectables/PostgresConfigService.html":{}}}],["post",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login')@version('1')@apiunauthorizedresponse({description",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('refreshtoken",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('refreshtoken')@version('1')@apiforbiddenresponse({description",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{}}}],["postgres",{"_index":418,"title":{},"body":{"injectables/PostgresConfigService.html":{}}}],["postgresconfigservice",{"_index":72,"title":{"injectables/PostgresConfigService.html":{}},"body":{"modules/AppModule.html":{},"injectables/PostgresConfigService.html":{},"coverage.html":{},"overview.html":{}}}],["prefix",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{}}}],["primarygeneratedcolumn",{"_index":31,"title":{},"body":{"entities/Address.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["private",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/HealthController.html":{},"guards/PoliciesGuard.html":{},"injectables/UserService.html":{}}}],["production",{"_index":603,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":581,"title":{},"body":{"index.html":{}}}],["project",{"_index":256,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{}}}],["promise",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{},"injectables/UserService.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"entities/Address.html":{},"interfaces/CaslPermission.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"entities/Permission.html":{},"classes/RefreshTokenDto.html":{},"entities/Role.html":{},"classes/TokenDto.html":{},"entities/User.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["provide",{"_index":173,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["public",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public.factory",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{}}}],["random",{"_index":576,"title":{},"body":{"miscellaneous/functions.html":{}}}],["raw",{"_index":565,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rawpassword",{"_index":571,"title":{},"body":{"miscellaneous/functions.html":{}}}],["read",{"_index":245,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"miscellaneous/enumerations.html":{}}}],["readonly",{"_index":59,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["reflect",{"_index":546,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":340,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/PoliciesGuard.html":{}}}],["refresh",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["refresh_token",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{},"classes/RefreshTokenDto.html":{},"classes/TokenDto.html":{}}}],["refreshtoken",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["refreshtoken(dto",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshtoken(refreshtokendto",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{}}}],["refreshtokendto",{"_index":117,"title":{"classes/RefreshTokenDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/RefreshTokenDto.html":{},"coverage.html":{}}}],["repository",{"_index":481,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["represents",{"_index":572,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reset",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resource",{"_index":379,"title":{},"body":{"entities/Permission.html":{}}}],["result",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{}}}],["results",{"_index":45,"title":{},"body":{"entities/Address.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"classes/CreateUserDto.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"entities/Permission.html":{},"guards/PoliciesGuard.html":{},"injectables/PostgresConfigService.html":{},"classes/RefreshTokenDto.html":{},"entities/Role.html":{},"classes/TokenDto.html":{},"entities/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":60,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"controllers/HealthController.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"guards/PoliciesGuard.html":{},"injectables/PostgresConfigService.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":54,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"controllers/HealthController.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"guards/PoliciesGuard.html":{},"injectables/PostgresConfigService.html":{},"injectables/UserService.html":{}}}],["rimraf",{"_index":549,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":384,"title":{"entities/Role.html":{}},"body":{"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["roles",{"_index":380,"title":{},"body":{"entities/Permission.html":{},"entities/User.html":{}}}],["roles.permissions",{"_index":386,"title":{},"body":{"entities/Permission.html":{}}}],["roles.users",{"_index":472,"title":{},"body":{"entities/User.html":{}}}],["run",{"_index":598,"title":{},"body":{"index.html":{}}}],["ruuning",{"_index":628,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":551,"title":{},"body":{"dependencies.html":{}}}],["safter",{"_index":620,"title":{},"body":{"index.html":{}}}],["salt",{"_index":577,"title":{},"body":{"miscellaneous/functions.html":{}}}],["same",{"_index":570,"title":{},"body":{"miscellaneous/functions.html":{}}}],["save",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{}}}],["scalable",{"_index":586,"title":{},"body":{"index.html":{}}}],["secret",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{}}}],["secretorkey",{"_index":372,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["see",{"_index":568,"title":{},"body":{"miscellaneous/functions.html":{}}}],["server",{"_index":587,"title":{},"body":{"index.html":{}}}],["setmetadata",{"_index":239,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{}}}],["setmetadata(check_policies_key",{"_index":277,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"miscellaneous/variables.html":{}}}],["setmetadata(is_public_key",{"_index":652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["side",{"_index":588,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"entities/Address.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"classes/CreateUserDto.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"entities/Permission.html":{},"guards/PoliciesGuard.html":{},"injectables/PostgresConfigService.html":{},"classes/RefreshTokenDto.html":{},"entities/Role.html":{},"classes/TokenDto.html":{},"entities/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["src/.../bcrypt.ts",{"_index":561,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../casl",{"_index":558,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":560,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../public.factory.ts",{"_index":651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/address/address.model",{"_index":475,"title":{},"body":{"entities/User.html":{},"modules/UserModule.html":{}}}],["src/address/address.model.ts",{"_index":6,"title":{},"body":{"entities/Address.html":{},"coverage.html":{}}}],["src/address/address.model.ts:14",{"_index":32,"title":{},"body":{"entities/Address.html":{}}}],["src/address/address.model.ts:17",{"_index":23,"title":{},"body":{"entities/Address.html":{}}}],["src/address/address.model.ts:20",{"_index":24,"title":{},"body":{"entities/Address.html":{}}}],["src/address/address.model.ts:23",{"_index":38,"title":{},"body":{"entities/Address.html":{}}}],["src/address/address.model.ts:26",{"_index":22,"title":{},"body":{"entities/Address.html":{}}}],["src/address/address.model.ts:29",{"_index":37,"title":{},"body":{"entities/Address.html":{}}}],["src/address/address.model.ts:32",{"_index":27,"title":{},"body":{"entities/Address.html":{}}}],["src/address/address.model.ts:35",{"_index":29,"title":{},"body":{"entities/Address.html":{}}}],["src/app.controller.ts",{"_index":50,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":53,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":95,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":96,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:32",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:39",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":158,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:16",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:23",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:36",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:50",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:63",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/casl",{"_index":232,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"entities/Permission.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/auth/jwt",{"_index":336,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":357,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:17",{"_index":362,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:7",{"_index":360,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/login.dto.ts",{"_index":375,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/login.dto.ts:5",{"_index":377,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/login.dto.ts:8",{"_index":376,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/policies.guard.ts",{"_index":394,"title":{},"body":{"guards/PoliciesGuard.html":{},"coverage.html":{}}}],["src/auth/policies.guard.ts:11",{"_index":396,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["src/auth/policies.guard.ts:17",{"_index":397,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["src/auth/policies.guard.ts:32",{"_index":399,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["src/auth/public.factory",{"_index":313,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/auth/public.factory.ts",{"_index":506,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/refresh",{"_index":430,"title":{},"body":{"classes/RefreshTokenDto.html":{},"coverage.html":{}}}],["src/auth/token.dto.ts",{"_index":443,"title":{},"body":{"classes/TokenDto.html":{},"coverage.html":{}}}],["src/auth/token.dto.ts:2",{"_index":446,"title":{},"body":{"classes/TokenDto.html":{}}}],["src/auth/token.dto.ts:3",{"_index":445,"title":{},"body":{"classes/TokenDto.html":{}}}],["src/config/postgres.config.service.ts",{"_index":412,"title":{},"body":{"injectables/PostgresConfigService.html":{},"coverage.html":{}}}],["src/config/postgres.config.service.ts:6",{"_index":414,"title":{},"body":{"injectables/PostgresConfigService.html":{}}}],["src/config/postgres.config.service.ts:9",{"_index":415,"title":{},"body":{"injectables/PostgresConfigService.html":{}}}],["src/health/health.controller.ts",{"_index":303,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:27",{"_index":307,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":323,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/main.ts",{"_index":507,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/permission/permission.model",{"_index":241,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"entities/Role.html":{},"modules/UserModule.html":{}}}],["src/permission/permission.model.ts",{"_index":378,"title":{},"body":{"entities/Permission.html":{},"coverage.html":{}}}],["src/permission/permission.model.ts:15",{"_index":382,"title":{},"body":{"entities/Permission.html":{}}}],["src/permission/permission.model.ts:18",{"_index":381,"title":{},"body":{"entities/Permission.html":{}}}],["src/permission/permission.model.ts:21",{"_index":383,"title":{},"body":{"entities/Permission.html":{}}}],["src/permission/permission.model.ts:24",{"_index":387,"title":{},"body":{"entities/Permission.html":{}}}],["src/role/role.model",{"_index":388,"title":{},"body":{"entities/Permission.html":{},"entities/User.html":{},"modules/UserModule.html":{}}}],["src/role/role.model.ts",{"_index":433,"title":{},"body":{"entities/Role.html":{},"coverage.html":{}}}],["src/role/role.model.ts:14",{"_index":436,"title":{},"body":{"entities/Role.html":{}}}],["src/role/role.model.ts:18",{"_index":438,"title":{},"body":{"entities/Role.html":{}}}],["src/role/role.model.ts:23",{"_index":440,"title":{},"body":{"entities/Role.html":{}}}],["src/role/role.model.ts:26",{"_index":442,"title":{},"body":{"entities/Role.html":{}}}],["src/user/create",{"_index":281,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/user.model",{"_index":40,"title":{},"body":{"entities/Address.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"entities/Role.html":{}}}],["src/user/user.model.ts",{"_index":449,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/user/user.model.ts:17",{"_index":466,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.model.ts:20",{"_index":465,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.model.ts:23",{"_index":470,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.model.ts:27",{"_index":474,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.model.ts:31",{"_index":464,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.model.ts:34",{"_index":469,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.model.ts:37",{"_index":468,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.model.ts:40",{"_index":471,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.model.ts:43",{"_index":460,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.model.ts:46",{"_index":455,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.model.ts:49",{"_index":456,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.model.ts:52",{"_index":461,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.model.ts:55",{"_index":473,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.module",{"_index":162,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/user/user.module.ts",{"_index":480,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/user/user.service.ts",{"_index":485,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:11",{"_index":489,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:9",{"_index":492,"title":{},"body":{"injectables/UserService.html":{}}}],["src/util/bcrypt",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/util/bcrypt.ts",{"_index":511,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":599,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":602,"title":{},"body":{"index.html":{}}}],["start:prodrunning",{"_index":604,"title":{},"body":{"index.html":{}}}],["started",{"_index":580,"title":{"index.html":{}},"body":{}}],["starter",{"_index":592,"title":{},"body":{"index.html":{}}}],["statements",{"_index":498,"title":{},"body":{"coverage.html":{}}}],["strategy",{"_index":367,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":18,"title":{},"body":{"entities/Address.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"classes/CreateUserDto.html":{},"interfaces/IPolicyHandler.html":{},"classes/LoginDto.html":{},"entities/Permission.html":{},"classes/RefreshTokenDto.html":{},"entities/Role.html":{},"classes/TokenDto.html":{},"entities/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["subject",{"_index":259,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{}}}],["super",{"_index":351,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["super.canactivate(context",{"_index":356,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["support",{"_index":632,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":633,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":541,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["synchronize",{"_index":426,"title":{},"body":{"injectables/PostgresConfigService.html":{}}}],["table",{"_index":516,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":515,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":564,"title":{},"body":{"miscellaneous/functions.html":{}}}],["terminusmodule",{"_index":324,"title":{},"body":{"modules/HealthModule.html":{}}}],["test",{"_index":612,"title":{},"body":{"index.html":{}}}],["test:covdocumentation",{"_index":615,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":614,"title":{},"body":{"index.html":{}}}],["tests",{"_index":611,"title":{},"body":{"index.html":{}}}],["text",{"_index":566,"title":{},"body":{"miscellaneous/functions.html":{}}}],["this.access_token",{"_index":447,"title":{},"body":{"classes/TokenDto.html":{}}}],["this.appservice.gethello",{"_index":61,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(logindto",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.refreshtoken(refreshtokendto",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.caslabilityfactory.createforuser(user",{"_index":405,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["this.config.get('app_url",{"_index":321,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get('access_token_expiration_time",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('access_token_secret",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('app_mode",{"_index":427,"title":{},"body":{"injectables/PostgresConfigService.html":{}}}],["this.configservice.get('app_url",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('postgres_database",{"_index":425,"title":{},"body":{"injectables/PostgresConfigService.html":{}}}],["this.configservice.get('postgres_host",{"_index":420,"title":{},"body":{"injectables/PostgresConfigService.html":{}}}],["this.configservice.get('postgres_password",{"_index":424,"title":{},"body":{"injectables/PostgresConfigService.html":{}}}],["this.configservice.get('postgres_port",{"_index":422,"title":{},"body":{"injectables/PostgresConfigService.html":{}}}],["this.configservice.get('postgres_user",{"_index":423,"title":{},"body":{"injectables/PostgresConfigService.html":{}}}],["this.db.pingcheck('postgres",{"_index":322,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.execpolicyhandler(handler",{"_index":407,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["this.generatenewtoken(result",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.generatenewtoken(user",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.health.check",{"_index":319,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck('basic",{"_index":320,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.jwtservice.sign(user",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(dto.refresh_token",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.reflector.get",{"_index":403,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["this.reflector.getallandoverride(is_public_key",{"_index":353,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["this.refresh_token",{"_index":448,"title":{},"body":{"classes/TokenDto.html":{}}}],["this.userrepository.findone",{"_index":494,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.findbyusernameoremail(usernameoremail",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.validateuser",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{}}}],["throttlerguard",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{}}}],["throttlermodule",{"_index":328,"title":{},"body":{"modules/HealthModule.html":{}}}],["throttlermodule.forroot",{"_index":329,"title":{},"body":{"modules/HealthModule.html":{}}}],["throw",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{}}}],["todo",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{}}}],["token",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["token.dto",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["token.dto.ts",{"_index":431,"title":{},"body":{"classes/RefreshTokenDto.html":{},"coverage.html":{}}}],["token.dto.ts:5",{"_index":432,"title":{},"body":{"classes/RefreshTokenDto.html":{}}}],["tokendto",{"_index":139,"title":{"classes/TokenDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/TokenDto.html":{},"coverage.html":{}}}],["tokendto(access_token",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{}}}],["transformer",{"_index":534,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":36,"title":{},"body":{"entities/Address.html":{},"modules/AppModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/PostgresConfigService.html":{},"entities/Role.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["true})@index",{"_index":463,"title":{},"body":{"entities/User.html":{}}}],["try",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{}}}],["tsconfig.json",{"_index":619,"title":{},"body":{"index.html":{}}}],["ttl",{"_index":330,"title":{},"body":{"modules/HealthModule.html":{}}}],["type",{"_index":16,"title":{},"body":{"entities/Address.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"classes/CreateUserDto.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"entities/Permission.html":{},"guards/PoliciesGuard.html":{},"injectables/PostgresConfigService.html":{},"classes/RefreshTokenDto.html":{},"entities/Role.html":{},"classes/TokenDto.html":{},"entities/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":648,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":408,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["typeorm",{"_index":42,"title":{},"body":{"entities/Address.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["typeormhealthindicator",{"_index":311,"title":{},"body":{"controllers/HealthController.html":{}}}],["typeormmodule",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":484,"title":{},"body":{"modules/UserModule.html":{}}}],["typeormmodule.forrootasync",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":416,"title":{},"body":{"injectables/PostgresConfigService.html":{}}}],["typeormoptionsfactory",{"_index":417,"title":{},"body":{"injectables/PostgresConfigService.html":{}}}],["typescript",{"_index":591,"title":{},"body":{"index.html":{}}}],["ui",{"_index":553,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorizedexception('wrong",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":459,"title":{},"body":{"entities/User.html":{}}}],["unique",{"_index":390,"title":{},"body":{"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["unique(['action",{"_index":391,"title":{},"body":{"entities/Permission.html":{}}}],["unit",{"_index":610,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":364,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["unlicensed",{"_index":646,"title":{},"body":{"properties.html":{}}}],["update",{"_index":246,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"miscellaneous/enumerations.html":{}}}],["updatedatecolumn",{"_index":28,"title":{},"body":{"entities/Address.html":{},"entities/User.html":{}}}],["uptest",{"_index":609,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["useguards",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{}}}],["useguards(throttlerguard",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{}}}],["user",{"_index":14,"title":{"entities/User.html":{}},"body":{"entities/Address.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{},"entities/Role.html":{},"entities/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user.addresses",{"_index":34,"title":{},"body":{"entities/Address.html":{}}}],["user.dto.ts",{"_index":282,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:11",{"_index":294,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:14",{"_index":295,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:17",{"_index":296,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:21",{"_index":290,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:5",{"_index":297,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:8",{"_index":292,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.model",{"_index":482,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["user.password",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.roles.reduce",{"_index":261,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{}}}],["user.service",{"_index":483,"title":{},"body":{"modules/UserModule.html":{}}}],["user/user.module",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["usermodule",{"_index":71,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":287,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/PostgresConfigService.html":{},"entities/User.html":{},"injectables/UserService.html":{}}}],["usernameoremail",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginDto.html":{}}}],["userrepository",{"_index":486,"title":{},"body":{"injectables/UserService.html":{}}}],["users",{"_index":435,"title":{},"body":{"entities/Role.html":{}}}],["users.roles",{"_index":441,"title":{},"body":{"entities/Role.html":{}}}],["userservice",{"_index":179,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["validate",{"_index":358,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":361,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validateif",{"_index":299,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["validateif((_object",{"_index":301,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["validateuser",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(usernameoremail",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{}}}],["validator",{"_index":300,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/RefreshTokenDto.html":{},"dependencies.html":{}}}],["value",{"_index":289,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":504,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":650,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{},"properties.html":{}}}],["version('1",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{}}}],["visit",{"_index":622,"title":{},"body":{"index.html":{}}}],["watch",{"_index":600,"title":{},"body":{"index.html":{}}}],["whether",{"_index":569,"title":{},"body":{"miscellaneous/functions.html":{}}}],["world",{"_index":98,"title":{},"body":{"injectables/AppService.html":{}}}],["wrong",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{}}}],["zipcode",{"_index":15,"title":{},"body":{"entities/Address.html":{}}}],["zoom",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"entities/Address.html":{"url":"entities/Address.html","title":"entity - Address","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Address\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/address/address.model.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                city\n                            \n                            \n                                country\n                            \n                            \n                                dateCreated\n                            \n                            \n                                dateUpdated\n                            \n                            \n                                id\n                            \n                            \n                                user\n                            \n                            \n                                zipCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/address/address.model.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/address/address.model.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/address/address.model.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/address/address.model.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateUpdated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/address/address.model.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/address/address.model.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.addresses, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/address/address.model.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        zipCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/address/address.model.ts:23\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { User } from 'src/user/user.model';\nimport {\n  Column,\n  CreateDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n\n@Entity()\nexport class Address {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  city: string;\n\n  @Column()\n  country: string;\n\n  @Column()\n  zipCode: string;\n\n  @Column()\n  address: string;\n\n  @ManyToOne(() => User, (user) => user.addresses, { nullable: true })\n  user: User;\n\n  @CreateDateColumn()\n  dateCreated: Date;\n\n  @UpdateDateColumn()\n  dateUpdated: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nPostgresConfigService\n\nPostgresConfigService\n\nAppModule -->\n\nPostgresConfigService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            PostgresConfigService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            HealthModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { PostgresConfigService } from './config/postgres.config.service';\nimport { HealthModule } from './health/health.module';\nimport { UserModule } from './user/user.module';\nimport { AuthModule } from './auth/auth.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n    }),\n    TypeOrmModule.forRootAsync({\n      useClass: PostgresConfigService,\n      inject: [PostgresConfigService],\n    }),\n    HealthModule,\n    UserModule,\n    AuthModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService, PostgresConfigService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                refreshToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginDto: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')@Version('1')@ApiUnauthorizedResponse({description: 'Wrong Credentials'})\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        refreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    refreshToken(refreshTokenDto: RefreshTokenDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('refreshToken')@Version('1')@ApiForbiddenResponse({description: 'Refresh Token is Invalid'})\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    refreshTokenDto\n                                    \n                                                RefreshTokenDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Inject,\n  Post,\n  UseGuards,\n  Version,\n} from '@nestjs/common';\nimport {\n  ApiForbiddenResponse,\n  ApiTags,\n  ApiUnauthorizedResponse,\n} from '@nestjs/swagger';\nimport { ThrottlerGuard } from '@nestjs/throttler';\nimport { AuthService } from './auth.service';\nimport { LoginDto } from './login.dto';\nimport { Public } from './public.factory';\nimport { RefreshTokenDto } from './refresh-token.dto';\nimport { TokenDto } from './token.dto';\n\n@Controller('auth')\n@UseGuards(ThrottlerGuard)\n@ApiTags('auth')\n@Public()\nexport class AuthController {\n  @Inject()\n  private readonly authService: AuthService;\n\n  @Post('login')\n  @Version('1')\n  @ApiUnauthorizedResponse({ description: 'Wrong Credentials' })\n  async login(@Body() loginDto: LoginDto): Promise {\n    return this.authService.login(loginDto);\n  }\n\n  @Post('refreshToken')\n  @Version('1')\n  @ApiForbiddenResponse({ description: 'Refresh Token is Invalid' })\n  async refreshToken(\n    @Body() refreshTokenDto: RefreshTokenDto,\n  ): Promise {\n    return this.authService.refreshToken(refreshTokenDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nCaslAbilityFactory \n\nCaslAbilityFactory \n\nCaslAbilityFactory  -->\n\nAuthModule->CaslAbilityFactory \n\n\n\n\n\nPoliciesGuard \n\nPoliciesGuard \n\nPoliciesGuard  -->\n\nAuthModule->PoliciesGuard \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nCaslAbilityFactory\n\nCaslAbilityFactory\n\nAuthModule -->\n\nCaslAbilityFactory->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            CaslAbilityFactory\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                        \n                            CaslAbilityFactory\n                        \n                        \n                            PoliciesGuard\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { UserModule } from 'src/user/user.module';\nimport { AuthService } from './auth.service';\nimport { CaslAbilityFactory } from './casl-ability.factory';\nimport { JwtAuthGuard } from './jwt-auth.guard';\nimport { JwtStrategy } from './jwt.strategy';\nimport { PoliciesGuard } from './policies.guard';\nimport { AuthController } from './auth.controller';\nimport { APP_GUARD } from '@nestjs/core';\n\n@Module({\n  imports: [UserModule],\n  providers: [\n    AuthService,\n    JwtService,\n    JwtStrategy,\n    CaslAbilityFactory,\n    {\n      provide: APP_GUARD,\n      useClass: JwtAuthGuard,\n    },\n    PoliciesGuard,\n  ],\n  exports: [AuthService, CaslAbilityFactory, PoliciesGuard],\n  controllers: [AuthController],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                generateNewToken\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                refreshToken\n                            \n                            \n                                    Private\n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, jwtService: JwtService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        generateNewToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateNewToken(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginDto: LoginDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        refreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    refreshToken(dto: RefreshTokenDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                RefreshTokenDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(usernameOrEmail: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    usernameOrEmail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ForbiddenException,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { JwtService } from '@nestjs/jwt';\nimport { User } from 'src/user/user.model';\nimport { UserService } from 'src/user/user.service';\nimport { comparePasswords } from 'src/util/bcrypt';\nimport { LoginDto } from './login.dto';\nimport { RefreshTokenDto } from './refresh-token.dto';\nimport { TokenDto } from './token.dto';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly userService: UserService,\n    private readonly jwtService: JwtService,\n    private readonly configService: ConfigService,\n  ) {}\n\n  private async validateUser(\n    usernameOrEmail: string,\n    password: string,\n  ): Promise {\n    const user = await this.userService.findByUsernameOrEmail(usernameOrEmail);\n    if (user && comparePasswords(password, user.password)) {\n      return user;\n    } else {\n      return null;\n    }\n  }\n\n  //TODO: Save refresh token in fast memory\n  private generateNewToken(user: User) {\n    const access_token = this.jwtService.sign(user, {\n      issuer: this.configService.get('APP_URL'),\n      secret: this.configService.get('ACCESS_TOKEN_SECRET'),\n      expiresIn: this.configService.get('ACCESS_TOKEN_EXPIRATION_TIME'),\n    });\n    const refresh_token = this.jwtService.sign(user, {\n      issuer: this.configService.get('APP_URL'),\n      secret: this.configService.get('ACCESS_TOKEN_SECRET'),\n      expiresIn: this.configService.get('ACCESS_TOKEN_EXPIRATION_TIME'),\n    });\n    return new TokenDto(access_token, refresh_token);\n  }\n\n  async login(loginDto: LoginDto): Promise {\n    const user = await this.validateUser(\n      loginDto.usernameOrEmail,\n      loginDto.password,\n    );\n\n    if (user) {\n      return this.generateNewToken(user);\n    } else {\n      throw new UnauthorizedException('Wrong Credentials');\n    }\n  }\n\n  async refreshToken(dto: RefreshTokenDto): Promise {\n    let result = null;\n    try {\n      result = this.jwtService.verify(dto.refresh_token, {\n        issuer: this.configService.get('APP_URL'),\n        secret: this.configService.get('ACCESS_TOKEN_SECRET'),\n        ignoreExpiration: false,\n      });\n    } catch {}\n    if (result) {\n      return this.generateNewToken(result);\n    } else {\n      throw new ForbiddenException('Invalid Refresh Token');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CaslAbilityFactory.html":{"url":"injectables/CaslAbilityFactory.html","title":"injectable - CaslAbilityFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CaslAbilityFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/casl-ability.factory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createForUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createForUser(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/casl-ability.factory.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Ability } from '@casl/ability';\nimport { Injectable, SetMetadata } from '@nestjs/common';\nimport { Permission } from 'src/permission/permission.model';\nimport { User } from 'src/user/user.model';\nimport { AuthService } from './auth.service';\n\nexport enum PermissionAction {\n  CREATE = 'create',\n  READ = 'read',\n  UPDATE = 'update',\n  DELETE = 'delete',\n  MANAGE = 'manage',\n}\n\nexport type PermissionObjectType = any;\nexport type AppAbility = Ability;\ninterface CaslPermission {\n  action: PermissionAction;\n  // In our database, Invoice, Project... are called \"object\"\n  // but in CASL they are called \"subject\"\n  subject: string;\n}\n@Injectable()\nexport class CaslAbilityFactory {\n  async createForUser(user: User): Promise {\n    const dbPermissions: Permission[] = user.roles.reduce(\n      (acc, it) => [...acc, ...it.permissions],\n      [],\n    );\n    const caslPermissions: CaslPermission[] = dbPermissions.map((p) => ({\n      action: p.action,\n      subject: p.resource,\n    }));\n    return new Ability(\n      caslPermissions,\n    );\n  }\n}\n\ninterface IPolicyHandler {\n  handle(ability: AppAbility): boolean;\n}\n\ntype PolicyHandlerCallback = (ability: AppAbility) => boolean;\n\nexport type PolicyHandler = IPolicyHandler | PolicyHandlerCallback;\n\nexport const CHECK_POLICIES_KEY = 'check_policy';\nexport const CheckPolicies = (...handlers: PolicyHandler[]) =>\n  SetMetadata(CHECK_POLICIES_KEY, handlers);\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CaslPermission.html":{"url":"interfaces/CaslPermission.html","title":"interface - CaslPermission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CaslPermission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/casl-ability.factory.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            action\n                                        \n                                \n                                \n                                        \n                                            subject\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        action:         PermissionAction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PermissionAction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subject:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Ability } from '@casl/ability';\nimport { Injectable, SetMetadata } from '@nestjs/common';\nimport { Permission } from 'src/permission/permission.model';\nimport { User } from 'src/user/user.model';\nimport { AuthService } from './auth.service';\n\nexport enum PermissionAction {\n  CREATE = 'create',\n  READ = 'read',\n  UPDATE = 'update',\n  DELETE = 'delete',\n  MANAGE = 'manage',\n}\n\nexport type PermissionObjectType = any;\nexport type AppAbility = Ability;\ninterface CaslPermission {\n  action: PermissionAction;\n  // In our database, Invoice, Project... are called \"object\"\n  // but in CASL they are called \"subject\"\n  subject: string;\n}\n@Injectable()\nexport class CaslAbilityFactory {\n  async createForUser(user: User): Promise {\n    const dbPermissions: Permission[] = user.roles.reduce(\n      (acc, it) => [...acc, ...it.permissions],\n      [],\n    );\n    const caslPermissions: CaslPermission[] = dbPermissions.map((p) => ({\n      action: p.action,\n      subject: p.resource,\n    }));\n    return new Ability(\n      caslPermissions,\n    );\n  }\n}\n\ninterface IPolicyHandler {\n  handle(ability: AppAbility): boolean;\n}\n\ntype PolicyHandlerCallback = (ability: AppAbility) => boolean;\n\nexport type PolicyHandler = IPolicyHandler | PolicyHandlerCallback;\n\nexport const CHECK_POLICIES_KEY = 'check_policy';\nexport const CheckPolicies = (...handlers: PolicyHandler[]) =>\n  SetMetadata(CHECK_POLICIES_KEY, handlers);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dateOfBirth\n                            \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dateOfBirth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@ValidateIf((_object, value) => )\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/create-user.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/create-user.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/create-user.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/create-user.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/create-user.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/create-user.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsDate, IsEmail, IsNotEmpty, ValidateIf } from 'class-validator';\n\nexport class CreateUserDto {\n  @IsNotEmpty()\n  username: string;\n\n  @IsEmail()\n  email: string;\n\n  @IsNotEmpty()\n  firstName: string;\n\n  @IsNotEmpty()\n  lastName: string;\n\n  @IsNotEmpty()\n  password: string;\n\n  @IsDate()\n  @ValidateIf((_object, value) => value !== null)\n  dateOfBirth: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        check\n                        \n                    \n                \n            \n            \n                \ncheck()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HealthCheck()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, UseGuards } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { ApiTags } from '@nestjs/swagger';\nimport {\n  HealthCheck,\n  HealthCheckService,\n  HttpHealthIndicator,\n  TypeOrmHealthIndicator,\n} from '@nestjs/terminus';\nimport { ThrottlerGuard } from '@nestjs/throttler';\nimport { Public } from 'src/auth/public.factory';\n\n@Public()\n@Controller('health')\n@ApiTags('health')\n@UseGuards(ThrottlerGuard)\nexport class HealthController {\n  constructor(\n    private health: HealthCheckService,\n    private http: HttpHealthIndicator,\n    private config: ConfigService,\n    private db: TypeOrmHealthIndicator,\n  ) {}\n\n  @Get()\n  @HealthCheck()\n  check() {\n    return this.health.check([\n      () => this.http.pingCheck('Basic Check', this.config.get('APP_URL')),\n      () => this.db.pingCheck('postgres'),\n    ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TerminusModule } from '@nestjs/terminus';\nimport { HealthController } from './health.controller';\nimport { HttpModule } from '@nestjs/axios';\nimport { ThrottlerModule } from '@nestjs/throttler';\n\n@Module({\n  imports: [\n    TerminusModule,\n    HttpModule,\n    ThrottlerModule.forRoot({ ttl: 60, limit: 10 }),\n  ],\n  controllers: [HealthController],\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPolicyHandler.html":{"url":"interfaces/IPolicyHandler.html","title":"interface - IPolicyHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPolicyHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/casl-ability.factory.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        handle\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(ability: AppAbility)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/casl-ability.factory.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ability\n                                    \n                                                AppAbility\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Ability } from '@casl/ability';\nimport { Injectable, SetMetadata } from '@nestjs/common';\nimport { Permission } from 'src/permission/permission.model';\nimport { User } from 'src/user/user.model';\nimport { AuthService } from './auth.service';\n\nexport enum PermissionAction {\n  CREATE = 'create',\n  READ = 'read',\n  UPDATE = 'update',\n  DELETE = 'delete',\n  MANAGE = 'manage',\n}\n\nexport type PermissionObjectType = any;\nexport type AppAbility = Ability;\ninterface CaslPermission {\n  action: PermissionAction;\n  // In our database, Invoice, Project... are called \"object\"\n  // but in CASL they are called \"subject\"\n  subject: string;\n}\n@Injectable()\nexport class CaslAbilityFactory {\n  async createForUser(user: User): Promise {\n    const dbPermissions: Permission[] = user.roles.reduce(\n      (acc, it) => [...acc, ...it.permissions],\n      [],\n    );\n    const caslPermissions: CaslPermission[] = dbPermissions.map((p) => ({\n      action: p.action,\n      subject: p.resource,\n    }));\n    return new Ability(\n      caslPermissions,\n    );\n  }\n}\n\ninterface IPolicyHandler {\n  handle(ability: AppAbility): boolean;\n}\n\ntype PolicyHandlerCallback = (ability: AppAbility) => boolean;\n\nexport type PolicyHandler = IPolicyHandler | PolicyHandlerCallback;\n\nexport const CHECK_POLICIES_KEY = 'check_policy';\nexport const CheckPolicies = (...handlers: PolicyHandler[]) =>\n  SetMetadata(CHECK_POLICIES_KEY, handlers);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt-auth.guard.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt-auth.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt-auth.guard.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { AuthGuard } from '@nestjs/passport';\nimport { IS_PUBLIC_KEY } from './public.factory';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  constructor(private reflector: Reflector) {\n    super();\n  }\n\n  canActivate(context: ExecutionContext) {\n    const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n    if (isPublic) {\n      return true;\n    }\n    return super.canActivate(context);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(private readonly configService: ConfigService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configService.get('ACCESS_TOKEN_SECRET'),\n      issuer: configService.get('APP_URL'),\n    });\n  }\n\n  async validate(payload: any) {\n    return payload;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                usernameOrEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/login.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usernameOrEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/login.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\n\nexport class LoginDto {\n  @IsNotEmpty()\n  usernameOrEmail: string;\n\n  @IsNotEmpty()\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Permission.html":{"url":"entities/Permission.html","title":"entity - Permission","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Permission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permission/permission.model.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                id\n                            \n                            \n                                resource\n                            \n                            \n                                roles\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PermissionAction\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permission/permission.model.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permission/permission.model.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resource\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permission/permission.model.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, roles => roles.permissions)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permission/permission.model.ts:24\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { PermissionAction } from 'src/auth/casl-ability.factory';\nimport { Role } from 'src/role/role.model';\nimport {\n  Column,\n  Entity,\n  ManyToMany,\n  PrimaryGeneratedColumn,\n  Unique,\n} from 'typeorm';\n\n@Entity()\n@Unique(['action', 'resource'])\nexport class Permission {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  action: PermissionAction;\n\n  @Column()\n  resource: string;\n\n  @ManyToMany(() => Role, (roles) => roles.permissions)\n  roles: Role[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/PoliciesGuard.html":{"url":"guards/PoliciesGuard.html","title":"guard - PoliciesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    PoliciesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/policies.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                execPolicyHandler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector, caslAbilityFactory: CaslAbilityFactory)\n                    \n                \n                        \n                            \n                                Defined in src/auth/policies.guard.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        caslAbilityFactory\n                                                  \n                                                        \n                                                                        CaslAbilityFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/policies.guard.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        execPolicyHandler\n                        \n                    \n                \n            \n            \n                \n                    \n                    execPolicyHandler(handler: PolicyHandler, ability: AppAbility)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/policies.guard.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handler\n                                    \n                                                PolicyHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ability\n                                    \n                                                AppAbility\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport {\n  AppAbility,\n  CaslAbilityFactory,\n  CHECK_POLICIES_KEY,\n  PolicyHandler,\n} from './casl-ability.factory';\n\n@Injectable()\nexport class PoliciesGuard implements CanActivate {\n  constructor(\n    private reflector: Reflector,\n    private caslAbilityFactory: CaslAbilityFactory,\n  ) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const policyHandlers =\n      this.reflector.get(\n        CHECK_POLICIES_KEY,\n        context.getHandler(),\n      ) || [];\n\n    const { user } = context.switchToHttp().getRequest();\n    const ability = await this.caslAbilityFactory.createForUser(user);\n\n    return policyHandlers.every((handler) =>\n      this.execPolicyHandler(handler, ability),\n    );\n  }\n\n  private execPolicyHandler(handler: PolicyHandler, ability: AppAbility) {\n    if (typeof handler === 'function') {\n      return handler(ability);\n    }\n    return handler.handle(ability);\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostgresConfigService.html":{"url":"injectables/PostgresConfigService.html","title":"injectable - PostgresConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PostgresConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/postgres.config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createTypeOrmOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/config/postgres.config.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createTypeOrmOptions\n                        \n                    \n                \n            \n            \n                \ncreateTypeOrmOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/config/postgres.config.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     TypeOrmModuleOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { TypeOrmModuleOptions, TypeOrmOptionsFactory } from '@nestjs/typeorm';\n\n@Injectable()\nexport class PostgresConfigService implements TypeOrmOptionsFactory {\n  constructor(private configService: ConfigService) {}\n\n  createTypeOrmOptions(): TypeOrmModuleOptions {\n    return {\n      type: 'postgres',\n      host: this.configService.get('POSTGRES_HOST'),\n      port: this.configService.get('POSTGRES_PORT'),\n      username: this.configService.get('POSTGRES_USER'),\n      password: this.configService.get('POSTGRES_PASSWORD'),\n      database: this.configService.get('POSTGRES_DATABASE'),\n      synchronize: this.configService.get('APP_MODE') == 'DEV',\n      autoLoadEntities: true,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RefreshTokenDto.html":{"url":"classes/RefreshTokenDto.html","title":"class - RefreshTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RefreshTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/refresh-token.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                refresh_token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        refresh_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/refresh-token.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\n\nexport class RefreshTokenDto {\n  @IsNotEmpty()\n  refresh_token: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Role.html":{"url":"entities/Role.html","title":"entity - Role","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/role/role.model.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                permissions\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/role/role.model.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/role/role.model.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Permission[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, permissions => permissions.roles, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/role/role.model.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, users => users.roles, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/role/role.model.ts:26\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Permission } from 'src/permission/permission.model';\nimport { User } from 'src/user/user.model';\nimport {\n  Column,\n  Entity,\n  Index,\n  ManyToMany,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\n\n@Entity()\nexport class Role {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Index()\n  @Column({ unique: true })\n  name: string;\n\n  @ManyToMany(() => Permission, (permissions) => permissions.roles, {\n    nullable: true,\n  })\n  permissions: Permission[];\n\n  @ManyToMany(() => User, (users) => users.roles, { nullable: true })\n  users: User[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TokenDto.html":{"url":"classes/TokenDto.html","title":"class - TokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/token.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                access_token\n                            \n                            \n                                refresh_token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(access_token: string, refresh_token: string)\n                    \n                \n                        \n                            \n                                Defined in src/auth/token.dto.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        access_token\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        refresh_token\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        access_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/token.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/token.dto.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class TokenDto {\n  access_token: string;\n  refresh_token: string;\n\n  constructor(access_token: string, refresh_token: string) {\n    this.access_token = access_token;\n    this.refresh_token = refresh_token;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.model.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addresses\n                            \n                            \n                                dateCreated\n                            \n                            \n                                dateOfBirth\n                            \n                            \n                                dateUpdated\n                            \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                isAccountActivated\n                            \n                            \n                                isEmailVerified\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                            \n                                roles\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addresses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Address[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, address => address.user, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.model.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.model.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateOfBirth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true, default: undefined, type: 'date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.model.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateUpdated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.model.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})@Index()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.model.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.model.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.model.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAccountActivated\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.model.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEmailVerified\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.model.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.model.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.model.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, roles => roles.users, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.model.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})@Index()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.model.ts:27\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Address } from 'src/address/address.model';\nimport { Role } from 'src/role/role.model';\nimport {\n  Column,\n  CreateDateColumn,\n  Entity,\n  Index,\n  ManyToMany,\n  OneToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn\n} from 'typeorm';\n\n@Entity()\nexport class User {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  firstName: string;\n\n  @Column()\n  lastName: string;\n\n  @Column({ unique: true })\n  @Index()\n  username: string;\n\n  @Column({ unique: true })\n  @Index()\n  email: string;\n\n  @Column({ default: false })\n  isEmailVerified: boolean;\n\n  @Column({ default: true })\n  isAccountActivated: true;\n\n  @Column()\n  password: string;\n\n  @Column({ nullable: true, default: null, type: 'date' })\n  dateOfBirth: Date;\n\n  @OneToMany(() => Address, (address) => address.user, { nullable: true })\n  addresses: Address[];\n\n  @CreateDateColumn()\n  dateCreated: Date;\n\n  @UpdateDateColumn()\n  dateUpdated: Date;\n\n  @ManyToMany(() => Role, (roles) => roles.users, { nullable: true })\n  roles: Role[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService \n\nUserService \n\n\n\nUserModule\n\nUserModule\n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Address } from 'src/address/address.model';\nimport { Permission } from 'src/permission/permission.model';\nimport { Role } from 'src/role/role.model';\nimport { Repository } from 'typeorm';\nimport { User } from './user.model';\nimport { UserService } from './user.service';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([User, Address, Role, Permission, Repository]),\n  ],\n  providers: [UserService],\n  exports: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                userRepository\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findByUsernameOrEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByUsernameOrEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByUsernameOrEmail(emailOrUsername: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    emailOrUsername\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userRepository\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repository\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @InjectRepository(User)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { User } from './user.model';\n\n@Injectable()\nexport class UserService {\n  @InjectRepository(User)\n  private userRepository: Repository;\n\n  async findByUsernameOrEmail(\n    emailOrUsername: string,\n  ): Promise {\n    return this.userRepository.findOne({\n      where: [{ email: emailOrUsername }, { username: emailOrUsername }],\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/address/address.model.ts\n            \n            entity\n            Address\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/auth/casl-ability.factory.ts\n            \n            injectable\n            CaslAbilityFactory\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/casl-ability.factory.ts\n            \n            interface\n            CaslPermission\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/casl-ability.factory.ts\n            \n            interface\n            IPolicyHandler\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/casl-ability.factory.ts\n            \n            variable\n            CHECK_POLICIES_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/casl-ability.factory.ts\n            \n            variable\n            CheckPolicies\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/policies.guard.ts\n            \n            guard\n            PoliciesGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/public.factory.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/public.factory.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/refresh-token.dto.ts\n            \n            class\n            RefreshTokenDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/token.dto.ts\n            \n            class\n            TokenDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/config/postgres.config.service.ts\n            \n            injectable\n            PostgresConfigService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/permission/permission.model.ts\n            \n            entity\n            Permission\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/permission/permission.model.ts\n            \n            class\n            Permission\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/role/role.model.ts\n            \n            entity\n            Role\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/user/user.model.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/util/bcrypt.ts\n            \n            function\n            comparePasswords\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/util/bcrypt.ts\n            \n            function\n            encodePassword\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @casl/ability : ^5.4.4\n        \n            @nestjs/axios : ^0.0.8\n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/config : ^2.1.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/jwt : ^8.0.1\n        \n            @nestjs/passport : ^8.2.2\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/platform-fastify : ^8.4.6\n        \n            @nestjs/swagger : ^5.2.1\n        \n            @nestjs/terminus : ^8.0.6\n        \n            @nestjs/throttler : ^2.0.1\n        \n            @nestjs/typeorm : ^8.1.4\n        \n            bcrypt : ^5.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            fastify-csrf : ^3.1.0\n        \n            fastify-helmet : ^7.1.0\n        \n            fastify-swagger : ^5.2.0\n        \n            passport-jwt : ^4.0.0\n        \n            pg : ^8.7.3\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.4.0\n        \n            typeorm : ^0.3.6\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PermissionAction   (src/.../casl-ability.factory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/casl-ability.factory.ts\n    \n        \n            \n                \n                    \n                        \n                        PermissionAction\n                    \n                \n                        \n                            \n                                 CREATE\n                            \n                        \n                        \n                            \n                                Value : create\n                            \n                        \n                        \n                            \n                                 READ\n                            \n                        \n                        \n                            \n                                Value : read\n                            \n                        \n                        \n                            \n                                 UPDATE\n                            \n                        \n                        \n                            \n                                Value : update\n                            \n                        \n                        \n                            \n                                 DELETE\n                            \n                        \n                        \n                            \n                                Value : delete\n                            \n                        \n                        \n                            \n                                 MANAGE\n                            \n                        \n                        \n                            \n                                Value : manage\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            comparePasswords   (src/.../bcrypt.ts)\n                        \n                        \n                            encodePassword   (src/.../bcrypt.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/util/bcrypt.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        comparePasswords\n                        \n                    \n                \n            \n            \n                \ncomparePasswords(rawPassword: string, hash: string)\n                \n            \n\n\n\n\n            \n                \n                    Function that takes the raw text and hash and compares them to see whether they are the same\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    rawPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        an string that represents raw text to compare\n\n                                    \n                                \n                                \n                                    hash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        an string that represents the bcrypt hash to compare raw text with\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        encodePassword\n                        \n                    \n                \n            \n            \n                \nencodePassword(rawPassword: string)\n                \n            \n\n\n\n\n            \n                \n                    Function that takes the value of the raw string and encodes it to the bcrypt hash with random salt\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    rawPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        an string that represents password that will be encoded\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRunning the app on docker\n$ docker-compose -f docker-compose-dev.yml upTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covDocumentation\nnpx @compodoc/compodoc -p tsconfig.json -sAfter This command you should visit http://localhost:8080 in order to look at code documentation page page\nOr visit swagger page after ruuning application on http://localhost:3000:/api/docs\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nCaslAbilityFactory \n\nCaslAbilityFactory \n\nCaslAbilityFactory  -->\n\nAuthModule->CaslAbilityFactory \n\n\n\n\n\nPoliciesGuard \n\nPoliciesGuard \n\nPoliciesGuard  -->\n\nAuthModule->PoliciesGuard \n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nPostgresConfigService\n\nPostgresConfigService\n\nAppModule -->\n\nPostgresConfigService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nCaslAbilityFactory\n\nCaslAbilityFactory\n\nAuthModule -->\n\nCaslAbilityFactory->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AppAbility   (src/.../casl-ability.factory.ts)\n                        \n                        \n                            PermissionObjectType   (src/.../casl-ability.factory.ts)\n                        \n                        \n                            PolicyHandler   (src/.../casl-ability.factory.ts)\n                        \n                        \n                            PolicyHandlerCallback   (src/.../casl-ability.factory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/casl-ability.factory.ts\n    \n    \n        \n            \n                \n                    \n                    AppAbility\n                \n            \n            \n                \n                        Ability<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PermissionObjectType\n                \n            \n            \n                \n                            any\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PolicyHandler\n                \n            \n            \n                \n                            IPolicyHandler | PolicyHandlerCallback\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PolicyHandlerCallback\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CHECK_POLICIES_KEY   (src/.../casl-ability.factory.ts)\n                        \n                        \n                            CheckPolicies   (src/.../casl-ability.factory.ts)\n                        \n                        \n                            IS_PUBLIC_KEY   (src/.../public.factory.ts)\n                        \n                        \n                            Public   (src/.../public.factory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/casl-ability.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CHECK_POLICIES_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'check_policy'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CheckPolicies\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...handlers: PolicyHandler[]) =>\n  SetMetadata(CHECK_POLICIES_KEY, handlers)\n                    \n                \n\n\n        \n    \n\n    src/auth/public.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
