var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/entities/Address.html",[0,1.876,1,2.437]],["body/entities/Address.html",[0,2.503,1,4.451,2,1.929,3,0.216,4,0.195,5,0.195,6,3.147,7,2.362,8,5.033,9,5.033,10,2.471,11,4.333,12,4.333,13,2.656,14,0.237,15,1.15,16,5.757,17,4.956,18,2.706,19,2.706,20,2.706,21,5.757,22,0.497,23,0.018,24,2.02,25,1.929,26,4.277,27,0.719,28,3.655,29,3.655,30,3.655,31,2.916,32,4.034,33,3.655,34,4.034,35,3.655,36,1.746,37,4.034,38,3.655,39,1.746,40,3.655,41,5.033,42,3.872,43,2.366,44,3.655,45,3.655,46,0.326,47,2.812,48,5.033,49,1.331,50,0.216,51,0.15,52,0.012,53,0.012]],["title/classes/AdminUserSeeds1655586994482.html",[51,0.155,54,2.901]],["body/classes/AdminUserSeeds1655586994482.html",[3,0.23,4,0.207,5,0.207,10,1.822,14,0.252,18,1.828,19,1.828,22,0.371,23,0.018,27,0.538,31,2.468,39,2.208,43,2.468,46,0.413,49,1.415,50,0.23,51,0.16,52,0.012,53,0.012,54,4.038,55,0.975,56,5.116,57,3.347,58,2.218,59,3.338,60,1.144,61,2.751,62,2.376,63,2.77,64,2.949,65,2.949,66,4.052,67,3.888,68,0.991,69,1.016,70,0.943,71,1.144,72,2.949,73,3.888,74,1.228,75,2.725,76,2.335,77,2.991,78,3.888,79,1.911,80,4.038,81,2.647,82,2.991,83,3.679,84,3.888,85,2.725,86,3.888,87,2.991,88,3.888,89,2.991,90,3.888,91,2.725,92,3.888,93,3.347,94,3.347,95,2.991,96,1.934,97,2.512,98,2.184,99,3.888,100,2.512,101,3.347]],["title/modules/AppModule.html",[102,1.594,103,2.643]],["body/modules/AppModule.html",[3,0.247,4,0.223,5,0.223,23,0.018,43,1.963,46,0.474,50,0.247,51,0.172,52,0.013,53,0.013,102,2.326,103,5.307,104,2.076,105,2.905,106,3.594,107,3.594,108,3.926,109,4.516,110,4.516,111,4.516,112,4.198,113,3.307,114,2.508,115,2.345,116,4.175,117,3.307,118,1.148,119,4.175,120,3.594,121,2.926,122,2.203,123,4.175,124,3.212,125,4.175,126,4.175,127,3.594,128,4.175,129,4.175,130,4.175,131,4.175,132,4.175]],["title/classes/AssignRolePermissionsQuery.html",[51,0.155,133,2.643]],["body/classes/AssignRolePermissionsQuery.html",[3,0.288,4,0.261,5,0.261,14,0.317,15,1.39,22,0.431,23,0.018,25,1.673,27,0.624,36,2.409,43,2.861,46,0.317,50,0.288,51,0.25,52,0.014,53,0.014,55,1.224,74,2.095,133,4.266,134,5.101,135,4.203,136,5.709,137,4.648,138,4.203,139,4.682,140,4.883,141,4.203,142,4.883,143,3.725,144,5.709,145,2.295]],["title/classes/AssignRoleUsersQuery.html",[51,0.155,146,2.643]],["body/classes/AssignRoleUsersQuery.html",[3,0.288,4,0.261,5,0.261,14,0.317,15,1.39,22,0.431,23,0.018,25,1.673,27,0.624,36,2.409,43,2.861,46,0.317,50,0.288,51,0.25,52,0.014,53,0.014,55,1.224,74,2.095,134,5.101,137,4.648,138,4.203,139,4.682,141,4.203,143,3.725,144,5.709,145,2.295,146,4.266,147,4.203,148,5.709,149,4.883,150,4.883]],["title/controllers/AuthController.html",[151,1.876,152,2.643]],["body/controllers/AuthController.html",[3,0.214,4,0.193,5,0.193,7,3.231,14,0.235,22,0.354,23,0.018,25,1.575,27,0.587,46,0.454,50,0.214,51,0.149,52,0.012,53,0.012,60,1.09,61,2.008,68,1.081,69,0.979,70,1.029,71,1.248,118,0.995,151,1.801,152,3.504,153,1.801,154,3.117,155,2.537,156,3.621,157,3.846,158,4.305,159,3.117,160,4.331,161,3.621,162,5,163,4.305,164,3.621,165,3.621,166,3.621,167,3.621,168,5.728,169,3.621,170,4.331,171,3.621,172,4.931,173,4.305,174,4.305,175,3.621,176,2.785,177,3.846,178,2.785,179,3.621,180,2.537,181,2.175,182,3.504,183,5,184,2.537,185,5,186,1.91,187,2.537,188,2.175,189,3.441,190,3.117,191,2.34,192,2.34,193,3.117,194,3.117,195,3.117,196,3.117,197,3.621,198,2.537,199,3.621,200,1.801,201,2.34,202,3.621,203,4.406,204,3.621,205,1.575,206,3.621,207,3.621,208,3.621,209,3.621,210,3.621,211,3.621,212,3.621,213,3.621]],["title/modules/AuthModule.html",[102,1.594,108,2.119]],["body/modules/AuthModule.html",[3,0.223,4,0.202,5,0.202,23,0.018,46,0.47,50,0.223,51,0.156,52,0.012,53,0.012,102,2.177,104,1.881,105,2.718,108,4.218,112,4.08,113,3.095,114,2.272,115,2.124,117,3.095,118,1.04,127,3.256,152,4.107,153,2.562,189,4.433,190,3.256,191,3.329,192,2.444,193,3.256,214,3.256,215,3.782,216,3.256,217,3.256,218,3.894,219,3.974,220,4.389,221,3.782,222,3.611,223,4.435,224,4.435,225,2.909,226,1.881,227,1.598,228,3.782,229,3.782,230,3.782,231,5.152,232,2.651,233,3.256,234,3.782]],["title/injectables/AuthService.html",[189,2.266,235,1.191]],["body/injectables/AuthService.html",[3,0.146,4,0.132,5,0.132,10,2.358,14,0.161,22,0.415,23,0.018,24,1.858,27,0.601,39,2.185,46,0.419,47,1.904,50,0.146,51,0.102,52,0.009,53,0.009,60,0.826,62,2.358,68,1.107,69,1.002,70,1.054,71,1.212,79,2.024,81,2.051,96,2.29,98,2.587,118,0.681,157,2.915,158,3.263,159,3.263,160,3.594,163,2.131,170,3.334,172,3.964,173,4.442,189,2.277,192,1.6,194,2.131,196,3.263,200,3.132,201,2.449,205,1.613,224,5.256,225,1.904,235,1.197,236,1.306,237,2.131,238,3.79,239,3.79,240,4.605,241,2,242,2.476,243,3.524,244,2.476,245,3.79,246,2.476,247,3.79,248,2.476,249,2.476,250,2.476,251,3.79,252,2.476,253,1.487,254,2.476,255,2.476,256,3.263,257,2.476,258,2.476,259,1.6,260,1.904,261,2.476,262,1.904,263,2.476,264,1.735,265,2.476,266,2.476,267,2.476,268,2.476,269,2.476,270,2.476,271,2.476,272,2.476,273,2.131,274,3.79,275,4.442,276,3.969,277,5.159,278,3.263,279,3.79,280,2.476,281,2.915,282,3.79,283,2.476,284,2.298,285,2.476,286,2.476,287,2.476,288,2.476,289,2.476,290,3.542,291,2.476,292,4.111,293,3.79,294,2.476,295,3.263,296,2.656,297,3.79,298,2.476,299,3.79,300,2.476,301,2.476,302,2.476]],["title/injectables/CaslAbilityFactory.html",[218,1.99,235,1.191]],["body/injectables/CaslAbilityFactory.html",[3,0.212,4,0.192,5,0.192,10,2.244,13,1.897,14,0.233,22,0.457,23,0.018,24,1.035,27,0.368,39,1.727,46,0.399,50,0.413,51,0.148,52,0.012,53,0.012,60,1.085,62,1.98,68,0.679,69,0.614,70,0.646,71,0.784,76,2.159,79,2.242,118,0.988,205,0.988,218,2.625,226,1.788,235,1.572,236,1.897,284,1.601,303,2.216,304,2.019,305,4.976,306,3.828,307,3.595,308,3.063,309,2.519,310,2.765,311,1.306,312,2.019,313,2.519,314,1.998,315,3.215,316,3.215,317,2.989,318,2.795,319,3.487,320,2.519,321,2.682,322,2.625,323,3.215,324,2.625,325,2.765,326,2.765,327,3.828,328,2.519,329,3.999,330,2.765,331,2.765,332,3.828,333,2.765,334,3.828,335,2.765,336,2.765,337,2.765,338,2.339,339,2.019,340,3.215,341,3.487,342,2.989,343,2.159,344,2.519,345,2.019,346,3.487,347,2.519]],["title/interfaces/CaslPermission.html",[322,1.99,323,2.437]],["body/interfaces/CaslPermission.html",[3,0.215,4,0.194,5,0.194,10,1.741,13,1.919,14,0.236,15,1.146,22,0.475,23,0.018,24,1.653,39,1.262,46,0.401,50,0.414,51,0.15,52,0.012,53,0.012,62,1.262,76,2.185,79,2.253,118,1,205,1,218,1.919,226,1.809,235,1.584,284,1.62,303,1.62,304,2.043,306,2.798,308,3.078,309,2.549,310,2.798,311,1.317,312,2.043,313,2.549,314,2.486,315,3.242,316,3.242,317,3.013,318,2.818,319,3.516,320,2.549,321,2.699,322,2.647,323,3.71,324,3.426,325,2.798,326,2.798,327,3.859,328,2.549,329,4.704,330,2.798,331,2.798,332,3.859,333,2.798,334,3.859,335,2.798,336,2.798,337,2.798,338,2.358,339,2.043,340,3.242,341,3.516,342,3.013,343,2.185,344,2.549,345,2.043,346,3.516,347,2.549,348,2.549]],["title/classes/CreatePermissionPolicyHandler.html",[51,0.155,349,2.119]],["body/classes/CreatePermissionPolicyHandler.html",[3,0.26,4,0.235,5,0.235,14,0.286,22,0.312,23,0.018,27,0.451,46,0.37,50,0.395,51,0.275,52,0.013,53,0.013,55,1.104,58,2.926,60,1.242,68,0.831,69,0.753,70,0.791,71,0.96,205,1.838,226,2.19,227,1.861,308,2.19,311,1.818,314,1.769,321,3.393,338,3.334,339,3.889,349,3.202,350,2.846,351,3.683,352,4.404,353,2.645,354,2.474,355,2.846,356,2.846,357,2.474,358,2.846,359,2.474,360,2.846]],["title/classes/CreateUserDto.html",[51,0.155,361,2.901]],["body/classes/CreateUserDto.html",[3,0.244,4,0.221,5,0.221,14,0.268,15,1.251,22,0.493,23,0.018,24,2.124,25,1.917,27,0.714,31,2.574,46,0.268,50,0.244,51,0.225,52,0.013,53,0.013,55,1.038,87,4.719,89,4.719,91,4.299,95,4.719,96,2.059,97,3.964,98,3.446,143,4.104,145,1.947,361,4.212,362,6.123,363,3.565,364,4.141,365,3.051,366,4.141,367,6.134,368,4.141,369,4.141,370,4.141,371,4.141,372,4.141,373,5.475,374,4.141,375,4.141]],["title/classes/DeletePermissionPolicyHandler.html",[51,0.155,359,2.119]],["body/classes/DeletePermissionPolicyHandler.html",[3,0.26,4,0.235,5,0.235,14,0.286,22,0.312,23,0.018,27,0.451,46,0.37,50,0.395,51,0.275,52,0.013,53,0.013,55,1.104,58,2.926,60,1.242,68,0.831,69,0.753,70,0.791,71,0.96,205,1.838,226,2.19,227,1.861,308,2.19,311,1.818,314,1.769,321,3.393,338,3.334,339,3.889,349,2.474,350,2.846,351,3.683,353,2.645,354,2.474,355,2.846,356,2.846,357,2.474,358,2.846,359,3.202,360,2.846,376,4.404]],["title/controllers/HealthController.html",[151,1.876,377,2.643]],["body/controllers/HealthController.html",[3,0.263,4,0.238,5,0.238,14,0.289,23,0.018,25,1.225,27,0.456,46,0.461,50,0.263,51,0.183,52,0.013,53,0.013,60,1.252,61,2.307,71,0.971,118,1.225,151,2.216,153,2.216,155,3.122,180,3.122,181,2.676,182,3.122,184,3.122,186,2.351,187,3.122,188,2.676,198,3.122,200,3.161,205,1.225,241,2.351,259,2.879,260,3.427,276,3.427,377,4.025,378,3.835,379,5.743,380,6.948,381,4.455,382,4.455,383,5.743,384,5.743,385,5.743,386,5.743,387,3.427,388,4.455,389,4.455,390,4.455,391,4.455,392,3.835,393,4.455,394,4.455,395,4.455]],["title/modules/HealthModule.html",[102,1.594,109,2.437]],["body/modules/HealthModule.html",[3,0.297,4,0.268,5,0.268,23,0.018,46,0.467,50,0.297,51,0.207,52,0.014,53,0.014,102,2.619,104,2.5,109,4.005,117,3.02,118,1.382,153,3.082,188,3.02,377,4.709,387,3.867,396,5.027,397,6.198,398,5.027,399,6.198,400,4.328,401,5.027,402,5.027,403,5.027,404,4.328,405,5.027,406,4.328]],["title/interfaces/IPolicyHandler.html",[322,1.99,338,1.773]],["body/interfaces/IPolicyHandler.html",[3,0.213,4,0.193,5,0.193,10,1.732,13,1.906,14,0.234,22,0.458,23,0.018,24,1.04,27,0.37,39,1.253,46,0.4,50,0.413,51,0.149,52,0.012,53,0.012,60,1.088,62,1.253,68,0.682,69,0.617,70,0.649,71,0.787,76,2.17,79,2.246,118,0.993,205,0.993,218,1.906,226,1.796,235,1.577,284,1.608,303,2.223,304,2.029,306,2.779,308,3.221,309,2.531,310,2.779,311,1.311,312,2.029,313,2.531,314,2.005,315,3.226,316,3.226,317,2.999,318,2.804,319,3.499,320,2.531,321,3.045,322,2.634,323,3.226,324,2.634,325,2.779,326,2.779,327,3.84,328,2.531,329,4.009,330,2.779,331,2.779,332,3.84,333,2.779,334,3.84,335,2.779,336,2.779,337,2.779,338,2.689,339,2.804,340,3.696,341,3.499,342,2.999,343,2.17,344,2.531,345,2.029,346,3.499,347,2.531,348,2.531,351,3.226,407,3.612]],["title/injectables/JwtAuthGuard.html",[191,2.437,235,1.191]],["body/injectables/JwtAuthGuard.html",[3,0.262,4,0.236,5,0.236,14,0.287,22,0.405,23,0.018,27,0.586,43,2.082,46,0.434,50,0.262,51,0.182,52,0.013,53,0.013,60,1.247,68,1.08,69,0.978,70,1.028,71,0.965,79,1.612,118,1.218,191,3.697,195,3.813,205,1.573,232,3.104,235,1.807,236,2.337,241,2.337,408,5.456,409,3.813,410,4.926,411,3.813,412,6.115,413,4.429,414,4.926,415,5.767,416,4.429,417,3.813,418,4.429,419,3.407,420,3.407,421,3.813,422,4.429,423,4.429,424,3.813,425,4.926,426,4.429,427,3.813,428,4.429,429,4.429]],["title/injectables/JwtStrategy.html",[220,2.437,235,1.191]],["body/injectables/JwtStrategy.html",[3,0.275,4,0.249,5,0.249,14,0.302,22,0.33,23,0.018,27,0.606,46,0.443,50,0.275,51,0.192,52,0.014,53,0.014,60,1.288,62,2.252,68,0.879,69,0.796,70,0.837,71,1.016,118,1.281,192,3.011,205,1.281,220,3.819,235,1.867,236,2.458,241,3.425,259,3.011,260,3.584,275,4.011,276,3.584,278,4.011,295,4.011,296,3.265,419,3.584,421,4.011,424,4.011,430,4.011,431,5.91,432,4.659,433,5.91,434,4.659,435,4.659,436,3.584,437,4.659,438,4.659,439,4.659,440,4.011,441,4.659,442,4.659,443,4.659,444,4.659,445,4.659]],["title/classes/LoginDto.html",[51,0.155,160,2.437]],["body/classes/LoginDto.html",[3,0.303,4,0.274,5,0.274,14,0.333,15,1.433,22,0.444,23,0.018,24,2.033,25,1.725,27,0.643,46,0.333,50,0.303,51,0.258,52,0.015,53,0.015,55,1.286,98,3.808,143,4.07,145,2.411,160,4.054,256,5.836,446,4.415,447,5.129,448,5.129]],["title/classes/ManyToManyUserRoles1655586944086.html",[51,0.155,449,2.901]],["body/classes/ManyToManyUserRoles1655586944086.html",[3,0.117,4,0.105,5,0.105,14,0.443,15,0.725,22,0.281,23,0.018,24,0.568,27,0.407,39,1.581,46,0.128,49,0.718,50,0.117,51,0.081,52,0.007,53,0.007,55,0.495,58,1.34,59,2.234,60,0.691,61,2.141,62,1.85,63,1.674,64,1.782,65,1.782,66,3.377,68,0.599,69,0.853,70,0.57,71,0.691,72,1.782,81,3.339,96,2.897,137,4.744,315,4.15,317,3.499,318,3.272,324,3.074,365,0.981,449,3.504,450,3.922,451,1.699,452,1.185,453,1.973,454,1.973,455,1.973,456,5.723,457,5.015,458,5.826,459,5.826,460,5.826,461,6.996,462,1.973,463,3.922,464,6.423,465,1.973,466,1.973,467,5.826,468,1.973,469,1.973,470,1.973,471,5.826,472,5.826,473,1.973,474,1.973,475,1.973,476,5.826,477,1.973,478,1.973,479,1.973,480,4.744,481,4.481,482,3.172,483,5.826,484,5.826,485,3.172,486,5.826,487,3.172,488,4.555,489,3.172,490,3.172,491,3.172,492,3.172,493,3.172,494,3.172,495,3.172,496,5.208,497,1.973,498,1.973,499,4.555,500,1.973,501,1.973,502,1.973,503,1.973,504,1.973,505,1.973]],["title/classes/PageDto.html",[51,0.155,506,2.437]],["body/classes/PageDto.html",[3,0.253,4,0.229,5,0.229,14,0.278,15,1.281,22,0.468,23,0.018,25,1.541,27,0.64,43,2.635,46,0.405,50,0.253,51,0.231,52,0.013,53,0.013,55,1.076,68,0.81,69,0.734,70,0.771,145,2.018,186,2.265,201,4.551,241,2.265,506,3.623,507,3.695,508,5.912,509,5.028,510,5.606,511,6.867,512,4.371,513,5.606,514,4.292,515,4.292,516,4.292,517,5.375,518,6.243,519,2.774,520,3.302,521,4.292,522,4.292]],["title/classes/PageMetaDto.html",[51,0.155,512,2.266]],["body/classes/PageMetaDto.html",[3,0.214,4,0.194,5,0.194,14,0.235,15,1.144,22,0.486,23,0.018,25,1.844,27,0.704,36,2.431,46,0.325,50,0.214,51,0.149,52,0.012,53,0.012,55,0.91,68,0.685,69,0.62,70,0.652,186,1.915,201,4.887,241,2.643,253,2.18,340,3.996,509,2.543,512,3.008,517,6.355,519,3.996,523,3.935,524,3.124,525,5.735,526,5.735,527,4.547,528,5.735,529,4.412,530,3.629,531,4.333,532,5.008,533,3.629,534,3.629,535,3.629,536,3.629,537,3.629,538,3.629,539,1.805,540,4.937,541,3.629,542,4.312,543,3.629,544,3.629,545,3.629,546,3.629,547,3.629,548,2.792,549,3.629]],["title/interfaces/PageMetaDtoParameters.html",[322,1.99,531,2.643]],["body/interfaces/PageMetaDtoParameters.html",[3,0.308,4,0.278,5,0.278,14,0.338,15,1.448,22,0.449,23,0.018,36,2.37,46,0.338,50,0.308,52,0.015,53,0.015,253,3.133,322,2.752,348,3.656,509,3.656,519,3.371,523,2.93,527,4.979,531,4.443,539,3.76,550,4.491,551,3.371]],["title/classes/PageOptionsDto.html",[51,0.155,539,1.876]],["body/classes/PageOptionsDto.html",[3,0.21,4,0.19,5,0.19,14,0.231,15,1.129,22,0.472,23,0.018,25,1.561,27,0.628,36,2.373,46,0.398,50,0.21,51,0.234,52,0.011,53,0.011,55,0.893,70,1.198,145,1.674,186,1.879,201,4.575,205,0.979,313,2.496,365,2.824,406,4.888,452,4.253,519,3.963,523,3.62,529,4.368,539,2.459,540,3.066,542,3.066,548,5.364,552,3.066,553,4.887,554,4.944,555,5.678,556,5.678,557,3.561,558,3.561,559,3.561,560,4.944,561,3.561,562,3.561,563,4.944,564,4.256,565,3.561,566,3.561,567,3.561,568,3.561,569,6.134,570,3.066,571,3.561,572,5.678,573,6.134,574,3.561,575,3.561,576,3.561,577,3.561,578,4.944,579,4.944,580,3.561]],["title/entities/Permission.html",[0,1.876,311,0.99]],["body/entities/Permission.html",[0,2.685,2,2.139,3,0.239,4,0.216,5,0.216,14,0.263,15,1.233,18,2.853,19,2.853,20,2.853,22,0.49,23,0.018,24,1.554,25,1.905,26,4.048,27,0.71,31,3.042,32,4.253,34,4.253,36,1.873,37,4.253,46,0.394,49,1.475,50,0.239,51,0.167,52,0.013,53,0.013,74,2.044,100,4.355,227,1.713,311,1.417,314,2.438,324,3.202,581,3.489,582,4.535,583,4.053,584,4.053,585,4.053,586,4.053,587,4.053,588,3.118,589,5.398,590,4.053,591,3.489,592,3.118,593,4.152,594,2.84,595,4.053]],["title/controllers/PermissionController.html",[151,1.876,596,2.643]],["body/controllers/PermissionController.html",[3,0.186,4,0.168,5,0.168,14,0.204,20,2.727,22,0.435,23,0.018,25,1.69,27,0.63,36,2.222,46,0.446,50,0.186,51,0.129,52,0.01,53,0.01,60,0.986,68,1.161,69,1.051,70,1.105,71,1.34,118,0.864,151,1.563,153,1.563,155,2.203,176,2.418,177,3.482,178,3.482,180,2.203,181,1.888,182,3.172,184,2.203,186,1.659,187,2.203,188,1.888,198,2.203,200,1.563,203,4.729,205,1.69,219,1.766,227,1.328,311,0.825,318,1.766,345,1.766,349,2.979,354,3.453,357,2.979,359,2.979,539,3.184,551,2.031,591,2.706,596,3.172,597,2.706,598,3.896,599,4.526,600,4.526,601,3.896,602,3.896,603,2.706,604,4.568,605,3.143,606,3.143,607,3.143,608,3.143,609,3.143,610,3.143,611,3.143,612,3.143,613,2.706,614,3.143,615,3.143,616,2.706,617,3.143,618,3.143,619,2.706,620,3.896,621,2.706,622,3.143,623,3.143,624,2.706,625,2.706,626,3.186,627,2.706,628,3.143,629,3.143,630,2.706,631,6.148,632,3.143,633,3.143,634,2.706,635,3.143,636,3.143,637,2.706,638,3.143,639,3.143,640,3.143,641,3.143,642,3.143,643,3.143]],["title/classes/PermissionDto.html",[51,0.155,604,2.437]],["body/classes/PermissionDto.html",[3,0.217,4,0.196,5,0.196,14,0.239,15,1.156,18,2.716,19,2.716,20,2.716,22,0.477,23,0.018,24,1.456,25,1.391,27,0.707,31,2.924,36,1.755,46,0.375,50,0.217,51,0.208,52,0.012,53,0.012,55,0.923,60,1.103,68,0.695,69,0.629,70,0.662,71,1.103,79,1.34,96,3.351,143,3.494,145,1.731,205,1.012,227,1.556,284,1.639,303,1.639,311,1.895,314,2.321,324,3.049,582,4.05,604,3.268,644,3.17,645,4.355,646,5.356,647,3.682,648,3.682,649,3.682,650,3.682,651,3.682,652,3.682,653,5.058,654,3.682,655,3.17,656,3.682,657,5.058,658,2.832,659,5.058,660,4.355,661,5.058,662,5.058,663,5.058,664,5.058,665,3.17,666,3.682,667,3.17,668,3.682]],["title/modules/PermissionModule.html",[102,1.594,110,2.437]],["body/modules/PermissionModule.html",[3,0.273,4,0.247,5,0.247,23,0.018,46,0.466,50,0.273,51,0.191,52,0.014,53,0.014,102,2.488,104,2.303,105,3.106,108,4.037,110,4.776,113,3.536,114,2.782,115,2.601,117,3.536,118,1.273,121,3.245,122,2.443,153,2.928,222,4.126,311,1.216,596,4.536,626,4.317,627,3.987,658,3.562,669,3.987,670,4.631,671,3.987,672,4.631,673,3.987,674,4.631,675,4.631]],["title/classes/PermissionPermissionsSeed1655765422849.html",[51,0.155,676,2.901]],["body/classes/PermissionPermissionsSeed1655765422849.html",[3,0.216,4,0.195,5,0.195,14,0.237,22,0.356,23,0.018,27,0.516,39,2.152,46,0.402,49,1.331,50,0.216,51,0.15,52,0.012,53,0.012,55,0.916,58,2.127,59,3.233,60,1.097,61,2.7,62,2.333,63,2.656,64,2.827,65,2.827,66,4,68,0.95,69,0.984,70,0.904,71,1.097,72,2.827,74,1.154,75,2.562,79,1.331,80,3.872,81,2.994,82,2.812,83,2.562,85,4.558,100,2.362,227,1.545,303,1.628,311,1.842,312,2.053,314,1.468,324,3.432,582,4.711,676,3.872,677,4.956,678,3.147,679,3.655,680,3.655,681,5.6,682,3.147,683,3.147,684,3.147,685,3.147,686,3.147,687,3.147]],["title/injectables/PermissionService.html",[235,1.191,626,2.266]],["body/injectables/PermissionService.html",[2,1.382,3,0.155,4,0.14,5,0.14,13,2.088,14,0.17,15,0.904,20,2.819,22,0.424,23,0.018,25,0.72,27,0.614,36,2.081,39,2.224,46,0.416,49,0.954,50,0.155,51,0.108,52,0.009,53,0.009,60,0.862,62,2.461,68,1.076,69,0.975,70,1.025,71,1.243,79,2.506,81,2.772,118,0.72,122,1.382,200,2.371,205,1.649,235,1.25,236,1.382,253,3.85,284,2.854,290,3.044,292,3.723,311,1.497,436,2.016,506,2.557,512,3.191,520,2.016,527,2.773,539,3.096,551,1.693,598,3.407,601,3.407,602,3.407,603,3.407,604,4.499,613,3.407,616,3.407,624,3.407,625,2.256,626,2.377,658,2.016,688,2.256,689,4.105,690,3.957,691,4.768,692,2.62,693,3.957,694,2.62,695,2.62,696,2.62,697,2.62,698,2.62,699,3.341,700,3.407,701,2.62,702,4.105,703,2.016,704,2.62,705,3.407,706,2.62,707,2.62,708,2.256,709,2.256,710,2.256,711,2.256,712,2.256,713,2.62,714,4.768,715,3.957,716,2.256,717,3.407,718,2.62,719,2.62,720,2.62,721,2.62,722,2.62,723,2.62]],["title/classes/PermissionTimestamps1655765304532.html",[51,0.155,724,2.901]],["body/classes/PermissionTimestamps1655765304532.html",[3,0.23,4,0.208,5,0.208,14,0.253,15,1.201,18,2.472,19,2.472,22,0.421,23,0.018,24,1.122,26,3.159,27,0.61,39,2.21,46,0.253,49,1.419,50,0.23,51,0.16,52,0.012,53,0.012,55,0.977,58,2.222,59,3.343,60,1.146,61,2.753,62,2.378,63,2.775,64,2.954,65,2.954,66,4.055,68,0.993,69,1.137,70,0.945,71,1.146,72,2.954,81,2.837,96,2.615,311,1.672,365,1.939,452,3.575,456,4.9,457,4.465,480,4.465,481,4.045,496,4.045,724,4.9,725,5.484,726,3.356,727,3.898,728,3.898,729,3.898,730,4.527,731,4.045]],["title/guards/PoliciesGuard.html",[219,2.119,732,2.901]],["body/guards/PoliciesGuard.html",[3,0.224,4,0.202,5,0.202,10,1.316,14,0.246,22,0.415,23,0.018,27,0.601,39,1.791,46,0.38,50,0.224,51,0.156,52,0.012,53,0.012,58,1.602,60,1.125,62,2.036,68,1.107,69,1.003,70,1.054,71,1.125,79,2.136,81,1.688,118,1.042,200,3.277,205,1.613,218,3.67,219,2.899,226,1.886,227,1.602,232,2.657,235,1.63,241,2.723,308,3.277,321,2.961,342,3.783,343,3.1,410,5.422,411,3.264,412,5.852,414,4.443,415,5.422,417,3.264,427,3.264,733,3.791,734,3.264,735,5.161,736,3.791,737,3.791,738,5.161,739,3.791,740,5.161,741,3.791,742,3.791,743,3.791,744,3.791,745,3.791,746,3.791,747,3.791,748,2.657,749,3.791,750,3.791]],["title/classes/ReadPermissionPolicyHandler.html",[51,0.155,354,2.119]],["body/classes/ReadPermissionPolicyHandler.html",[3,0.26,4,0.235,5,0.235,14,0.286,22,0.312,23,0.018,27,0.451,46,0.37,50,0.395,51,0.275,52,0.013,53,0.013,55,1.104,58,2.926,60,1.242,68,0.831,69,0.753,70,0.791,71,0.96,205,1.838,226,2.19,227,1.861,308,2.19,311,1.818,314,1.769,321,3.393,338,3.334,339,3.889,349,2.474,350,2.846,351,3.683,353,2.645,354,3.202,355,2.846,356,2.846,357,2.474,358,2.846,359,2.474,360,2.846,751,4.404]],["title/classes/RefreshTokenDto.html",[51,0.155,170,2.437]],["body/classes/RefreshTokenDto.html",[3,0.314,4,0.284,5,0.284,14,0.345,15,1.466,22,0.377,23,0.018,24,1.848,25,1.464,27,0.546,46,0.345,50,0.314,51,0.264,52,0.015,53,0.015,55,1.335,143,3.871,145,2.503,170,4.148,281,5.301,752,5.526,753,4.585,754,5.326]],["title/entities/Role.html",[0,1.876,74,1.191]],["body/entities/Role.html",[0,2.558,2,1.991,3,0.223,4,0.201,5,0.201,10,2.181,14,0.379,15,1.175,18,2.751,19,2.751,20,2.751,22,0.48,23,0.018,24,1.481,25,1.866,26,3.09,27,0.695,31,2.955,32,4.101,34,4.101,36,1.785,37,4.101,42,4.835,43,3.265,46,0.379,47,2.902,49,1.373,50,0.223,51,0.155,52,0.012,53,0.012,69,1,74,1.624,311,1.65,353,2.266,588,3.957,593,4.502,594,2.644,755,3.248,756,5.662,757,5.662,758,3.773,759,3.773,760,3.773,761,3.773,762,3.773,763,5.143,764,4.428,765,3.248,766,3.773,767,5.143,768,3.773,769,4.428]],["title/controllers/RoleController.html",[151,1.876,770,2.643]],["body/controllers/RoleController.html",[3,0.151,4,0.136,5,0.136,14,0.165,20,2.463,22,0.436,23,0.018,25,1.696,27,0.632,36,2.059,46,0.43,50,0.151,51,0.105,52,0.009,53,0.009,60,0.845,68,1.164,69,1.054,70,1.108,71,1.344,74,2.097,118,0.701,133,3.672,146,3.672,151,1.268,153,1.268,155,1.787,176,1.962,177,2.982,178,2.982,180,1.787,181,1.532,182,2.717,184,1.787,186,1.346,187,1.787,188,1.532,198,1.787,200,1.268,203,5.008,205,1.696,219,1.432,227,1.078,303,1.136,314,1.024,318,1.432,321,2.988,345,1.432,355,2.505,356,1.648,358,3.03,360,1.648,523,1.432,539,2.951,551,1.648,619,2.195,620,4.51,621,2.195,630,2.195,634,2.195,637,2.195,770,2.717,771,2.195,772,3.337,773,3.337,774,3.337,775,3.877,776,3.877,777,3.337,778,3.337,779,2.55,780,2.55,781,2.55,782,5.239,783,2.55,784,2.55,785,2.55,786,2.195,787,4.361,788,2.55,789,2.55,790,2.55,791,2.55,792,2.55,793,2.55,794,2.55,795,2.55,796,2.195,797,2.55,798,2.55,799,2.195,800,2.55,801,2.55,802,2.55,803,3.877,804,2.55,805,2.55,806,2.195,807,2.817,808,2.195,809,2.55,810,2.55,811,6.168,812,2.55,813,2.55,814,2.55,815,2.55,816,2.55,817,2.55,818,2.55,819,2.55,820,2.55,821,2.55,822,2.55,823,2.55,824,2.55,825,3.877,826,2.55,827,2.55,828,2.55,829,2.55,830,2.55]],["title/classes/RoleDto.html",[51,0.155,787,2.437]],["body/classes/RoleDto.html",[3,0.233,4,0.21,5,0.21,14,0.255,15,1.21,18,2.812,19,2.812,20,2.812,22,0.472,23,0.018,24,1.524,25,1.083,27,0.704,31,3.007,36,1.837,46,0.343,50,0.233,51,0.218,52,0.012,53,0.012,55,0.987,60,1.154,68,0.743,69,1.093,70,0.708,71,1.154,74,2.309,79,1.434,96,3.419,143,3.36,145,1.851,205,1.083,284,1.754,645,4.558,646,5.507,655,3.39,660,4.558,665,3.39,667,3.39,787,3.421,831,3.39,832,3.938,833,3.938,834,3.938,835,3.938,836,5.295,837,3.938,838,3.938,839,3.029,840,5.295,841,5.295,842,5.295,843,3.938,844,3.938]],["title/classes/RoleMigration165550928088.html",[51,0.155,845,2.901]],["body/classes/RoleMigration165550928088.html",[3,0.233,4,0.21,5,0.21,14,0.255,15,1.21,18,2.489,19,2.489,22,0.423,23,0.018,24,1.134,26,3.181,27,0.613,39,2.22,46,0.255,49,1.434,50,0.233,51,0.162,52,0.012,53,0.012,55,0.987,58,2.238,59,3.36,60,1.154,61,2.761,62,2.385,63,2.794,64,2.974,65,2.974,66,4.063,68,0.999,69,1.141,70,0.951,71,1.154,72,2.974,74,2.02,81,2.849,96,2.633,365,1.959,452,3.593,456,4.073,457,4.483,480,3.711,481,4.073,496,4.073,730,4.558,731,4.073,845,4.073,846,5.507,847,3.39,848,5.295,849,3.938,850,3.938,851,3.938,852,5.295]],["title/modules/RoleModule.html",[102,1.594,111,2.437]],["body/modules/RoleModule.html",[3,0.264,4,0.238,5,0.238,10,1.997,23,0.018,46,0.476,50,0.264,51,0.184,52,0.013,53,0.013,74,1.411,76,2.684,102,2.432,104,2.222,105,3.036,108,3.999,111,4.741,113,3.456,114,2.684,115,2.51,117,3.456,118,1.228,121,3.131,122,2.358,153,2.862,222,4.033,311,1.511,312,2.51,673,3.847,770,4.46,807,4.277,808,3.847,839,3.437,853,3.847,854,3.847,855,4.468,856,4.468,857,4.468,858,4.468]],["title/classes/RolePermissionsSeed1655595255331.html",[51,0.155,859,2.901]],["body/classes/RolePermissionsSeed1655595255331.html",[3,0.216,4,0.195,5,0.195,14,0.237,22,0.356,23,0.018,27,0.516,39,2.152,46,0.402,49,1.331,50,0.216,51,0.15,52,0.012,53,0.012,55,0.916,58,2.127,59,3.233,60,1.097,61,2.7,62,2.333,63,2.656,64,2.827,65,2.827,66,4,68,0.95,69,0.984,70,0.904,71,1.097,72,2.827,74,2.175,75,2.562,79,1.331,80,3.872,81,2.994,82,2.812,83,2.562,85,4.558,100,2.362,227,1.545,303,1.628,311,1.321,312,2.053,314,1.468,324,3.432,582,4.711,681,5.6,682,3.147,683,3.147,684,3.147,685,3.147,686,3.147,687,3.147,859,3.872,860,4.956,861,3.147,862,3.655,863,3.655]],["title/classes/RoleSeed1655509280886.html",[51,0.155,864,2.901]],["body/classes/RoleSeed1655509280886.html",[3,0.234,4,0.211,5,0.211,10,1.844,14,0.257,18,2.819,19,2.819,22,0.376,23,0.018,27,0.544,31,3.236,39,2.224,46,0.345,49,1.441,50,0.234,51,0.163,52,0.012,53,0.012,55,0.992,58,2.245,59,3.369,60,1.158,61,2.765,62,2.389,63,2.803,64,2.985,65,2.985,66,4.067,68,1.003,69,1.143,70,0.955,71,1.158,72,2.985,74,1.678,75,2.774,79,2.183,81,2.855,83,3.724,85,4.203,101,3.408,864,4.087,865,5.163,866,3.408,867,3.959,868,3.959,869,5.998,870,5.313]],["title/injectables/RoleService.html",[235,1.191,807,2.266]],["body/injectables/RoleService.html",[2,1.099,3,0.123,4,0.111,5,0.111,10,0.723,13,1.748,14,0.135,15,0.757,20,2.567,22,0.444,23,0.018,25,1.134,27,0.643,36,2.417,39,2.062,46,0.407,49,0.759,50,0.123,51,0.086,52,0.008,53,0.008,60,0.722,62,2.465,68,1.081,69,0.978,70,1.029,71,1.248,74,1.933,76,1.252,79,2.493,81,3.018,118,0.573,122,1.099,136,4.045,137,2.322,148,3.55,200,3.045,205,1.633,235,1.046,236,1.099,253,3.914,284,2.794,290,2.549,292,3.293,311,0.547,312,1.17,436,3.172,506,2.141,512,2.823,520,1.603,523,1.861,527,2.322,539,2.847,551,1.346,689,3.55,699,4.013,700,2.852,702,3.55,703,1.603,705,2.852,708,1.794,709,1.794,710,1.794,711,1.794,712,1.794,716,1.794,717,2.852,756,2.852,757,2.852,772,2.852,773,2.852,774,2.852,777,2.852,778,2.852,786,2.852,787,4.38,796,2.852,799,2.852,806,1.794,807,1.99,839,1.603,871,1.794,872,4.124,873,3.55,874,3.313,875,4.124,876,3.313,877,2.084,878,3.313,879,2.084,880,2.084,881,3.313,882,2.084,883,2.084,884,2.084,885,2.084,886,2.084,887,2.084,888,3.313,889,2.084,890,2.852,891,2.084,892,2.084,893,2.084,894,2.084,895,2.084,896,5.128,897,3.313,898,2.084,899,3.313,900,2.084,901,3.313,902,2.084,903,2.084,904,3.313,905,3.313,906,2.084,907,2.084]],["title/classes/TokenDto.html",[51,0.155,264,2.643]],["body/classes/TokenDto.html",[3,0.289,4,0.261,5,0.261,14,0.318,15,1.393,22,0.47,23,0.018,24,2.184,27,0.68,50,0.289,51,0.202,52,0.014,53,0.014,55,1.228,68,0.925,69,0.837,70,0.88,241,2.584,264,4.274,273,6.155,281,5.687,908,4.217,909,6.099,910,6.099,911,4.898,912,4.898,913,4.898]],["title/classes/UpdatePermissionPolicyHandler.html",[51,0.155,357,2.119]],["body/classes/UpdatePermissionPolicyHandler.html",[3,0.26,4,0.235,5,0.235,14,0.286,22,0.312,23,0.018,27,0.451,46,0.37,50,0.395,51,0.275,52,0.013,53,0.013,55,1.104,58,2.926,60,1.242,68,0.831,69,0.753,70,0.791,71,0.96,205,1.838,226,2.19,227,1.861,308,2.19,311,1.818,314,1.769,321,3.393,338,3.334,339,3.889,349,2.474,350,2.846,351,3.683,353,2.645,354,2.474,355,2.846,356,2.846,357,3.202,358,2.846,359,2.474,360,2.846,914,4.404]],["title/entities/User.html",[0,1.876,10,1.309]],["body/entities/User.html",[0,2.134,1,4.033,2,1.541,3,0.172,4,0.156,5,0.156,10,1.489,14,0.363,15,0.98,18,2.391,19,2.391,20,2.391,22,0.508,23,0.018,24,1.977,25,1.955,26,4.23,27,0.729,31,3.111,32,3.564,34,3.564,36,1.489,37,3.564,42,4.593,43,3.372,46,0.33,49,1.063,50,0.172,51,0.12,52,0.01,53,0.01,74,1.77,87,3.912,89,3.912,91,3.564,93,4.378,94,4.378,95,3.912,96,1.453,97,3.286,98,2.857,100,3.858,296,3.007,340,2.772,452,3.367,588,2.247,592,2.247,593,3.301,594,3.007,764,4.825,765,2.515,769,3.694,915,2.515,916,5.085,917,2.921,918,4.291,919,2.921,920,2.921,921,2.921,922,2.921,923,2.921,924,2.921,925,4.291,926,4.291,927,2.921,928,2.921,929,2.921,930,4.291,931,2.921,932,2.921,933,2.921,934,2.921,935,4.291,936,2.921,937,2.921,938,2.515,939,4.291]],["title/modules/UserModule.html",[102,1.594,112,2.266]],["body/modules/UserModule.html",[1,3.768,3,0.269,4,0.243,5,0.243,10,1.583,23,0.018,46,0.472,50,0.269,51,0.188,52,0.014,53,0.014,74,1.842,102,2.464,104,2.269,105,3.077,112,4.371,113,3.503,114,2.74,115,2.562,117,2.74,118,1.254,121,3.197,122,2.407,222,4.086,223,5.02,243,4.56,311,1.531,353,2.74,592,3.509,938,3.927,940,3.927,941,3.927,942,3.927,943,4.562,944,3.927,945,4.562,946,4.562]],["title/injectables/UserService.html",[235,1.191,243,2.266]],["body/injectables/UserService.html",[3,0.261,4,0.236,5,0.236,10,1.533,14,0.286,15,1.305,22,0.404,23,0.018,24,1.822,25,1.214,27,0.585,39,1.982,46,0.434,49,1.608,50,0.261,51,0.182,52,0.013,53,0.013,60,1.245,62,2.196,68,0.834,69,0.755,70,0.794,71,0.963,79,1.608,91,3.095,97,2.854,118,1.214,122,2.33,200,3.148,205,1.214,235,1.804,236,2.33,243,3.43,292,4.002,699,4.436,703,3.397,873,5.449,890,4.917,944,3.802,947,3.802,948,6.329,949,4.417,950,4.417,951,6.692,952,4.417,953,4.417]],["title/coverage.html",[954,3.956]],["body/coverage.html",[0,2.624,1,1.67,5,0.138,6,2.225,10,0.897,22,0.183,23,0.018,51,0.304,52,0.009,53,0.009,54,1.988,56,2.225,57,2.225,61,1.038,74,1.493,77,1.988,124,1.988,133,1.811,134,3.013,135,2.225,146,1.811,147,2.225,151,2.624,152,1.811,154,2.225,160,1.67,170,1.67,189,1.553,191,1.67,218,1.364,219,1.452,220,1.67,235,1.957,237,2.225,243,1.553,253,1.553,259,1.67,262,1.988,264,1.811,284,1.151,303,2.524,304,3.184,311,1.028,322,2.495,323,1.67,338,1.215,343,1.553,345,1.452,349,1.452,350,3.409,354,1.452,357,1.452,359,1.452,361,1.988,362,2.225,363,2.225,377,1.811,378,2.225,408,2.225,409,2.225,420,1.988,430,2.225,446,2.225,449,1.988,450,2.225,451,2.225,457,1.811,506,1.67,507,2.225,509,1.811,512,1.553,523,2.656,524,2.225,531,1.811,539,1.285,550,2.225,552,2.225,564,4.071,581,3.372,596,1.811,597,2.225,604,1.67,626,1.553,644,2.225,676,1.988,677,2.225,678,2.225,688,2.225,724,1.988,725,2.225,726,2.225,732,1.988,734,2.225,748,3.314,752,2.225,753,2.225,755,2.225,770,1.811,771,2.225,787,1.67,807,1.553,831,2.225,845,1.988,846,2.225,847,2.225,859,1.988,860,2.225,861,2.225,864,1.988,865,2.225,866,2.225,871,2.225,908,2.225,915,2.225,947,2.225,954,1.988,955,2.225,956,2.585,957,2.585,958,2.225,959,5.965,960,7.736,961,6.662,962,4.728,963,6.383,964,5.669,965,6.383,966,6.863,967,3.372,968,2.225,969,2.225,970,2.225,971,4.728,972,2.585,973,2.585,974,3.372,975,2.585]],["title/dependencies.html",[105,2.393,976,2.714]],["body/dependencies.html",[23,0.018,49,1.612,51,0.235,52,0.013,53,0.013,105,2.337,118,1.218,120,3.813,122,2.337,145,2.082,186,2.337,188,2.661,192,2.862,225,3.407,232,3.104,309,3.104,387,3.407,400,3.813,419,3.407,440,3.813,570,3.813,977,4.429,978,4.429,979,6.338,980,4.429,981,4.429,982,4.429,983,5.722,984,5.722,985,6.699,986,4.429,987,4.429,988,4.429,989,4.429,990,4.429,991,3.813,992,4.429,993,4.429,994,4.429,995,4.429,996,4.429,997,4.429,998,4.429,999,4.429,1000,4.429,1001,4.926,1002,4.429,1003,4.429,1004,4.429,1005,4.429,1006,4.429,1007,4.429,1008,4.429,1009,4.429,1010,4.429,1011,4.429,1012,4.429,1013,4.429,1014,4.429,1015,4.429]],["title/miscellaneous/enumerations.html",[1016,1.568,1017,3.904]],["body/miscellaneous/enumerations.html",[14,0.336,23,0.018,52,0.015,53,0.015,303,2.307,304,3.546,314,2.536,315,4.079,316,4.079,317,3.792,318,3.546,319,4.424,365,3.72,523,2.91,553,4.424,1016,2.577,1017,4.46,1018,5.181,1019,6.313,1020,3.985,1021,6.313,1022,6.313]],["title/miscellaneous/functions.html",[1016,1.568,1023,3.904]],["body/miscellaneous/functions.html",[7,3.834,14,0.304,22,0.42,23,0.016,24,2.108,52,0.014,53,0.014,68,1.12,69,1.014,70,1.066,77,4.564,98,2.633,262,4.564,365,3.237,748,4.158,969,4.036,970,5.604,974,4.036,991,5.108,1016,2.331,1023,4.036,1024,4.688,1025,5.933,1026,4.688,1027,7.058,1028,5.933,1029,6.841,1030,5.89,1031,4.688,1032,4.688,1033,4.036,1034,4.688,1035,5.933,1036,5.604,1037,5.933,1038,4.688,1039,4.688,1040,4.688,1041,4.688,1042,4.688]],["title/index.html",[14,0.204,1043,2.714,1044,2.714]],["body/index.html",[7,2.468,13,2.015,23,0.018,52,0.012,53,0.012,61,1.534,284,1.701,316,2.468,519,3.806,553,2.677,954,2.938,955,5.07,1001,3.288,1045,3.82,1046,3.82,1047,5.187,1048,3.82,1049,3.82,1050,3.82,1051,3.82,1052,3.82,1053,3.82,1054,3.82,1055,3.288,1056,4.465,1057,3.82,1058,3.82,1059,3.288,1060,3.82,1061,3.82,1062,7.483,1063,3.82,1064,5.187,1065,3.288,1066,6.405,1067,3.82,1068,3.82,1069,5.187,1070,3.288,1071,3.288,1072,3.82,1073,5.89,1074,5.187,1075,3.82,1076,3.82,1077,3.82,1078,3.82,1079,5.187,1080,5.187,1081,3.82,1082,3.82,1083,3.82,1084,3.82,1085,3.82,1086,3.82,1087,3.82,1088,5.187,1089,3.82,1090,3.82,1091,3.288,1092,3.82,1093,3.82,1094,3.82,1095,3.82,1096,3.82,1097,5.687,1098,3.82,1099,3.82,1100,5.07,1101,3.82,1102,3.82,1103,3.82,1104,3.82,1105,3.82,1106,3.82,1107,3.82,1108,3.82,1109,3.82,1110,3.82,1111,3.82,1112,3.288,1113,3.288,1114,3.635,1115,3.288,1116,3.82,1117,3.82]],["title/license.html",[1043,2.714,1044,2.714,1114,2.209]],["body/license.html",[4,0.267,11,0.896,12,0.896,17,0.896,22,0.074,23,0.008,27,0.189,31,0.489,36,0.361,52,0.004,53,0.004,61,2.075,63,0.549,115,0.584,139,2.309,174,0.896,181,2.281,233,2.584,284,1.337,311,0.273,317,0.625,329,1.739,365,0.517,463,0.896,480,0.729,508,0.896,529,0.8,553,1.292,594,0.729,699,1.292,731,0.8,1016,0.517,1030,0.896,1033,0.896,1036,0.896,1065,0.896,1071,0.896,1091,4.689,1112,4.447,1113,3.97,1114,2.879,1115,2.136,1118,7.347,1119,5.678,1120,4.377,1121,1.04,1122,1.04,1123,1.04,1124,7.347,1125,1.843,1126,3.433,1127,6.178,1128,5.166,1129,3.768,1130,1.04,1131,1.04,1132,3.433,1133,4.612,1134,1.843,1135,3.433,1136,5.002,1137,1.04,1138,6.302,1139,1.843,1140,4.108,1141,3.433,1142,1.04,1143,3.001,1144,1.04,1145,1.04,1146,1.843,1147,1.04,1148,1.04,1149,0.896,1150,5.002,1151,3.001,1152,1.843,1153,1.04,1154,2.584,1155,3.001,1156,2.482,1157,4.818,1158,4.377,1159,1.04,1160,5.871,1161,2.482,1162,3.001,1163,1.843,1164,4.108,1165,1.04,1166,1.843,1167,1.04,1168,2.482,1169,1.04,1170,1.04,1171,4.612,1172,4.108,1173,1.843,1174,4.108,1175,1.04,1176,1.04,1177,2.482,1178,1.843,1179,1.04,1180,1.04,1181,1.04,1182,1.843,1183,1.04,1184,0.896,1185,1.04,1186,1.04,1187,1.843,1188,1.04,1189,3.433,1190,3.433,1191,3.433,1192,3.433,1193,3.001,1194,1.04,1195,1.04,1196,1.843,1197,1.04,1198,1.843,1199,1.04,1200,2.482,1201,3.797,1202,4.108,1203,1.843,1204,1.04,1205,1.04,1206,1.04,1207,1.04,1208,2.482,1209,2.482,1210,1.04,1211,1.04,1212,1.04,1213,1.04,1214,4.612,1215,1.04,1216,1.04,1217,1.843,1218,1.04,1219,1.04,1220,1.843,1221,5.779,1222,4.108,1223,1.04,1224,1.843,1225,1.04,1226,1.843,1227,2.482,1228,2.482,1229,3.433,1230,1.04,1231,1.04,1232,1.04,1233,1.04,1234,1.04,1235,3.433,1236,2.482,1237,2.482,1238,1.04,1239,1.04,1240,1.04,1241,2.482,1242,1.04,1243,1.04,1244,1.04,1245,2.482,1246,1.04,1247,1.843,1248,1.04,1249,1.04,1250,1.04,1251,2.482,1252,1.04,1253,2.482,1254,1.04,1255,1.04,1256,2.482,1257,1.843,1258,1.04,1259,1.04,1260,1.04,1261,1.04,1262,1.04,1263,1.04,1264,3.433,1265,1.843,1266,1.04,1267,1.04,1268,1.843,1269,1.04,1270,1.04,1271,1.843,1272,3.797,1273,1.04,1274,1.843,1275,1.843,1276,1.843,1277,1.843,1278,1.843,1279,2.482,1280,1.843,1281,1.843,1282,1.04,1283,1.04,1284,1.04,1285,1.04,1286,1.04,1287,2.482,1288,1.04,1289,1.04,1290,1.04,1291,4.377,1292,3.797,1293,1.04,1294,1.04,1295,1.843,1296,3.001,1297,1.04,1298,1.04,1299,1.04,1300,1.843,1301,3.001,1302,1.04,1303,3.001,1304,1.843,1305,1.04,1306,3.001,1307,1.04,1308,1.04,1309,1.04,1310,1.04,1311,1.04,1312,1.04,1313,2.482,1314,1.843,1315,1.04,1316,1.04,1317,2.482,1318,1.04,1319,1.04,1320,1.04,1321,3.001,1322,2.482,1323,1.04,1324,1.04,1325,0.896,1326,1.04,1327,3.797,1328,1.04,1329,1.04,1330,3.001,1331,3.433,1332,1.04,1333,1.04,1334,1.04,1335,1.04,1336,2.482,1337,1.04,1338,1.04,1339,1.04,1340,1.843,1341,1.04,1342,1.04,1343,1.843,1344,1.843,1345,1.04,1346,1.04,1347,1.04,1348,1.04,1349,1.04,1350,1.04,1351,1.04,1352,1.843,1353,1.843,1354,1.843,1355,3.001,1356,1.843,1357,1.843,1358,3.001,1359,1.04,1360,1.04,1361,1.843,1362,1.04,1363,1.843,1364,1.04,1365,2.482,1366,1.04,1367,1.04,1368,1.04,1369,1.04,1370,1.04,1371,1.04,1372,1.04,1373,1.843,1374,1.04,1375,1.04,1376,1.04,1377,1.04,1378,4.377,1379,1.843,1380,1.04,1381,1.04,1382,1.04,1383,1.04,1384,1.04,1385,1.04,1386,1.04,1387,1.04,1388,1.04,1389,1.04,1390,1.04,1391,1.04,1392,0.896,1393,1.04,1394,1.04,1395,3.001,1396,1.04,1397,1.04,1398,1.04,1399,2.482,1400,1.04,1401,1.04,1402,1.843,1403,1.04,1404,1.843,1405,1.04,1406,1.04,1407,1.04,1408,2.482,1409,1.843,1410,1.04,1411,1.04,1412,1.04,1413,1.04,1414,1.04,1415,1.843,1416,1.04,1417,1.04,1418,1.04,1419,1.04,1420,1.04,1421,1.843,1422,1.04,1423,1.04,1424,1.04,1425,3.001,1426,1.04,1427,1.04,1428,1.04,1429,1.04,1430,1.843,1431,1.04,1432,1.04,1433,1.843,1434,1.04,1435,1.04,1436,1.04,1437,1.04,1438,1.04,1439,1.04,1440,1.04,1441,1.04,1442,1.04,1443,1.843,1444,1.843,1445,1.04,1446,1.843,1447,1.843,1448,1.04,1449,1.04,1450,1.04,1451,1.04,1452,1.04,1453,1.04,1454,1.843,1455,1.04,1456,1.04,1457,1.04,1458,1.04,1459,1.04,1460,1.04,1461,1.04,1462,3.001,1463,1.843,1464,1.04,1465,1.04,1466,1.04,1467,1.04,1468,1.04,1469,1.04,1470,1.04,1471,1.04,1472,1.04,1473,1.04,1474,1.04,1475,1.843,1476,1.843,1477,0.896,1478,1.04,1479,1.04,1480,1.04,1481,1.04,1482,1.04,1483,2.482,1484,1.04,1485,1.04,1486,3.433,1487,3.433,1488,1.04,1489,1.04,1490,1.04,1491,1.04,1492,1.04,1493,1.04,1494,1.04,1495,1.04,1496,1.04,1497,2.482,1498,1.04,1499,2.482,1500,3.797,1501,1.04,1502,1.04,1503,1.04,1504,1.04,1505,1.04,1506,1.04,1507,1.04,1508,2.482,1509,1.843,1510,1.843,1511,1.843,1512,1.843,1513,1.04,1514,1.04,1515,1.04,1516,1.04,1517,1.843,1518,1.04,1519,1.04,1520,1.04,1521,1.04,1522,1.04,1523,1.04,1524,1.843,1525,1.04,1526,1.04,1527,1.843,1528,1.843,1529,1.843,1530,1.843,1531,1.843,1532,1.843,1533,1.04,1534,1.04,1535,1.04,1536,1.04,1537,2.482,1538,2.482,1539,1.04,1540,2.136,1541,1.04,1542,1.04,1543,1.843,1544,1.04,1545,2.482,1546,2.482,1547,1.04,1548,1.04,1549,1.04,1550,1.04,1551,1.04,1552,1.04,1553,1.04,1554,1.04,1555,1.04,1556,1.04,1557,1.04,1558,1.04,1559,1.04,1560,1.04,1561,1.04,1562,1.04,1563,1.04,1564,1.843,1565,1.843,1566,1.843,1567,1.04,1568,1.04,1569,1.04,1570,1.04,1571,1.04,1572,1.04,1573,1.04]],["title/modules.html",[104,2.557]],["body/modules.html",[23,0.015,52,0.015,53,0.015,103,3.798,104,2.696,108,3.044,109,3.502,110,3.502,111,3.502,112,3.256,1154,4.666,1574,7.357,1575,7.357,1576,7.357,1577,7.468,1578,5.42]],["title/overview.html",[1579,4.427]],["body/overview.html",[2,2.072,23,0.018,52,0.012,53,0.012,55,0.985,103,5.203,104,1.954,105,2.789,106,3.382,107,3.382,108,4.257,109,3.86,110,4.535,111,4.535,112,4.216,113,3.175,114,2.359,115,2.206,153,1.954,189,4.216,214,3.382,216,3.382,217,3.382,218,3.703,219,3.59,220,3.86,236,2.072,243,4.216,348,2.753,548,3.022,626,3.589,669,3.382,671,3.382,732,3.022,807,3.589,853,3.382,854,3.382,940,3.382,941,3.382,942,3.382,1392,3.382,1540,3.382,1579,3.382,1580,5.286,1581,3.928,1582,3.928]],["title/properties.html",[15,1.036,976,2.714]],["body/properties.html",[7,3.756,15,1.328,23,0.018,52,0.016,53,0.016,181,3.491,1114,4.073,1583,5.812,1584,5.812,1585,5.812]],["title/miscellaneous/typealiases.html",[1016,1.568,1586,4.535]],["body/miscellaneous/typealiases.html",[14,0.355,22,0.388,23,0.016,52,0.015,53,0.015,303,2.44,304,4.144,308,2.725,320,4.576,321,3.069,338,2.575,341,4.888,342,3.922,748,3.839,1016,2.725,1020,5.555,1587,5.478]],["title/miscellaneous/variables.html",[1016,1.568,1588,3.904]],["body/miscellaneous/variables.html",[2,2.457,13,2.457,14,0.212,22,0.442,23,0.018,24,1.341,43,2.549,52,0.011,53,0.011,61,1.87,69,0.796,74,1.471,97,3.009,98,2.616,124,3.582,157,3.582,259,3.009,296,4.376,303,1.457,304,3.046,328,2.293,342,1.965,343,2.797,344,2.293,345,2.616,346,3.264,347,2.293,365,3.227,392,2.816,404,2.816,420,3.582,425,2.816,452,3.898,958,4.009,967,2.816,968,2.816,1016,1.627,1020,3.582,1055,4.009,1056,2.816,1059,4.668,1066,2.816,1070,2.816,1097,5.086,1100,2.816,1129,2.816,1149,2.816,1184,2.816,1325,2.816,1477,2.816,1588,2.816,1589,4.657,1590,3.271,1591,3.271,1592,3.271,1593,3.271,1594,3.271,1595,3.271,1596,3.271,1597,3.271,1598,3.271,1599,3.271,1600,4.657,1601,3.271,1602,3.271,1603,3.271,1604,3.271,1605,3.271,1606,3.271,1607,3.271,1608,3.271,1609,3.271,1610,3.271,1611,3.271,1612,3.271,1613,3.271,1614,3.271,1615,4.657,1616,3.271,1617,4.657,1618,3.271,1619,5.423,1620,3.271,1621,3.271,1622,3.271,1623,3.271,1624,3.271,1625,3.271,1626,3.271,1627,3.271,1628,3.271,1629,3.271,1630,3.271,1631,3.271,1632,3.271,1633,3.271,1634,3.271,1635,5.423,1636,3.271,1637,3.271,1638,3.271,1639,3.271,1640,3.271,1641,3.271,1642,3.271,1643,3.271,1644,3.271,1645,3.271,1646,3.271,1647,3.271,1648,3.271,1649,3.271,1650,3.271,1651,3.271,1652,3.271,1653,3.271,1654,3.271,1655,3.271,1656,3.271,1657,3.271,1658,3.271,1659,3.271,1660,3.271,1661,3.271,1662,3.271,1663,3.271,1664,3.271]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"entities/Address.html":{},"classes/AdminUserSeeds1655586994482.html":{},"modules/AppModule.html":{},"classes/AssignRolePermissionsQuery.html":{},"classes/AssignRoleUsersQuery.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"classes/CreatePermissionPolicyHandler.html":{},"classes/CreateUserDto.html":{},"classes/DeletePermissionPolicyHandler.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/ManyToManyUserRoles1655586944086.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"interfaces/PageMetaDtoParameters.html":{},"classes/PageOptionsDto.html":{},"entities/Permission.html":{},"controllers/PermissionController.html":{},"classes/PermissionDto.html":{},"modules/PermissionModule.html":{},"classes/PermissionPermissionsSeed1655765422849.html":{},"injectables/PermissionService.html":{},"classes/PermissionTimestamps1655765304532.html":{},"guards/PoliciesGuard.html":{},"classes/ReadPermissionPolicyHandler.html":{},"classes/RefreshTokenDto.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"classes/RoleMigration165550928088.html":{},"modules/RoleModule.html":{},"classes/RolePermissionsSeed1655595255331.html":{},"classes/RoleSeed1655509280886.html":{},"injectables/RoleService.html":{},"classes/TokenDto.html":{},"classes/UpdatePermissionPolicyHandler.html":{},"entities/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":960,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":1583,"title":{},"body":{"properties.html":{}}}],["0.0.8",{"_index":978,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":1008,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":994,"title":{},"body":{"dependencies.html":{}}}],["0.2.45",{"_index":1015,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":993,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":961,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":973,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":965,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":966,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":963,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":972,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":964,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":971,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":548,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"overview.html":{}}}],["1.0",{"_index":1549,"title":{},"body":{"license.html":{}}}],["1.0.0",{"_index":1594,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1.1",{"_index":1562,"title":{},"body":{"license.html":{}}}],["1.2",{"_index":1115,"title":{},"body":{"index.html":{},"license.html":{}}}],["1/1",{"_index":962,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":406,"title":{},"body":{"modules/HealthModule.html":{},"classes/PageOptionsDto.html":{}}}],["100",{"_index":564,"title":{},"body":{"classes/PageOptionsDto.html":{},"coverage.html":{}}}],["10})@type(undefined)@isint()@min(1)@max(100)@isoptional",{"_index":565,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["15",{"_index":1175,"title":{},"body":{"license.html":{}}}],["16.0.1",{"_index":996,"title":{},"body":{"dependencies.html":{}}}],["1})@type(undefined)@isint()@min(1)@isoptional",{"_index":561,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["2",{"_index":1462,"title":{},"body":{"license.html":{}}}],["2.0",{"_index":1551,"title":{},"body":{"license.html":{}}}],["2.0.1",{"_index":989,"title":{},"body":{"dependencies.html":{}}}],["2.1",{"_index":1545,"title":{},"body":{"license.html":{}}}],["2.1.0",{"_index":980,"title":{},"body":{"dependencies.html":{}}}],["2007",{"_index":1121,"title":{},"body":{"license.html":{}}}],["2016",{"_index":1122,"title":{},"body":{"license.html":{}}}],["23",{"_index":1582,"title":{},"body":{"overview.html":{}}}],["272",{"_index":1520,"title":{},"body":{"license.html":{}}}],["3",{"_index":1540,"title":{},"body":{"license.html":{},"overview.html":{}}}],["3.0",{"_index":1546,"title":{},"body":{"license.html":{}}}],["3.0.2",{"_index":1010,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":998,"title":{},"body":{"dependencies.html":{}}}],["3000",{"_index":1596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3600",{"_index":1613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":1580,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":1003,"title":{},"body":{"dependencies.html":{}}}],["4.4.0",{"_index":1014,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":1605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":1536,"title":{},"body":{"license.html":{}}}],["5.0.1",{"_index":992,"title":{},"body":{"dependencies.html":{}}}],["5.2.0",{"_index":1002,"title":{},"body":{"dependencies.html":{}}}],["5.2.1",{"_index":987,"title":{},"body":{"dependencies.html":{}}}],["5.4.4",{"_index":977,"title":{},"body":{"dependencies.html":{}}}],["5432",{"_index":1617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6",{"_index":1392,"title":{},"body":{"license.html":{},"overview.html":{}}}],["60",{"_index":404,"title":{},"body":{"modules/HealthModule.html":{},"miscellaneous/variables.html":{}}}],["7",{"_index":1581,"title":{},"body":{"overview.html":{}}}],["7.1.0",{"_index":1000,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":1012,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":979,"title":{},"body":{"dependencies.html":{}}}],["8.0.1",{"_index":981,"title":{},"body":{"dependencies.html":{}}}],["8.0.6",{"_index":988,"title":{},"body":{"dependencies.html":{}}}],["8.1.4",{"_index":990,"title":{},"body":{"dependencies.html":{}}}],["8.2.2",{"_index":982,"title":{},"body":{"dependencies.html":{}}}],["8.4.6",{"_index":986,"title":{},"body":{"dependencies.html":{}}}],["8.7.3",{"_index":1005,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":1484,"title":{},"body":{"license.html":{}}}],["900",{"_index":1611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["__dirname",{"_index":1650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ability",{"_index":308,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"classes/CreatePermissionPolicyHandler.html":{},"classes/DeletePermissionPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{},"classes/ReadPermissionPolicyHandler.html":{},"classes/UpdatePermissionPolicyHandler.html":{},"miscellaneous/typealiases.html":{}}}],["ability.can(permissionaction.create",{"_index":356,"title":{},"body":{"classes/CreatePermissionPolicyHandler.html":{},"classes/DeletePermissionPolicyHandler.html":{},"classes/ReadPermissionPolicyHandler.html":{},"controllers/RoleController.html":{},"classes/UpdatePermissionPolicyHandler.html":{}}}],["ability.can(permissionaction.delete",{"_index":360,"title":{},"body":{"classes/CreatePermissionPolicyHandler.html":{},"classes/DeletePermissionPolicyHandler.html":{},"classes/ReadPermissionPolicyHandler.html":{},"controllers/RoleController.html":{},"classes/UpdatePermissionPolicyHandler.html":{}}}],["ability.can(permissionaction.read",{"_index":355,"title":{},"body":{"classes/CreatePermissionPolicyHandler.html":{},"classes/DeletePermissionPolicyHandler.html":{},"classes/ReadPermissionPolicyHandler.html":{},"controllers/RoleController.html":{},"classes/UpdatePermissionPolicyHandler.html":{}}}],["ability.can(permissionaction.update",{"_index":358,"title":{},"body":{"classes/CreatePermissionPolicyHandler.html":{},"classes/DeletePermissionPolicyHandler.html":{},"classes/ReadPermissionPolicyHandler.html":{},"controllers/RoleController.html":{},"classes/UpdatePermissionPolicyHandler.html":{}}}],["ability.factory",{"_index":227,"title":{},"body":{"modules/AuthModule.html":{},"classes/CreatePermissionPolicyHandler.html":{},"classes/DeletePermissionPolicyHandler.html":{},"entities/Permission.html":{},"controllers/PermissionController.html":{},"classes/PermissionDto.html":{},"classes/PermissionPermissionsSeed1655765422849.html":{},"guards/PoliciesGuard.html":{},"classes/ReadPermissionPolicyHandler.html":{},"controllers/RoleController.html":{},"classes/RolePermissionsSeed1655595255331.html":{},"classes/UpdatePermissionPolicyHandler.html":{}}}],["ability.factory.ts",{"_index":304,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ability.factory.ts:24",{"_index":307,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["ability.factory.ts:40",{"_index":407,"title":{},"body":{"interfaces/IPolicyHandler.html":{}}}],["above",{"_index":1264,"title":{},"body":{"license.html":{}}}],["absence",{"_index":1385,"title":{},"body":{"license.html":{}}}],["acc",{"_index":332,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{}}}],["accept",{"_index":1361,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":1444,"title":{},"body":{"license.html":{}}}],["accepted",{"_index":1443,"title":{},"body":{"license.html":{}}}],["accepting",{"_index":1429,"title":{},"body":{"license.html":{}}}],["access",{"_index":1216,"title":{},"body":{"license.html":{}}}],["access_token",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{},"classes/TokenDto.html":{}}}],["access_token_expiration_time",{"_index":1610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["access_token_secret",{"_index":1606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accessible",{"_index":1278,"title":{},"body":{"license.html":{}}}],["accessors",{"_index":554,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["accordance",{"_index":1455,"title":{},"body":{"license.html":{}}}],["according",{"_index":1535,"title":{},"body":{"license.html":{}}}],["accuracy",{"_index":1387,"title":{},"body":{"license.html":{}}}],["act",{"_index":1203,"title":{},"body":{"license.html":{}}}],["action",{"_index":324,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"classes/ManyToManyUserRoles1655586944086.html":{},"entities/Permission.html":{},"classes/PermissionDto.html":{},"classes/PermissionPermissionsSeed1655765422849.html":{},"classes/RolePermissionsSeed1655595255331.html":{}}}],["add",{"_index":481,"title":{},"body":{"classes/ManyToManyUserRoles1655586944086.html":{},"classes/PermissionTimestamps1655765304532.html":{},"classes/RoleMigration165550928088.html":{}}}],["addition",{"_index":1270,"title":{},"body":{"license.html":{}}}],["additional",{"_index":1321,"title":{},"body":{"license.html":{}}}],["additions",{"_index":1572,"title":{},"body":{"license.html":{}}}],["address",{"_index":1,"title":{"entities/Address.html":{}},"body":{"entities/Address.html":{},"entities/User.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["address.user",{"_index":918,"title":{},"body":{"entities/User.html":{}}}],["address/address.entity",{"_index":938,"title":{},"body":{"entities/User.html":{},"modules/UserModule.html":{}}}],["addresses",{"_index":916,"title":{},"body":{"entities/User.html":{}}}],["admin",{"_index":83,"title":{},"body":{"classes/AdminUserSeeds1655586994482.html":{},"classes/PermissionPermissionsSeed1655765422849.html":{},"classes/RolePermissionsSeed1655595255331.html":{},"classes/RoleSeed1655509280886.html":{}}}],["adminrole",{"_index":80,"title":{},"body":{"classes/AdminUserSeeds1655586994482.html":{},"classes/PermissionPermissionsSeed1655765422849.html":{},"classes/RolePermissionsSeed1655595255331.html":{}}}],["adminuser",{"_index":84,"title":{},"body":{"classes/AdminUserSeeds1655586994482.html":{}}}],["adminuserseeds.ts",{"_index":57,"title":{},"body":{"classes/AdminUserSeeds1655586994482.html":{},"coverage.html":{}}}],["adminuserseeds.ts:29",{"_index":67,"title":{},"body":{"classes/AdminUserSeeds1655586994482.html":{}}}],["adminuserseeds.ts:7",{"_index":73,"title":{},"body":{"classes/AdminUserSeeds1655586994482.html":{}}}],["adminuserseeds1655586994482",{"_index":54,"title":{"classes/AdminUserSeeds1655586994482.html":{}},"body":{"classes/AdminUserSeeds1655586994482.html":{},"coverage.html":{}}}],["advanced",{"_index":1646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["advantage",{"_index":1506,"title":{},"body":{"license.html":{}}}],["advised",{"_index":1417,"title":{},"body":{"license.html":{}}}],["affect",{"_index":1489,"title":{},"body":{"license.html":{}}}],["affero",{"_index":1541,"title":{},"body":{"license.html":{}}}],["affirming",{"_index":1451,"title":{},"body":{"license.html":{}}}],["against",{"_index":1441,"title":{},"body":{"license.html":{}}}],["agencies",{"_index":1516,"title":{},"body":{"license.html":{}}}],["agpl",{"_index":1542,"title":{},"body":{"license.html":{}}}],["agree",{"_index":1433,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":1425,"title":{},"body":{"license.html":{}}}],["agreements",{"_index":1422,"title":{},"body":{"license.html":{}}}],["aliases",{"_index":1587,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":1648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allowed",{"_index":1260,"title":{},"body":{"license.html":{}}}],["along",{"_index":1273,"title":{},"body":{"license.html":{}}}],["alter",{"_index":480,"title":{},"body":{"classes/ManyToManyUserRoles1655586944086.html":{},"classes/PermissionTimestamps1655765304532.html":{},"classes/RoleMigration165550928088.html":{},"license.html":{}}}],["another",{"_index":1326,"title":{},"body":{"license.html":{}}}],["api/docs",{"_index":1602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apibearerauth",{"_index":182,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/PermissionController.html":{},"controllers/RoleController.html":{}}}],["apiforbiddenresponse",{"_index":183,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiproperty",{"_index":517,"title":{},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{}}}],["apiproperty({type",{"_index":516,"title":{},"body":{"classes/PageDto.html":{}}}],["apipropertyoptional",{"_index":569,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["apipropertyoptional({enum",{"_index":557,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["apipropertyoptional({minimum",{"_index":560,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["apitags",{"_index":184,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/PermissionController.html":{},"controllers/RoleController.html":{}}}],["apitags('auth",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('health",{"_index":390,"title":{},"body":{"controllers/HealthController.html":{}}}],["apitags('permission",{"_index":629,"title":{},"body":{"controllers/PermissionController.html":{}}}],["apitags('role",{"_index":810,"title":{},"body":{"controllers/RoleController.html":{}}}],["apiunauthorizedresponse",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{}}}],["app",{"_index":1064,"title":{},"body":{"index.html":{}}}],["app_description",{"_index":1592,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app_documentation_path",{"_index":1601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app_guard",{"_index":231,"title":{},"body":{"modules/AuthModule.html":{}}}],["app_mode",{"_index":1599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app_name",{"_index":1591,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app_port",{"_index":1595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app_url",{"_index":1597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app_version",{"_index":1593,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appability",{"_index":321,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"classes/CreatePermissionPolicyHandler.html":{},"classes/DeletePermissionPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{},"classes/ReadPermissionPolicyHandler.html":{},"controllers/RoleController.html":{},"classes/UpdatePermissionPolicyHandler.html":{},"miscellaneous/typealiases.html":{}}}],["appendix",{"_index":1331,"title":{},"body":{"license.html":{}}}],["applicable",{"_index":1172,"title":{},"body":{"license.html":{}}}],["application",{"_index":1056,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["applications",{"_index":1053,"title":{},"body":{"index.html":{}}}],["applies",{"_index":1123,"title":{},"body":{"license.html":{}}}],["apply",{"_index":1257,"title":{},"body":{"license.html":{}}}],["appmodule",{"_index":103,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropriation",{"_index":1570,"title":{},"body":{"license.html":{}}}],["approved",{"_index":1504,"title":{},"body":{"license.html":{}}}],["arising",{"_index":1408,"title":{},"body":{"license.html":{}}}],["article",{"_index":1174,"title":{},"body":{"license.html":{}}}],["asc",{"_index":1021,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["asign",{"_index":803,"title":{},"body":{"controllers/RoleController.html":{}}}],["asserted",{"_index":1440,"title":{},"body":{"license.html":{}}}],["assignpermissions",{"_index":772,"title":{},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{}}}],["assignpermissions(@query",{"_index":823,"title":{},"body":{"controllers/RoleController.html":{}}}],["assignpermissions(queryparams",{"_index":779,"title":{},"body":{"controllers/RoleController.html":{}}}],["assignpermissions(roleid",{"_index":876,"title":{},"body":{"injectables/RoleService.html":{}}}],["assignrolepermissionsquery",{"_index":133,"title":{"classes/AssignRolePermissionsQuery.html":{}},"body":{"classes/AssignRolePermissionsQuery.html":{},"controllers/RoleController.html":{},"coverage.html":{}}}],["assignroleusersquery",{"_index":146,"title":{"classes/AssignRoleUsersQuery.html":{}},"body":{"classes/AssignRoleUsersQuery.html":{},"controllers/RoleController.html":{},"coverage.html":{}}}],["assignusers",{"_index":773,"title":{},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{}}}],["assignusers(@query",{"_index":828,"title":{},"body":{"controllers/RoleController.html":{}}}],["assignusers(queryparams",{"_index":783,"title":{},"body":{"controllers/RoleController.html":{}}}],["assignusers(roleid",{"_index":878,"title":{},"body":{"injectables/RoleService.html":{}}}],["async",{"_index":62,"title":{},"body":{"classes/AdminUserSeeds1655586994482.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtStrategy.html":{},"classes/ManyToManyUserRoles1655586944086.html":{},"classes/PermissionPermissionsSeed1655765422849.html":{},"injectables/PermissionService.html":{},"classes/PermissionTimestamps1655765304532.html":{},"guards/PoliciesGuard.html":{},"classes/RoleMigration165550928088.html":{},"classes/RolePermissionsSeed1655595255331.html":{},"classes/RoleSeed1655509280886.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{}}}],["attached",{"_index":1275,"title":{},"body":{"license.html":{}}}],["attribution",{"_index":1295,"title":{},"body":{"license.html":{}}}],["auth",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":230,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth.guard.ts",{"_index":409,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:12",{"_index":416,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:7",{"_index":413,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.service",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/casl",{"_index":591,"title":{},"body":{"entities/Permission.html":{},"controllers/PermissionController.html":{}}}],["auth/policies.guard",{"_index":622,"title":{},"body":{"controllers/PermissionController.html":{}}}],["auth/policies/permission.policies",{"_index":623,"title":{},"body":{"controllers/PermissionController.html":{}}}],["authcontroller",{"_index":152,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":418,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('jwt",{"_index":422,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authheader",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["authheader.replace('bearer",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{}}}],["authmodule",{"_index":108,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PermissionModule.html":{},"modules/RoleModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1585,"title":{},"body":{"properties.html":{}}}],["authorised",{"_index":1130,"title":{},"body":{"license.html":{}}}],["authority",{"_index":1357,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":1351,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":189,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["autoloadentities",{"_index":1659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["automatically",{"_index":1477,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["available",{"_index":1154,"title":{},"body":{"license.html":{},"modules.html":{}}}],["await",{"_index":81,"title":{},"body":{"classes/AdminUserSeeds1655586994482.html":{},"injectables/AuthService.html":{},"classes/ManyToManyUserRoles1655586944086.html":{},"classes/PermissionPermissionsSeed1655765422849.html":{},"injectables/PermissionService.html":{},"classes/PermissionTimestamps1655765304532.html":{},"guards/PoliciesGuard.html":{},"classes/RoleMigration165550928088.html":{},"classes/RolePermissionsSeed1655595255331.html":{},"classes/RoleSeed1655509280886.html":{},"injectables/RoleService.html":{}}}],["backend",{"_index":1055,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["based",{"_index":1161,"title":{},"body":{"license.html":{}}}],["basis",{"_index":1377,"title":{},"body":{"license.html":{}}}],["bcrypt",{"_index":991,"title":{},"body":{"dependencies.html":{},"miscellaneous/functions.html":{}}}],["becoming",{"_index":1318,"title":{},"body":{"license.html":{}}}],["behalf",{"_index":1430,"title":{},"body":{"license.html":{}}}],["belgian",{"_index":1533,"title":{},"body":{"license.html":{}}}],["below",{"_index":1125,"title":{},"body":{"license.html":{}}}],["benefits",{"_index":1285,"title":{},"body":{"license.html":{}}}],["between",{"_index":1486,"title":{},"body":{"license.html":{}}}],["bodies",{"_index":1514,"title":{},"body":{"license.html":{}}}],["body",{"_index":176,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PermissionController.html":{},"controllers/RoleController.html":{}}}],["boolean",{"_index":340,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"classes/PageMetaDto.html":{},"entities/User.html":{}}}],["bootstrap",{"_index":970,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["both",{"_index":1325,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["bottom",{"_index":1448,"title":{},"body":{"license.html":{}}}],["bound",{"_index":9,"title":{},"body":{"entities/Address.html":{}}}],["breach",{"_index":1478,"title":{},"body":{"license.html":{}}}],["brings",{"_index":1359,"title":{},"body":{"license.html":{}}}],["browse",{"_index":1577,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1574,"title":{},"body":{"modules.html":{}}}],["bugs",{"_index":1374,"title":{},"body":{"license.html":{}}}],["build",{"_index":1092,"title":{},"body":{"index.html":{}}}],["building",{"_index":1048,"title":{},"body":{"index.html":{}}}],["business",{"_index":1526,"title":{},"body":{"license.html":{}}}],["called",{"_index":327,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{}}}],["canactivate",{"_index":410,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/PoliciesGuard.html":{}}}],["canactivate(context",{"_index":414,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/PoliciesGuard.html":{}}}],["carry",{"_index":1308,"title":{},"body":{"license.html":{}}}],["cascade",{"_index":486,"title":{},"body":{"classes/ManyToManyUserRoles1655586944086.html":{}}}],["case",{"_index":1156,"title":{},"body":{"license.html":{}}}],["cases",{"_index":1396,"title":{},"body":{"license.html":{}}}],["casl",{"_index":226,"title":{},"body":{"modules/AuthModule.html":{},"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"classes/CreatePermissionPolicyHandler.html":{},"classes/DeletePermissionPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{},"classes/ReadPermissionPolicyHandler.html":{},"classes/UpdatePermissionPolicyHandler.html":{}}}],["casl/ability",{"_index":309,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"dependencies.html":{}}}],["caslabilityfactory",{"_index":218,"title":{"injectables/CaslAbilityFactory.html":{}},"body":{"modules/AuthModule.html":{},"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{},"coverage.html":{},"overview.html":{}}}],["caslpermission",{"_index":323,"title":{"interfaces/CaslPermission.html":{}},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"coverage.html":{}}}],["caslpermissions",{"_index":334,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{}}}],["catch",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{}}}],["cause",{"_index":1307,"title":{},"body":{"license.html":{}}}],["caused",{"_index":1401,"title":{},"body":{"license.html":{}}}],["cc",{"_index":1560,"title":{},"body":{"license.html":{}}}],["cecill",{"_index":1550,"title":{},"body":{"license.html":{}}}],["chain",{"_index":1350,"title":{},"body":{"license.html":{}}}],["change",{"_index":1105,"title":{},"body":{"index.html":{}}}],["changes",{"_index":1571,"title":{},"body":{"license.html":{}}}],["channel",{"_index":1469,"title":{},"body":{"license.html":{}}}],["check",{"_index":380,"title":{},"body":{"controllers/HealthController.html":{}}}],["check_policies_key",{"_index":343,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["check_policy",{"_index":344,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"miscellaneous/variables.html":{}}}],["checkpolicies",{"_index":345,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"controllers/PermissionController.html":{},"controllers/RoleController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["checkpolicies((ability",{"_index":811,"title":{},"body":{"controllers/RoleController.html":{}}}],["checkpolicies(new",{"_index":631,"title":{},"body":{"controllers/PermissionController.html":{}}}],["choice",{"_index":1507,"title":{},"body":{"license.html":{}}}],["choose",{"_index":1423,"title":{},"body":{"license.html":{}}}],["circumstance",{"_index":1233,"title":{},"body":{"license.html":{}}}],["city",{"_index":16,"title":{},"body":{"entities/Address.html":{}}}],["claims",{"_index":1439,"title":{},"body":{"license.html":{}}}],["class",{"_index":51,"title":{"classes/AdminUserSeeds1655586994482.html":{},"classes/AssignRolePermissionsQuery.html":{},"classes/AssignRoleUsersQuery.html":{},"classes/CreatePermissionPolicyHandler.html":{},"classes/CreateUserDto.html":{},"classes/DeletePermissionPolicyHandler.html":{},"classes/LoginDto.html":{},"classes/ManyToManyUserRoles1655586944086.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/PermissionDto.html":{},"classes/PermissionPermissionsSeed1655765422849.html":{},"classes/PermissionTimestamps1655765304532.html":{},"classes/ReadPermissionPolicyHandler.html":{},"classes/RefreshTokenDto.html":{},"classes/RoleDto.html":{},"classes/RoleMigration165550928088.html":{},"classes/RolePermissionsSeed1655595255331.html":{},"classes/RoleSeed1655509280886.html":{},"classes/TokenDto.html":{},"classes/UpdatePermissionPolicyHandler.html":{}},"body":{"entities/Address.html":{},"classes/AdminUserSeeds1655586994482.html":{},"modules/AppModule.html":{},"classes/AssignRolePermissionsQuery.html":{},"classes/AssignRoleUsersQuery.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"classes/CreatePermissionPolicyHandler.html":{},"classes/CreateUserDto.html":{},"classes/DeletePermissionPolicyHandler.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/ManyToManyUserRoles1655586944086.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Permission.html":{},"controllers/PermissionController.html":{},"classes/PermissionDto.html":{},"modules/PermissionModule.html":{},"classes/PermissionPermissionsSeed1655765422849.html":{},"injectables/PermissionService.html":{},"classes/PermissionTimestamps1655765304532.html":{},"guards/PoliciesGuard.html":{},"classes/ReadPermissionPolicyHandler.html":{},"classes/RefreshTokenDto.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"classes/RoleMigration165550928088.html":{},"modules/RoleModule.html":{},"classes/RolePermissionsSeed1655595255331.html":{},"classes/RoleSeed1655509280886.html":{},"injectables/RoleService.html":{},"classes/TokenDto.html":{},"classes/UpdatePermissionPolicyHandler.html":{},"entities/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":55,"title":{},"body":{"classes/AdminUserSeeds1655586994482.html":{},"classes/AssignRolePermissionsQuery.html":{},"classes/AssignRoleUsersQuery.html":{},"classes/CreatePermissionPolicyHandler.html":{},"classes/CreateUserDto.html":{},"classes/DeletePermissionPolicyHandler.html":{},"classes/LoginDto.html":{},"classes/ManyToManyUserRoles1655586944086.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"classes/PermissionDto.html":{},"classes/PermissionPermissionsSeed1655765422849.html":{},"classes/PermissionTimestamps1655765304532.html":{},"classes/ReadPermissionPolicyHandler.html":{},"classes/RefreshTokenDto.html":{},"classes/RoleDto.html":{},"classes/RoleMigration165550928088.html":{},"classes/RolePermissionsSeed1655595255331.html":{},"classes/RoleSeed1655509280886.html":{},"classes/TokenDto.html":{},"classes/UpdatePermissionPolicyHandler.html":{},"overview.html":{}}}],["classify",{"_index":1169,"title":{},"body":{"license.html":{}}}],["clause",{"_index":1313,"title":{},"body":{"license.html":{}}}],["clear",{"_index":1457,"title":{},"body":{"license.html":{}}}],["cli",{"_index":1662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clicking",{"_index":1446,"title":{},"body":{"license.html":{}}}],["cluster_appmodule",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":214,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":217,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":215,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":216,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_permissionmodule",{"_index":669,"title":{},"body":{"modules/PermissionModule.html":{},"overview.html":{}}}],["cluster_permissionmodule_imports",{"_index":670,"title":{},"body":{"modules/PermissionModule.html":{}}}],["cluster_permissionmodule_providers",{"_index":671,"title":{},"body":{"modules/PermissionModule.html":{},"overview.html":{}}}],["cluster_rolemodule",{"_index":853,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_rolemodule_imports",{"_index":855,"title":{},"body":{"modules/RoleModule.html":{}}}],["cluster_rolemodule_providers",{"_index":854,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":940,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":941,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":942,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["code",{"_index":1091,"title":{},"body":{"index.html":{},"license.html":{}}}],["column",{"_index":26,"title":{},"body":{"entities/Address.html":{},"entities/Permission.html":{},"classes/PermissionTimestamps1655765304532.html":{},"entities/Role.html":{},"classes/RoleMigration165550928088.html":{},"entities/User.html":{}}}],["column({default",{"_index":930,"title":{},"body":{"entities/User.html":{}}}],["column({nullable",{"_index":921,"title":{},"body":{"entities/User.html":{}}}],["column({unique",{"_index":925,"title":{},"body":{"entities/User.html":{}}}],["command",{"_index":1087,"title":{},"body":{"index.html":{}}}],["commercial",{"_index":1414,"title":{},"body":{"license.html":{}}}],["commission",{"_index":1497,"title":{},"body":{"license.html":{}}}],["commons",{"_index":1557,"title":{},"body":{"license.html":{}}}],["communicate",{"_index":1236,"title":{},"body":{"license.html":{}}}],["communicated",{"_index":1153,"title":{},"body":{"license.html":{}}}],["communicates",{"_index":1193,"title":{},"body":{"license.html":{}}}],["communicating",{"_index":1209,"title":{},"body":{"license.html":{}}}],["communication",{"_index":1202,"title":{},"body":{"license.html":{}}}],["compare",{"_index":1037,"title":{},"body":{"miscellaneous/functions.html":{}}}],["comparepasswords",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["comparepasswords(password",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["comparepasswords(rawpassword",{"_index":1026,"title":{},"body":{"miscellaneous/functions.html":{}}}],["compares",{"_index":1031,"title":{},"body":{"miscellaneous/functions.html":{}}}],["compatibility",{"_index":1324,"title":{},"body":{"license.html":{}}}],["compatible",{"_index":1327,"title":{},"body":{"license.html":{}}}],["competent",{"_index":1523,"title":{},"body":{"license.html":{}}}],["compiled",{"_index":1184,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["complete",{"_index":1485,"title":{},"body":{"license.html":{}}}],["compliance",{"_index":1482,"title":{},"body":{"license.html":{}}}],["compose",{"_index":1074,"title":{},"body":{"index.html":{}}}],["computer",{"_index":1187,"title":{},"body":{"license.html":{}}}],["concerning",{"_index":1380,"title":{},"body":{"license.html":{}}}],["conclude",{"_index":1424,"title":{},"body":{"license.html":{}}}],["concluded",{"_index":1473,"title":{},"body":{"license.html":{}}}],["condition",{"_index":1394,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":1322,"title":{},"body":{"license.html":{}}}],["conducts",{"_index":1525,"title":{},"body":{"license.html":{}}}],["config/postgres.config",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["conflict",{"_index":1333,"title":{},"body":{"license.html":{}}}],["consent",{"_index":1452,"title":{},"body":{"license.html":{}}}],["consistent",{"_index":1428,"title":{},"body":{"license.html":{}}}],["console",{"_index":1647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["const",{"_index":79,"title":{},"body":{"classes/AdminUserSeeds1655586994482.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"classes/PermissionDto.html":{},"classes/PermissionPermissionsSeed1655765422849.html":{},"injectables/PermissionService.html":{},"guards/PoliciesGuard.html":{},"classes/RoleDto.html":{},"classes/RolePermissionsSeed1655595255331.html":{},"classes/RoleSeed1655509280886.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{}}}],["constraint",{"_index":461,"title":{},"body":{"classes/ManyToManyUserRoles1655586944086.html":{}}}],["constructor",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{},"controllers/HealthController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"guards/PoliciesGuard.html":{},"classes/TokenDto.html":{}}}],["constructor(access_token",{"_index":909,"title":{},"body":{"classes/TokenDto.html":{}}}],["constructor(data",{"_index":510,"title":{},"body":{"classes/PageDto.html":{}}}],["constructor(private",{"_index":423,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["constructor(reflector",{"_index":411,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/PoliciesGuard.html":{}}}],["constructor(undefined",{"_index":530,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["constructor(userservice",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{}}}],["construed",{"_index":1493,"title":{},"body":{"license.html":{}}}],["contain",{"_index":1372,"title":{},"body":{"license.html":{}}}],["content",{"_index":1349,"title":{},"body":{"license.html":{}}}],["context",{"_index":417,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/PoliciesGuard.html":{}}}],["context.getclass",{"_index":428,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.gethandler",{"_index":427,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/PoliciesGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":743,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["continues",{"_index":1280,"title":{},"body":{"license.html":{}}}],["continuously",{"_index":1367,"title":{},"body":{"license.html":{}}}],["contractor",{"_index":870,"title":{},"body":{"classes/RoleSeed1655509280886.html":{}}}],["contributes",{"_index":1197,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":1364,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":1358,"title":{},"body":{"license.html":{}}}],["contributor(s",{"_index":1194,"title":{},"body":{"license.html":{}}}],["contributors",{"_index":1363,"title":{},"body":{"license.html":{}}}],["controller",{"_index":151,"title":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/PermissionController.html":{},"controllers/RoleController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/PermissionController.html":{},"controllers/RoleController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('health",{"_index":389,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller('permission",{"_index":628,"title":{},"body":{"controllers/PermissionController.html":{}}}],["controller('role",{"_index":809,"title":{},"body":{"controllers/RoleController.html":{}}}],["controllers",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/PermissionController.html":{},"modules/PermissionModule.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"overview.html":{}}}],["convenient",{"_index":1179,"title":{},"body":{"license.html":{}}}],["copies",{"_index":1214,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1272,"title":{},"body":{"license.html":{}}}],["copyleft",{"_index":1312,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1136,"title":{},"body":{"license.html":{}}}],["countries",{"_index":1255,"title":{},"body":{"license.html":{}}}],["country",{"_index":17,"title":{},"body":{"entities/Address.html":{},"license.html":{}}}],["court",{"_index":1517,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":954,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["covered",{"_index":1134,"title":{},"body":{"license.html":{}}}],["create",{"_index":315,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"classes/ManyToManyUserRoles1655586944086.html":{},"miscellaneous/enumerations.html":{}}}],["created",{"_index":1159,"title":{},"body":{"license.html":{}}}],["createdatecolumn",{"_index":32,"title":{},"body":{"entities/Address.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["createforuser",{"_index":305,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["createforuser(user",{"_index":306,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{}}}],["createpermission",{"_index":598,"title":{},"body":{"controllers/PermissionController.html":{},"injectables/PermissionService.html":{}}}],["createpermission(@body",{"_index":640,"title":{},"body":{"controllers/PermissionController.html":{}}}],["createpermission(permissiondto",{"_index":603,"title":{},"body":{"controllers/PermissionController.html":{},"injectables/PermissionService.html":{}}}],["createpermissionpolicyhandler",{"_index":349,"title":{"classes/CreatePermissionPolicyHandler.html":{}},"body":{"classes/CreatePermissionPolicyHandler.html":{},"classes/DeletePermissionPolicyHandler.html":{},"controllers/PermissionController.html":{},"classes/ReadPermissionPolicyHandler.html":{},"classes/UpdatePermissionPolicyHandler.html":{},"coverage.html":{}}}],["createrole",{"_index":774,"title":{},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{}}}],["createrole(@body",{"_index":818,"title":{},"body":{"controllers/RoleController.html":{}}}],["createrole(roledto",{"_index":786,"title":{},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{}}}],["createuserdto",{"_index":361,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["creating",{"_index":1098,"title":{},"body":{"index.html":{}}}],["creation",{"_index":1198,"title":{},"body":{"license.html":{}}}],["creative",{"_index":1556,"title":{},"body":{"license.html":{}}}],["credentials",{"_index":163,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["csrf",{"_index":997,"title":{},"body":{"dependencies.html":{}}}],["customary",{"_index":1345,"title":{},"body":{"license.html":{}}}],["damage",{"_index":1415,"title":{},"body":{"license.html":{}}}],["damages",{"_index":1399,"title":{},"body":{"license.html":{}}}],["data",{"_index":508,"title":{},"body":{"classes/PageDto.html":{},"license.html":{}}}],["database",{"_index":13,"title":{},"body":{"entities/Address.html":{},"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"injectables/PermissionService.html":{},"injectables/RoleService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["databse",{"_index":1629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":31,"title":{},"body":{"entities/Address.html":{},"classes/AdminUserSeeds1655586994482.html":{},"classes/CreateUserDto.html":{},"entities/Permission.html":{},"classes/PermissionDto.html":{},"entities/Role.html":{},"classes/RoleDto.html":{},"classes/RoleSeed1655509280886.html":{},"entities/User.html":{},"license.html":{}}}],["datecreated",{"_index":18,"title":{},"body":{"entities/Address.html":{},"classes/AdminUserSeeds1655586994482.html":{},"entities/Permission.html":{},"classes/PermissionDto.html":{},"classes/PermissionTimestamps1655765304532.html":{},"entities/Role.html":{},"classes/RoleDto.html":{},"classes/RoleMigration165550928088.html":{},"classes/RoleSeed1655509280886.html":{},"entities/User.html":{}}}],["dateofbirth",{"_index":95,"title":{},"body":{"classes/AdminUserSeeds1655586994482.html":{},"classes/CreateUserDto.html":{},"entities/User.html":{}}}],["dateupdated",{"_index":19,"title":{},"body":{"entities/Address.html":{},"classes/AdminUserSeeds1655586994482.html":{},"entities/Permission.html":{},"classes/PermissionDto.html":{},"classes/PermissionTimestamps1655765304532.html":{},"entities/Role.html":{},"classes/RoleDto.html":{},"classes/RoleMigration165550928088.html":{},"classes/RoleSeed1655509280886.html":{},"entities/User.html":{}}}],["db",{"_index":392,"title":{},"body":{"controllers/HealthController.html":{},"miscellaneous/variables.html":{}}}],["dbpermissions",{"_index":330,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{}}}],["dbpermissions.map((p",{"_index":335,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{}}}],["decorators",{"_index":25,"title":{},"body":{"entities/Address.html":{},"classes/AssignRolePermissionsQuery.html":{},"classes/AssignRoleUsersQuery.html":{},"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"controllers/HealthController.html":{},"classes/LoginDto.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Permission.html":{},"controllers/PermissionController.html":{},"classes/PermissionDto.html":{},"injectables/PermissionService.html":{},"classes/RefreshTokenDto.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"injectables/RoleService.html":{},"entities/User.html":{},"injectables/UserService.html":{}}}],["default",{"_index":452,"title":{},"body":{"classes/ManyToManyUserRoles1655586944086.html":{},"classes/PageOptionsDto.html":{},"classes/PermissionTimestamps1655765304532.html":{},"classes/RoleMigration165550928088.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["defects",{"_index":1373,"title":{},"body":{"license.html":{}}}],["defend",{"_index":1435,"title":{},"body":{"license.html":{}}}],["define",{"_index":1165,"title":{},"body":{"license.html":{}}}],["defined",{"_index":27,"title":{},"body":{"entities/Address.html":{},"classes/AdminUserSeeds1655586994482.html":{},"classes/AssignRolePermissionsQuery.html":{},"classes/AssignRoleUsersQuery.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CreatePermissionPolicyHandler.html":{},"classes/CreateUserDto.html":{},"classes/DeletePermissionPolicyHandler.html":{},"controllers/HealthController.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/ManyToManyUserRoles1655586944086.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"entities/Permission.html":{},"controllers/PermissionController.html":{},"classes/PermissionDto.html":{},"classes/PermissionPermissionsSeed1655765422849.html":{},"injectables/PermissionService.html":{},"classes/PermissionTimestamps1655765304532.html":{},"guards/PoliciesGuard.html":{},"classes/ReadPermissionPolicyHandler.html":{},"classes/RefreshTokenDto.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"classes/RoleMigration165550928088.html":{},"classes/RolePermissionsSeed1655595255331.html":{},"classes/RoleSeed1655509280886.html":{},"injectables/RoleService.html":{},"classes/TokenDto.html":{},"classes/UpdatePermissionPolicyHandler.html":{},"entities/User.html":{},"injectables/UserService.html":{},"license.html":{}}}],["defining",{"_index":1426,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":1148,"title":{},"body":{"license.html":{}}}],["dejan",{"_index":88,"title":{},"body":{"classes/AdminUserSeeds1655586994482.html":{}}}],["delete",{"_index":318,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"classes/ManyToManyUserRoles1655586944086.html":{},"controllers/PermissionController.html":{},"controllers/RoleController.html":{},"miscellaneous/enumerations.html":{}}}],["delete(':id",{"_index":637,"title":{},"body":{"controllers/PermissionController.html":{},"controllers/RoleController.html":{}}}],["delete(':id')@version('1')@checkpolicies(ability",{"_index":791,"title":{},"body":{"controllers/RoleController.html":{}}}],["delete(':id')@version('1')@checkpolicies(new",{"_index":608,"title":{},"body":{"controllers/PermissionController.html":{}}}],["deletepermission",{"_index":599,"title":{},"body":{"controllers/PermissionController.html":{}}}],["deletepermission(@param('id",{"_index":638,"title":{},"body":{"controllers/PermissionController.html":{}}}],["deletepermission(id",{"_index":607,"title":{},"body":{"controllers/PermissionController.html":{}}}],["deletepermissionbyid",{"_index":690,"title":{},"body":{"injectables/PermissionService.html":{}}}],["deletepermissionbyid(id",{"_index":693,"title":{},"body":{"injectables/PermissionService.html":{}}}],["deletepermissionpolicyhandler",{"_index":359,"title":{"classes/DeletePermissionPolicyHandler.html":{}},"body":{"classes/CreatePermissionPolicyHandler.html":{},"classes/DeletePermissionPolicyHandler.html":{},"controllers/PermissionController.html":{},"classes/ReadPermissionPolicyHandler.html":{},"classes/UpdatePermissionPolicyHandler.html":{},"coverage.html":{}}}],["deleterole",{"_index":775,"title":{},"body":{"controllers/RoleController.html":{}}}],["deleterole(@param('id",{"_index":816,"title":{},"body":{"controllers/RoleController.html":{}}}],["deleterole(id",{"_index":790,"title":{},"body":{"controllers/RoleController.html":{}}}],["deleterolebyid",{"_index":874,"title":{},"body":{"injectables/RoleService.html":{}}}],["deleterolebyid(id",{"_index":881,"title":{},"body":{"injectables/RoleService.html":{}}}],["dependence",{"_index":1167,"title":{},"body":{"license.html":{}}}],["dependencies",{"_index":105,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PermissionModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":1103,"title":{},"body":{"index.html":{}}}],["deprive",{"_index":1284,"title":{},"body":{"license.html":{}}}],["derivative",{"_index":1157,"title":{},"body":{"license.html":{}}}],["desc",{"_index":1022,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["describing",{"_index":1346,"title":{},"body":{"license.html":{}}}],["description",{"_index":7,"title":{},"body":{"entities/Address.html":{},"controllers/AuthController.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["details",{"_index":1117,"title":{},"body":{"index.html":{}}}],["determined",{"_index":1170,"title":{},"body":{"license.html":{}}}],["dev",{"_index":1600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dev.env.ts",{"_index":958,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["dev.yml",{"_index":1076,"title":{},"body":{"index.html":{}}}],["development",{"_index":1065,"title":{},"body":{"index.html":{},"license.html":{}}}],["direct",{"_index":1405,"title":{},"body":{"license.html":{}}}],["directly",{"_index":1400,"title":{},"body":{"license.html":{}}}],["disable",{"_index":1639,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disclaimer",{"_index":1303,"title":{},"body":{"license.html":{}}}],["display",{"_index":1238,"title":{},"body":{"license.html":{}}}],["displaying",{"_index":1450,"title":{},"body":{"license.html":{}}}],["disposal",{"_index":1219,"title":{},"body":{"license.html":{}}}],["dist",{"_index":1651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dist/src/**/*.entity.js",{"_index":1633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dist/src/migrations/*.js",{"_index":1658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dist/src/migrations/seed/*.js",{"_index":1657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["distribute",{"_index":1241,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":1152,"title":{},"body":{"license.html":{}}}],["distributes",{"_index":1192,"title":{},"body":{"license.html":{}}}],["distributing",{"_index":1208,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":1201,"title":{},"body":{"license.html":{}}}],["docker",{"_index":1073,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":955,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["documentation:buildor",{"_index":1093,"title":{},"body":{"index.html":{}}}],["documentation:serveafter",{"_index":1086,"title":{},"body":{"index.html":{}}}],["done",{"_index":1314,"title":{},"body":{"license.html":{}}}],["dotenv",{"_index":995,"title":{},"body":{"dependencies.html":{}}}],["down",{"_index":63,"title":{},"body":{"classes/AdminUserSeeds1655586994482.html":{},"classes/ManyToManyUserRoles1655586944086.html":{},"classes/PermissionPermissionsSeed1655765422849.html":{},"classes/PermissionTimestamps1655765304532.html":{},"classes/RoleMigration165550928088.html":{},"classes/RolePermissionsSeed1655595255331.html":{},"classes/RoleSeed1655509280886.html":{},"license.html":{}}}],["down(queryrunner",{"_index":65,"title":{},"body":{"classes/AdminUserSeeds1655586994482.html":{},"classes/ManyToManyUserRoles1655586944086.html":{},"classes/PermissionPermissionsSeed1655765422849.html":{},"classes/PermissionTimestamps1655765304532.html":{},"classes/RoleMigration165550928088.html":{},"classes/RolePermissionsSeed1655595255331.html":{},"classes/RoleSeed1655509280886.html":{}}}],["download",{"_index":1466,"title":{},"body":{"license.html":{}}}],["drop",{"_index":496,"title":{},"body":{"classes/ManyToManyUserRoles1655586944086.html":{},"classes/PermissionTimestamps1655765304532.html":{},"classes/RoleMigration165550928088.html":{}}}],["dto",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{},"classes/PageMetaDto.html":{},"interfaces/PageMetaDtoParameters.html":{},"injectables/PermissionService.html":{},"injectables/RoleService.html":{},"coverage.html":{}}}],["dto.frommodel(permission",{"_index":714,"title":{},"body":{"injectables/PermissionService.html":{}}}],["dto.frommodel(result",{"_index":716,"title":{},"body":{"injectables/PermissionService.html":{},"injectables/RoleService.html":{}}}],["dto.frommodel(role",{"_index":896,"title":{},"body":{"injectables/RoleService.html":{}}}],["duration",{"_index":1231,"title":{},"body":{"license.html":{}}}],["e2e",{"_index":1081,"title":{},"body":{"index.html":{}}}],["each",{"_index":139,"title":{},"body":{"classes/AssignRolePermissionsQuery.html":{},"classes/AssignRoleUsersQuery.html":{},"license.html":{}}}],["eager",{"_index":764,"title":{},"body":{"entities/Role.html":{},"entities/User.html":{}}}],["easily",{"_index":1276,"title":{},"body":{"license.html":{}}}],["eclipse",{"_index":1547,"title":{},"body":{"license.html":{}}}],["economic",{"_index":1262,"title":{},"body":{"license.html":{}}}],["effective",{"_index":1261,"title":{},"body":{"license.html":{}}}],["efficient",{"_index":1049,"title":{},"body":{"index.html":{}}}],["electronic",{"_index":1464,"title":{},"body":{"license.html":{}}}],["email",{"_index":91,"title":{},"body":{"classes/AdminUserSeeds1655586994482.html":{},"classes/CreateUserDto.html":{},"entities/User.html":{},"injectables/UserService.html":{}}}],["emailorusername",{"_index":951,"title":{},"body":{"injectables/UserService.html":{}}}],["empty",{"_index":1099,"title":{},"body":{"index.html":{}}}],["encoded",{"_index":1042,"title":{},"body":{"miscellaneous/functions.html":{}}}],["encodepassword",{"_index":77,"title":{},"body":{"classes/AdminUserSeeds1655586994482.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["encodepassword('admin",{"_index":99,"title":{},"body":{"classes/AdminUserSeeds1655586994482.html":{}}}],["encodepassword(rawpassword",{"_index":1038,"title":{},"body":{"miscellaneous/functions.html":{}}}],["encodes",{"_index":1039,"title":{},"body":{"miscellaneous/functions.html":{}}}],["enforceability",{"_index":1491,"title":{},"body":{"license.html":{}}}],["enforceable",{"_index":1496,"title":{},"body":{"license.html":{}}}],["entities",{"_index":2,"title":{},"body":{"entities/Address.html":{},"entities/Permission.html":{},"injectables/PermissionService.html":{},"entities/Role.html":{},"injectables/RoleService.html":{},"entities/User.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["entities.map((permission",{"_index":713,"title":{},"body":{"injectables/PermissionService.html":{}}}],["entities.map((role",{"_index":895,"title":{},"body":{"injectables/RoleService.html":{}}}],["entity",{"_index":0,"title":{"entities/Address.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{}},"body":{"entities/Address.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{},"coverage.html":{}}}],["entity.ts",{"_index":1632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enum",{"_index":313,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"classes/PageOptionsDto.html":{}}}],["enumerations",{"_index":1017,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{},"controllers/HealthController.html":{},"injectables/JwtStrategy.html":{}}}],["enviroment",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{},"controllers/HealthController.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["enviroment.access_token_expiration_time",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{}}}],["enviroment.access_token_secret",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["enviroment.app_url",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{},"controllers/HealthController.html":{},"injectables/JwtStrategy.html":{}}}],["enviroment.postgres_database",{"_index":1631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enviroment.postgres_host",{"_index":1625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enviroment.postgres_password",{"_index":1630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enviroment.postgres_port",{"_index":1627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enviroment.postgres_username",{"_index":1628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enviroment.refresh_token_expiration_time",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{}}}],["enviroment.refresh_token_secret",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{}}}],["epl",{"_index":1548,"title":{},"body":{"license.html":{}}}],["errors",{"_index":1386,"title":{},"body":{"license.html":{}}}],["essential",{"_index":1217,"title":{},"body":{"license.html":{}}}],["eupl",{"_index":1120,"title":{},"body":{"license.html":{}}}],["euplor",{"_index":1144,"title":{},"body":{"license.html":{}}}],["european",{"_index":1112,"title":{},"body":{"index.html":{},"license.html":{}}}],["even",{"_index":1416,"title":{},"body":{"license.html":{}}}],["event",{"_index":1403,"title":{},"body":{"license.html":{}}}],["example",{"_index":1317,"title":{},"body":{"license.html":{}}}],["except",{"_index":1343,"title":{},"body":{"license.html":{}}}],["exception",{"_index":1286,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":1229,"title":{},"body":{"license.html":{}}}],["execpolicyhandler",{"_index":735,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["execpolicyhandler(handler",{"_index":738,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["executable",{"_index":1155,"title":{},"body":{"license.html":{}}}],["executioncontext",{"_index":415,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/PoliciesGuard.html":{}}}],["exercise",{"_index":1259,"title":{},"body":{"license.html":{}}}],["exercised",{"_index":1246,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":1461,"title":{},"body":{"license.html":{}}}],["exhaustion",{"_index":1289,"title":{},"body":{"license.html":{}}}],["expiresin",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":50,"title":{},"body":{"entities/Address.html":{},"classes/AdminUserSeeds1655586994482.html":{},"modules/AppModule.html":{},"classes/AssignRolePermissionsQuery.html":{},"classes/AssignRoleUsersQuery.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"classes/CreatePermissionPolicyHandler.html":{},"classes/CreateUserDto.html":{},"classes/DeletePermissionPolicyHandler.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/ManyToManyUserRoles1655586944086.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"interfaces/PageMetaDtoParameters.html":{},"classes/PageOptionsDto.html":{},"entities/Permission.html":{},"controllers/PermissionController.html":{},"classes/PermissionDto.html":{},"modules/PermissionModule.html":{},"classes/PermissionPermissionsSeed1655765422849.html":{},"injectables/PermissionService.html":{},"classes/PermissionTimestamps1655765304532.html":{},"guards/PoliciesGuard.html":{},"classes/ReadPermissionPolicyHandler.html":{},"classes/RefreshTokenDto.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"classes/RoleMigration165550928088.html":{},"modules/RoleModule.html":{},"classes/RolePermissionsSeed1655595255331.html":{},"classes/RoleSeed1655509280886.html":{},"injectables/RoleService.html":{},"classes/TokenDto.html":{},"classes/UpdatePermissionPolicyHandler.html":{},"entities/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":223,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["express",{"_index":984,"title":{},"body":{"dependencies.html":{}}}],["expressed",{"_index":1145,"title":{},"body":{"license.html":{}}}],["expressly",{"_index":1316,"title":{},"body":{"license.html":{}}}],["extends",{"_index":421,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["extent",{"_index":1132,"title":{},"body":{"license.html":{}}}],["extractjwt",{"_index":438,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":443,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["f",{"_index":1075,"title":{},"body":{"index.html":{}}}],["fact",{"_index":1442,"title":{},"body":{"license.html":{}}}],["failure",{"_index":1412,"title":{},"body":{"license.html":{}}}],["false",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["far",{"_index":1253,"title":{},"body":{"license.html":{}}}],["fast",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["fastify",{"_index":985,"title":{},"body":{"dependencies.html":{}}}],["file",{"_index":5,"title":{},"body":{"entities/Address.html":{},"classes/AdminUserSeeds1655586994482.html":{},"modules/AppModule.html":{},"classes/AssignRolePermissionsQuery.html":{},"classes/AssignRoleUsersQuery.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"classes/CreatePermissionPolicyHandler.html":{},"classes/CreateUserDto.html":{},"classes/DeletePermissionPolicyHandler.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/ManyToManyUserRoles1655586944086.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"interfaces/PageMetaDtoParameters.html":{},"classes/PageOptionsDto.html":{},"entities/Permission.html":{},"controllers/PermissionController.html":{},"classes/PermissionDto.html":{},"modules/PermissionModule.html":{},"classes/PermissionPermissionsSeed1655765422849.html":{},"injectables/PermissionService.html":{},"classes/PermissionTimestamps1655765304532.html":{},"guards/PoliciesGuard.html":{},"classes/ReadPermissionPolicyHandler.html":{},"classes/RefreshTokenDto.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"classes/RoleMigration165550928088.html":{},"modules/RoleModule.html":{},"classes/RolePermissionsSeed1655595255331.html":{},"classes/RoleSeed1655509280886.html":{},"injectables/RoleService.html":{},"classes/TokenDto.html":{},"classes/UpdatePermissionPolicyHandler.html":{},"entities/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["findallpermissions",{"_index":600,"title":{},"body":{"controllers/PermissionController.html":{}}}],["findallpermissions(@query",{"_index":632,"title":{},"body":{"controllers/PermissionController.html":{}}}],["findallpermissions(pageoptionsdto",{"_index":610,"title":{},"body":{"controllers/PermissionController.html":{}}}],["findallpermissionspageable",{"_index":691,"title":{},"body":{"injectables/PermissionService.html":{}}}],["findallpermissionspageable(pageoptionsdto",{"_index":695,"title":{},"body":{"injectables/PermissionService.html":{}}}],["findallroles",{"_index":776,"title":{},"body":{"controllers/RoleController.html":{}}}],["findallroles(@query",{"_index":812,"title":{},"body":{"controllers/RoleController.html":{}}}],["findallroles(pageoptionsdto",{"_index":793,"title":{},"body":{"controllers/RoleController.html":{}}}],["findallrolespageable",{"_index":875,"title":{},"body":{"injectables/RoleService.html":{}}}],["findallrolespageable(pageoptionsdto",{"_index":883,"title":{},"body":{"injectables/RoleService.html":{}}}],["findbyusernameoremail",{"_index":948,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyusernameoremail(emailorusername",{"_index":949,"title":{},"body":{"injectables/UserService.html":{}}}],["findpermissionbyid",{"_index":601,"title":{},"body":{"controllers/PermissionController.html":{},"injectables/PermissionService.html":{}}}],["findpermissionbyid(@param('id",{"_index":635,"title":{},"body":{"controllers/PermissionController.html":{}}}],["findpermissionbyid(id",{"_index":613,"title":{},"body":{"controllers/PermissionController.html":{},"injectables/PermissionService.html":{}}}],["findrolebyid",{"_index":777,"title":{},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{}}}],["findrolebyid(@param('id",{"_index":814,"title":{},"body":{"controllers/RoleController.html":{}}}],["findrolebyid(id",{"_index":796,"title":{},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{}}}],["finished",{"_index":1370,"title":{},"body":{"license.html":{}}}],["firstname",{"_index":87,"title":{},"body":{"classes/AdminUserSeeds1655586994482.html":{},"classes/CreateUserDto.html":{},"entities/User.html":{}}}],["fitness",{"_index":1382,"title":{},"body":{"license.html":{}}}],["fk_4be2f7adf862634f5f803d246b8",{"_index":495,"title":{},"body":{"classes/ManyToManyUserRoles1655586944086.html":{}}}],["fk_5f9286e6c25594c6b88c108db77",{"_index":494,"title":{},"body":{"classes/ManyToManyUserRoles1655586944086.html":{}}}],["fk_7ec93d4fbf75b063f3ffd2646a5",{"_index":487,"title":{},"body":{"classes/ManyToManyUserRoles1655586944086.html":{}}}],["fk_9f44b6228b173c7b9dfb8c66003",{"_index":482,"title":{},"body":{"classes/ManyToManyUserRoles1655586944086.html":{}}}],["fk_a88fcb405b56bf2e2646e9d4797",{"_index":492,"title":{},"body":{"classes/ManyToManyUserRoles1655586944086.html":{}}}],["fk_b36cb2e04bc353ca4ede00d87b9",{"_index":489,"title":{},"body":{"classes/ManyToManyUserRoles1655586944086.html":{}}}],["fk_bfbc9e263d4cea6d7a8c9eb3ad2",{"_index":490,"title":{},"body":{"classes/ManyToManyUserRoles1655586944086.html":{}}}],["fk_ed6edac7184b013d4bd58d60e54",{"_index":491,"title":{},"body":{"classes/ManyToManyUserRoles1655586944086.html":{}}}],["folder",{"_index":1653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["following",{"_index":1140,"title":{},"body":{"license.html":{}}}],["forbiddenexception",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["forbiddenexception('invalid",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{}}}],["foreign",{"_index":483,"title":{},"body":{"classes/ManyToManyUserRoles1655586944086.html":{}}}],["form",{"_index":1178,"title":{},"body":{"license.html":{}}}],["formats",{"_index":1249,"title":{},"body":{"license.html":{}}}],["found",{"_index":717,"title":{},"body":{"injectables/PermissionService.html":{},"injectables/RoleService.html":{}}}],["framework",{"_index":1047,"title":{},"body":{"index.html":{}}}],["free",{"_index":1227,"title":{},"body":{"license.html":{}}}],["freely",{"_index":1277,"title":{},"body":{"license.html":{}}}],["frommodel",{"_index":645,"title":{},"body":{"classes/PermissionDto.html":{},"classes/RoleDto.html":{}}}],["frommodel(permission",{"_index":653,"title":{},"body":{"classes/PermissionDto.html":{}}}],["frommodel(role",{"_index":836,"title":{},"body":{"classes/RoleDto.html":{}}}],["full",{"_index":1481,"title":{},"body":{"license.html":{}}}],["function",{"_index":748,"title":{},"body":{"guards/PoliciesGuard.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["functionalities",{"_index":1218,"title":{},"body":{"license.html":{}}}],["functioning",{"_index":1522,"title":{},"body":{"license.html":{}}}],["functions",{"_index":1023,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["general",{"_index":1538,"title":{},"body":{"license.html":{}}}],["generally",{"_index":1183,"title":{},"body":{"license.html":{}}}],["generatenewtoken",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatenewtoken(user",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["get(':id",{"_index":634,"title":{},"body":{"controllers/PermissionController.html":{},"controllers/RoleController.html":{}}}],["get(':id')@version('1')@checkpolicies(ability",{"_index":797,"title":{},"body":{"controllers/RoleController.html":{}}}],["get(':id')@version('1')@checkpolicies(new",{"_index":614,"title":{},"body":{"controllers/PermissionController.html":{}}}],["get('me",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('me')@version('1')@apibearerauth()@useguards(jwtauthguard",{"_index":166,"title":{},"body":{"controllers/AuthController.html":{}}}],["get()@healthcheck",{"_index":381,"title":{},"body":{"controllers/HealthController.html":{}}}],["get()@version('1')@checkpolicies(ability",{"_index":794,"title":{},"body":{"controllers/RoleController.html":{}}}],["get()@version('1')@checkpolicies(new",{"_index":611,"title":{},"body":{"controllers/PermissionController.html":{}}}],["getcurrentuser",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcurrentuser(authheader",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["getskip",{"_index":567,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["getting",{"_index":1043,"title":{"index.html":{},"license.html":{}},"body":{}}],["giving",{"_index":1205,"title":{},"body":{"license.html":{}}}],["gnu",{"_index":1537,"title":{},"body":{"license.html":{}}}],["goodwill",{"_index":1410,"title":{},"body":{"license.html":{}}}],["governed",{"_index":1527,"title":{},"body":{"license.html":{}}}],["gpl",{"_index":1539,"title":{},"body":{"license.html":{}}}],["grant",{"_index":1292,"title":{},"body":{"license.html":{}}}],["granted",{"_index":1222,"title":{},"body":{"license.html":{}}}],["grants",{"_index":1224,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1578,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":732,"title":{"guards/PoliciesGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":733,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["handle",{"_index":351,"title":{},"body":{"classes/CreatePermissionPolicyHandler.html":{},"classes/DeletePermissionPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"classes/ReadPermissionPolicyHandler.html":{},"classes/UpdatePermissionPolicyHandler.html":{}}}],["handle(ability",{"_index":339,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"classes/CreatePermissionPolicyHandler.html":{},"classes/DeletePermissionPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"classes/ReadPermissionPolicyHandler.html":{},"classes/UpdatePermissionPolicyHandler.html":{}}}],["handler",{"_index":740,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["handler(ability",{"_index":749,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["handler.handle(ability",{"_index":750,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["handlers",{"_index":346,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"miscellaneous/variables.html":{}}}],["harmless",{"_index":1437,"title":{},"body":{"license.html":{}}}],["hash",{"_index":1027,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hasnextpage",{"_index":525,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["haspreviouspage",{"_index":526,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["he/she",{"_index":1306,"title":{},"body":{"license.html":{}}}],["headers",{"_index":179,"title":{},"body":{"controllers/AuthController.html":{}}}],["health",{"_index":379,"title":{},"body":{"controllers/HealthController.html":{}}}],["health.controller",{"_index":398,"title":{},"body":{"modules/HealthModule.html":{}}}],["health/health.module",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["healthcheck",{"_index":383,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":384,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":377,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":109,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["held",{"_index":1267,"title":{},"body":{"license.html":{}}}],["helmet",{"_index":999,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":1263,"title":{},"body":{"license.html":{}}}],["hereby",{"_index":1223,"title":{},"body":{"license.html":{}}}],["hereunder",{"_index":1353,"title":{},"body":{"license.html":{}}}],["him/her",{"_index":1355,"title":{},"body":{"license.html":{}}}],["his/her",{"_index":1334,"title":{},"body":{"license.html":{}}}],["hold",{"_index":1436,"title":{},"body":{"license.html":{}}}],["holder",{"_index":1137,"title":{},"body":{"license.html":{}}}],["host",{"_index":1624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http",{"_index":391,"title":{},"body":{"controllers/HealthController.html":{}}}],["http://localhost:3000:/api/docs",{"_index":1095,"title":{},"body":{"index.html":{}}}],["http://localhost:8080",{"_index":1089,"title":{},"body":{"index.html":{}}}],["httphealthindicator",{"_index":385,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpmodule",{"_index":399,"title":{},"body":{"modules/HealthModule.html":{}}}],["https://pronadjimajstora.rs",{"_index":1598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["human",{"_index":1176,"title":{},"body":{"license.html":{}}}],["icon",{"_index":1447,"title":{},"body":{"license.html":{}}}],["id",{"_index":20,"title":{},"body":{"entities/Address.html":{},"entities/Permission.html":{},"controllers/PermissionController.html":{},"classes/PermissionDto.html":{},"injectables/PermissionService.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"injectables/RoleService.html":{},"entities/User.html":{}}}],["identical",{"_index":1505,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":956,"title":{},"body":{"coverage.html":{}}}],["idx_4be2f7adf862634f5f803d246b",{"_index":479,"title":{},"body":{"classes/ManyToManyUserRoles1655586944086.html":{}}}],["idx_5f9286e6c25594c6b88c108db7",{"_index":478,"title":{},"body":{"classes/ManyToManyUserRoles1655586944086.html":{}}}],["idx_7ec93d4fbf75b063f3ffd2646a",{"_index":466,"title":{},"body":{"classes/ManyToManyUserRoles1655586944086.html":{}}}],["idx_9f44b6228b173c7b9dfb8c6600",{"_index":465,"title":{},"body":{"classes/ManyToManyUserRoles1655586944086.html":{}}}],["idx_a88fcb405b56bf2e2646e9d479",{"_index":475,"title":{},"body":{"classes/ManyToManyUserRoles1655586944086.html":{}}}],["idx_b36cb2e04bc353ca4ede00d87b",{"_index":469,"title":{},"body":{"classes/ManyToManyUserRoles1655586944086.html":{}}}],["idx_bfbc9e263d4cea6d7a8c9eb3ad",{"_index":470,"title":{},"body":{"classes/ManyToManyUserRoles1655586944086.html":{}}}],["idx_ed6edac7184b013d4bd58d60e5",{"_index":474,"title":{},"body":{"classes/ManyToManyUserRoles1655586944086.html":{}}}],["ignoreexpiration",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["immediately",{"_index":1142,"title":{},"body":{"license.html":{}}}],["implements",{"_index":58,"title":{},"body":{"classes/AdminUserSeeds1655586994482.html":{},"classes/CreatePermissionPolicyHandler.html":{},"classes/DeletePermissionPolicyHandler.html":{},"classes/ManyToManyUserRoles1655586944086.html":{},"classes/PermissionPermissionsSeed1655765422849.html":{},"classes/PermissionTimestamps1655765304532.html":{},"guards/PoliciesGuard.html":{},"classes/ReadPermissionPolicyHandler.html":{},"classes/RoleMigration165550928088.html":{},"classes/RolePermissionsSeed1655595255331.html":{},"classes/RoleSeed1655509280886.html":{},"classes/UpdatePermissionPolicyHandler.html":{}}}],["import",{"_index":46,"title":{},"body":{"entities/Address.html":{},"classes/AdminUserSeeds1655586994482.html":{},"modules/AppModule.html":{},"classes/AssignRolePermissionsQuery.html":{},"classes/AssignRoleUsersQuery.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"classes/CreatePermissionPolicyHandler.html":{},"classes/CreateUserDto.html":{},"classes/DeletePermissionPolicyHandler.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/ManyToManyUserRoles1655586944086.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"interfaces/PageMetaDtoParameters.html":{},"classes/PageOptionsDto.html":{},"entities/Permission.html":{},"controllers/PermissionController.html":{},"classes/PermissionDto.html":{},"modules/PermissionModule.html":{},"classes/PermissionPermissionsSeed1655765422849.html":{},"injectables/PermissionService.html":{},"classes/PermissionTimestamps1655765304532.html":{},"guards/PoliciesGuard.html":{},"classes/ReadPermissionPolicyHandler.html":{},"classes/RefreshTokenDto.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"classes/RoleMigration165550928088.html":{},"modules/RoleModule.html":{},"classes/RolePermissionsSeed1655595255331.html":{},"classes/RoleSeed1655509280886.html":{},"injectables/RoleService.html":{},"classes/UpdatePermissionPolicyHandler.html":{},"entities/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/PermissionModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{}}}],["impose",{"_index":1320,"title":{},"body":{"license.html":{}}}],["imposed",{"_index":1294,"title":{},"body":{"license.html":{}}}],["improved",{"_index":1368,"title":{},"body":{"license.html":{}}}],["include",{"_index":1305,"title":{},"body":{"license.html":{}}}],["including",{"_index":1237,"title":{},"body":{"license.html":{}}}],["incurred",{"_index":1438,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":1434,"title":{},"body":{"license.html":{}}}],["index",{"_index":14,"title":{"index.html":{}},"body":{"entities/Address.html":{},"classes/AdminUserSeeds1655586994482.html":{},"classes/AssignRolePermissionsQuery.html":{},"classes/AssignRoleUsersQuery.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"classes/CreatePermissionPolicyHandler.html":{},"classes/CreateUserDto.html":{},"classes/DeletePermissionPolicyHandler.html":{},"controllers/HealthController.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/ManyToManyUserRoles1655586944086.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"interfaces/PageMetaDtoParameters.html":{},"classes/PageOptionsDto.html":{},"entities/Permission.html":{},"controllers/PermissionController.html":{},"classes/PermissionDto.html":{},"classes/PermissionPermissionsSeed1655765422849.html":{},"injectables/PermissionService.html":{},"classes/PermissionTimestamps1655765304532.html":{},"guards/PoliciesGuard.html":{},"classes/ReadPermissionPolicyHandler.html":{},"classes/RefreshTokenDto.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"classes/RoleMigration165550928088.html":{},"classes/RolePermissionsSeed1655595255331.html":{},"classes/RoleSeed1655509280886.html":{},"injectables/RoleService.html":{},"classes/TokenDto.html":{},"classes/UpdatePermissionPolicyHandler.html":{},"entities/User.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index()@column({unique",{"_index":761,"title":{},"body":{"entities/Role.html":{}}}],["indicate",{"_index":1337,"title":{},"body":{"license.html":{}}}],["indicates",{"_index":1274,"title":{},"body":{"license.html":{}}}],["indirect",{"_index":1406,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"entities/Address.html":{},"classes/AdminUserSeeds1655586994482.html":{},"modules/AppModule.html":{},"classes/AssignRolePermissionsQuery.html":{},"classes/AssignRoleUsersQuery.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"classes/CreatePermissionPolicyHandler.html":{},"classes/CreateUserDto.html":{},"classes/DeletePermissionPolicyHandler.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/ManyToManyUserRoles1655586944086.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"interfaces/PageMetaDtoParameters.html":{},"classes/PageOptionsDto.html":{},"entities/Permission.html":{},"controllers/PermissionController.html":{},"classes/PermissionDto.html":{},"modules/PermissionModule.html":{},"classes/PermissionPermissionsSeed1655765422849.html":{},"injectables/PermissionService.html":{},"classes/PermissionTimestamps1655765304532.html":{},"guards/PoliciesGuard.html":{},"classes/ReadPermissionPolicyHandler.html":{},"classes/RefreshTokenDto.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"classes/RoleMigration165550928088.html":{},"modules/RoleModule.html":{},"classes/RolePermissionsSeed1655595255331.html":{},"classes/RoleSeed1655509280886.html":{},"injectables/RoleService.html":{},"classes/TokenDto.html":{},"classes/UpdatePermissionPolicyHandler.html":{},"entities/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["information",{"_index":1463,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":1388,"title":{},"body":{"license.html":{}}}],["inherent",{"_index":1375,"title":{},"body":{"license.html":{}}}],["inject",{"_index":177,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PermissionController.html":{},"controllers/RoleController.html":{}}}],["injectable",{"_index":235,"title":{"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PermissionService.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PermissionService.html":{},"guards/PoliciesGuard.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PermissionService.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectrepository",{"_index":703,"title":{},"body":{"injectables/PermissionService.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{}}}],["injectrepository(permission",{"_index":700,"title":{},"body":{"injectables/PermissionService.html":{},"injectables/RoleService.html":{}}}],["injectrepository(role",{"_index":888,"title":{},"body":{"injectables/RoleService.html":{}}}],["injectrepository(user",{"_index":890,"title":{},"body":{"injectables/RoleService.html":{},"injectables/UserService.html":{}}}],["inside",{"_index":12,"title":{},"body":{"entities/Address.html":{},"license.html":{}}}],["installation",{"_index":1061,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1063,"title":{},"body":{"index.html":{}}}],["institutions",{"_index":1513,"title":{},"body":{"license.html":{}}}],["intact",{"_index":1298,"title":{},"body":{"license.html":{}}}],["integer",{"_index":460,"title":{},"body":{"classes/ManyToManyUserRoles1655586944086.html":{}}}],["intellectual",{"_index":1389,"title":{},"body":{"license.html":{}}}],["intended",{"_index":1283,"title":{},"body":{"license.html":{}}}],["interface",{"_index":322,"title":{"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"interfaces/PageMetaDtoParameters.html":{}},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"interfaces/PageMetaDtoParameters.html":{},"coverage.html":{}}}],["interfaces",{"_index":348,"title":{},"body":{"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"interfaces/PageMetaDtoParameters.html":{},"overview.html":{}}}],["interpretation",{"_index":1512,"title":{},"body":{"license.html":{}}}],["interpreted",{"_index":1186,"title":{},"body":{"license.html":{}}}],["invalid",{"_index":174,"title":{},"body":{"controllers/AuthController.html":{},"license.html":{}}}],["invented",{"_index":1252,"title":{},"body":{"license.html":{}}}],["invoice",{"_index":325,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{}}}],["ipolicyhandler",{"_index":338,"title":{"interfaces/IPolicyHandler.html":{}},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"classes/CreatePermissionPolicyHandler.html":{},"classes/DeletePermissionPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"classes/ReadPermissionPolicyHandler.html":{},"classes/UpdatePermissionPolicyHandler.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["irrevocable",{"_index":1458,"title":{},"body":{"license.html":{}}}],["irrevocably",{"_index":1460,"title":{},"body":{"license.html":{}}}],["is_public_key",{"_index":420,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isaccountactivated",{"_index":93,"title":{},"body":{"classes/AdminUserSeeds1655586994482.html":{},"entities/User.html":{}}}],["isarray",{"_index":518,"title":{},"body":{"classes/PageDto.html":{}}}],["isarray()@apiproperty({isarray",{"_index":514,"title":{},"body":{"classes/PageDto.html":{}}}],["isdate",{"_index":373,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isdate()@validateif((_object",{"_index":364,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isemail",{"_index":367,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isemailverified",{"_index":94,"title":{},"body":{"classes/AdminUserSeeds1655586994482.html":{},"entities/User.html":{}}}],["isenum",{"_index":571,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["isenum(order",{"_index":577,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["isglobal",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["isint",{"_index":572,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["isnotempty",{"_index":143,"title":{},"body":{"classes/AssignRolePermissionsQuery.html":{},"classes/AssignRoleUsersQuery.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/PermissionDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RoleDto.html":{}}}],["isnotempty()@isnumber",{"_index":138,"title":{},"body":{"classes/AssignRolePermissionsQuery.html":{},"classes/AssignRoleUsersQuery.html":{}}}],["isnotempty()@isstring",{"_index":651,"title":{},"body":{"classes/PermissionDto.html":{}}}],["isnumber",{"_index":144,"title":{},"body":{"classes/AssignRolePermissionsQuery.html":{},"classes/AssignRoleUsersQuery.html":{}}}],["isnumber()@isnotempty",{"_index":141,"title":{},"body":{"classes/AssignRolePermissionsQuery.html":{},"classes/AssignRoleUsersQuery.html":{}}}],["isoptional",{"_index":573,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["ispublic",{"_index":425,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["isstring",{"_index":657,"title":{},"body":{"classes/PermissionDto.html":{}}}],["issuer",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["it.permissions",{"_index":333,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{}}}],["itemcount",{"_index":527,"title":{},"body":{"classes/PageMetaDto.html":{},"interfaces/PageMetaDtoParameters.html":{},"injectables/PermissionService.html":{},"injectables/RoleService.html":{}}}],["jointable",{"_index":769,"title":{},"body":{"entities/Role.html":{},"entities/User.html":{}}}],["js",{"_index":1654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jurisdiction",{"_index":1508,"title":{},"body":{"license.html":{}}}],["justice",{"_index":1518,"title":{},"body":{"license.html":{}}}],["jwt",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":228,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtauthguard",{"_index":191,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":442,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtservice",{"_index":224,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":220,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["keep",{"_index":1297,"title":{},"body":{"license.html":{}}}],["key",{"_index":464,"title":{},"body":{"classes/ManyToManyUserRoles1655586944086.html":{}}}],["kind",{"_index":1379,"title":{},"body":{"license.html":{}}}],["known",{"_index":1250,"title":{},"body":{"license.html":{}}}],["laid",{"_index":1519,"title":{},"body":{"license.html":{}}}],["lastname",{"_index":89,"title":{},"body":{"classes/AdminUserSeeds1655586994482.html":{},"classes/CreateUserDto.html":{},"entities/User.html":{}}}],["later",{"_index":1251,"title":{},"body":{"license.html":{}}}],["law",{"_index":1171,"title":{},"body":{"license.html":{}}}],["laws",{"_index":1421,"title":{},"body":{"license.html":{}}}],["legal",{"_index":1190,"title":{},"body":{"license.html":{}}}],["lend",{"_index":1242,"title":{},"body":{"license.html":{}}}],["lending",{"_index":1206,"title":{},"body":{"license.html":{}}}],["lesser",{"_index":1554,"title":{},"body":{"license.html":{}}}],["lgpl",{"_index":1555,"title":{},"body":{"license.html":{}}}],["liability",{"_index":1395,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1404,"title":{},"body":{"license.html":{}}}],["licence",{"_index":1118,"title":{},"body":{"license.html":{}}}],["licences",{"_index":1330,"title":{},"body":{"license.html":{}}}],["license",{"_index":1114,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["licensed",{"_index":1143,"title":{},"body":{"license.html":{}}}],["licensee",{"_index":1160,"title":{},"body":{"license.html":{}}}],["licensee's",{"_index":1332,"title":{},"body":{"license.html":{}}}],["licensor",{"_index":1138,"title":{},"body":{"license.html":{}}}],["liliq",{"_index":1565,"title":{},"body":{"license.html":{}}}],["limit",{"_index":405,"title":{},"body":{"modules/HealthModule.html":{}}}],["limitation",{"_index":1287,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":1281,"title":{},"body":{"license.html":{}}}],["linguistic",{"_index":1499,"title":{},"body":{"license.html":{}}}],["listed",{"_index":1265,"title":{},"body":{"license.html":{}}}],["litigation",{"_index":1510,"title":{},"body":{"license.html":{}}}],["localhost",{"_index":1615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["locally",{"_index":1085,"title":{},"body":{"index.html":{}}}],["location",{"_index":1468,"title":{},"body":{"license.html":{}}}],["logger",{"_index":1645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logging",{"_index":1644,"title":{},"body":{"miscellaneous/variables.html":{}}}],["login",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["login(@body",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(logindto",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login.dto",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logindto",{"_index":160,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["logindto.password",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{}}}],["logindto.usernameoremail",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{}}}],["long",{"_index":1279,"title":{},"body":{"license.html":{}}}],["look",{"_index":1090,"title":{},"body":{"index.html":{}}}],["loss",{"_index":1409,"title":{},"body":{"license.html":{}}}],["machine",{"_index":1271,"title":{},"body":{"license.html":{}}}],["make",{"_index":1235,"title":{},"body":{"license.html":{}}}],["makes",{"_index":1199,"title":{},"body":{"license.html":{}}}],["making",{"_index":1211,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":1413,"title":{},"body":{"license.html":{}}}],["manage",{"_index":319,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"miscellaneous/enumerations.html":{}}}],["manually",{"_index":1642,"title":{},"body":{"miscellaneous/variables.html":{}}}],["manytomany",{"_index":593,"title":{},"body":{"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["manytomany(undefined",{"_index":588,"title":{},"body":{"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["manytomanyuserroles.ts",{"_index":451,"title":{},"body":{"classes/ManyToManyUserRoles1655586944086.html":{},"coverage.html":{}}}],["manytomanyuserroles.ts:4",{"_index":453,"title":{},"body":{"classes/ManyToManyUserRoles1655586944086.html":{}}}],["manytomanyuserroles.ts:6",{"_index":455,"title":{},"body":{"classes/ManyToManyUserRoles1655586944086.html":{}}}],["manytomanyuserroles.ts:69",{"_index":454,"title":{},"body":{"classes/ManyToManyUserRoles1655586944086.html":{}}}],["manytomanyuserroles1655586944086",{"_index":449,"title":{"classes/ManyToManyUserRoles1655586944086.html":{}},"body":{"classes/ManyToManyUserRoles1655586944086.html":{},"coverage.html":{}}}],["manytoone",{"_index":48,"title":{},"body":{"entities/Address.html":{}}}],["manytoone(undefined",{"_index":40,"title":{},"body":{"entities/Address.html":{}}}],["marks",{"_index":1342,"title":{},"body":{"license.html":{}}}],["matching",{"_index":53,"title":{},"body":{"entities/Address.html":{},"classes/AdminUserSeeds1655586994482.html":{},"modules/AppModule.html":{},"classes/AssignRolePermissionsQuery.html":{},"classes/AssignRoleUsersQuery.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"classes/CreatePermissionPolicyHandler.html":{},"classes/CreateUserDto.html":{},"classes/DeletePermissionPolicyHandler.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/ManyToManyUserRoles1655586944086.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"interfaces/PageMetaDtoParameters.html":{},"classes/PageOptionsDto.html":{},"entities/Permission.html":{},"controllers/PermissionController.html":{},"classes/PermissionDto.html":{},"modules/PermissionModule.html":{},"classes/PermissionPermissionsSeed1655765422849.html":{},"injectables/PermissionService.html":{},"classes/PermissionTimestamps1655765304532.html":{},"guards/PoliciesGuard.html":{},"classes/ReadPermissionPolicyHandler.html":{},"classes/RefreshTokenDto.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"classes/RoleMigration165550928088.html":{},"modules/RoleModule.html":{},"classes/RolePermissionsSeed1655595255331.html":{},"classes/RoleSeed1655509280886.html":{},"injectables/RoleService.html":{},"classes/TokenDto.html":{},"classes/UpdatePermissionPolicyHandler.html":{},"entities/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":1407,"title":{},"body":{"license.html":{}}}],["math.ceil(this.itemcount",{"_index":546,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["max",{"_index":574,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["max(100",{"_index":580,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["maximum",{"_index":563,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["me(@request",{"_index":212,"title":{},"body":{"controllers/AuthController.html":{}}}],["me(request",{"_index":165,"title":{},"body":{"controllers/AuthController.html":{}}}],["meaning",{"_index":1149,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["means",{"_index":1146,"title":{},"body":{"license.html":{}}}],["meant",{"_index":1185,"title":{},"body":{"license.html":{}}}],["media",{"_index":1247,"title":{},"body":{"license.html":{}}}],["member",{"_index":1528,"title":{},"body":{"license.html":{}}}],["memory",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{}}}],["mentioned",{"_index":1173,"title":{},"body":{"license.html":{}}}],["merchantability",{"_index":1381,"title":{},"body":{"license.html":{}}}],["meta",{"_index":509,"title":{},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"interfaces/PageMetaDtoParameters.html":{},"coverage.html":{}}}],["meta.dto",{"_index":520,"title":{},"body":{"classes/PageDto.html":{},"injectables/PermissionService.html":{},"injectables/RoleService.html":{}}}],["meta.dto.ts",{"_index":524,"title":{},"body":{"classes/PageMetaDto.html":{},"coverage.html":{}}}],["meta.dto.ts:12",{"_index":534,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:15",{"_index":536,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:18",{"_index":533,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:21",{"_index":532,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:6",{"_index":535,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["meta.dto.ts:9",{"_index":537,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["metadata",{"_index":1007,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":60,"title":{},"body":{"classes/AdminUserSeeds1655586994482.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CreatePermissionPolicyHandler.html":{},"classes/DeletePermissionPolicyHandler.html":{},"controllers/HealthController.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/ManyToManyUserRoles1655586944086.html":{},"controllers/PermissionController.html":{},"classes/PermissionDto.html":{},"classes/PermissionPermissionsSeed1655765422849.html":{},"injectables/PermissionService.html":{},"classes/PermissionTimestamps1655765304532.html":{},"guards/PoliciesGuard.html":{},"classes/ReadPermissionPolicyHandler.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"classes/RoleMigration165550928088.html":{},"classes/RolePermissionsSeed1655595255331.html":{},"classes/RoleSeed1655509280886.html":{},"injectables/RoleService.html":{},"classes/UpdatePermissionPolicyHandler.html":{},"injectables/UserService.html":{}}}],["migration",{"_index":1100,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["migration:create",{"_index":1101,"title":{},"body":{"index.html":{}}}],["migration:generate",{"_index":1106,"title":{},"body":{"index.html":{}}}],["migration:migratereverting",{"_index":1110,"title":{},"body":{"index.html":{}}}],["migration:revertlicense",{"_index":1111,"title":{},"body":{"index.html":{}}}],["migration:showrunning",{"_index":1109,"title":{},"body":{"index.html":{}}}],["migrationinterface",{"_index":59,"title":{},"body":{"classes/AdminUserSeeds1655586994482.html":{},"classes/ManyToManyUserRoles1655586944086.html":{},"classes/PermissionPermissionsSeed1655765422849.html":{},"classes/PermissionTimestamps1655765304532.html":{},"classes/RoleMigration165550928088.html":{},"classes/RolePermissionsSeed1655595255331.html":{},"classes/RoleSeed1655509280886.html":{}}}],["migrations",{"_index":1097,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["migrations_typeorm",{"_index":1661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migrationsdir",{"_index":1663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migrationsrun",{"_index":1643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migrationstablename",{"_index":1660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["min",{"_index":575,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["min(1",{"_index":579,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["minimum",{"_index":578,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["miscellaneous",{"_index":1016,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["misconduct",{"_index":1398,"title":{},"body":{"license.html":{}}}],["mode",{"_index":1069,"title":{},"body":{"index.html":{}}}],["model",{"_index":8,"title":{},"body":{"entities/Address.html":{}}}],["modification",{"_index":1166,"title":{},"body":{"license.html":{}}}],["modifications",{"_index":1163,"title":{},"body":{"license.html":{}}}],["modified",{"_index":1311,"title":{},"body":{"license.html":{}}}],["modifies",{"_index":1195,"title":{},"body":{"license.html":{}}}],["modify",{"_index":1182,"title":{},"body":{"license.html":{}}}],["module",{"_index":102,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/PermissionModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/PermissionModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{}}}],["modules",{"_index":104,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/PermissionModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["moral",{"_index":1256,"title":{},"body":{"license.html":{}}}],["more",{"_index":1116,"title":{},"body":{"index.html":{}}}],["mozilla",{"_index":1552,"title":{},"body":{"license.html":{}}}],["mpl",{"_index":1553,"title":{},"body":{"license.html":{}}}],["name",{"_index":69,"title":{},"body":{"classes/AdminUserSeeds1655586994482.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CreatePermissionPolicyHandler.html":{},"classes/DeletePermissionPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/ManyToManyUserRoles1655586944086.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"controllers/PermissionController.html":{},"classes/PermissionDto.html":{},"classes/PermissionPermissionsSeed1655765422849.html":{},"injectables/PermissionService.html":{},"classes/PermissionTimestamps1655765304532.html":{},"guards/PoliciesGuard.html":{},"classes/ReadPermissionPolicyHandler.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"classes/RoleMigration165550928088.html":{},"classes/RolePermissionsSeed1655595255331.html":{},"classes/RoleSeed1655509280886.html":{},"injectables/RoleService.html":{},"classes/TokenDto.html":{},"classes/UpdatePermissionPolicyHandler.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["name`generating",{"_index":1102,"title":{},"body":{"index.html":{}}}],["name`showing",{"_index":1107,"title":{},"body":{"index.html":{}}}],["names",{"_index":1340,"title":{},"body":{"license.html":{}}}],["natural",{"_index":1189,"title":{},"body":{"license.html":{}}}],["necessary",{"_index":1268,"title":{},"body":{"license.html":{}}}],["nest",{"_index":1054,"title":{},"body":{"index.html":{}}}],["nestjs/axios",{"_index":400,"title":{},"body":{"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/PermissionController.html":{},"modules/PermissionModule.html":{},"injectables/PermissionService.html":{},"guards/PoliciesGuard.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":232,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"guards/PoliciesGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":225,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":419,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":983,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":186,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/PermissionController.html":{},"controllers/RoleController.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":387,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/throttler",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/PermissionController.html":{},"controllers/RoleController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"modules/PermissionModule.html":{},"injectables/PermissionService.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["new",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"classes/PermissionDto.html":{},"injectables/PermissionService.html":{},"classes/RoleDto.html":{},"injectables/RoleService.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["node.js",{"_index":1046,"title":{},"body":{"index.html":{}}}],["non",{"_index":1228,"title":{},"body":{"license.html":{}}}],["notfoundexception",{"_index":702,"title":{},"body":{"injectables/PermissionService.html":{},"injectables/RoleService.html":{}}}],["nothing",{"_index":1282,"title":{},"body":{"license.html":{}}}],["notice",{"_index":1141,"title":{},"body":{"license.html":{}}}],["notices",{"_index":1301,"title":{},"body":{"license.html":{}}}],["now",{"_index":731,"title":{},"body":{"classes/PermissionTimestamps1655765304532.html":{},"classes/RoleMigration165550928088.html":{},"license.html":{}}}],["npm",{"_index":1062,"title":{},"body":{"index.html":{}}}],["null",{"_index":96,"title":{},"body":{"classes/AdminUserSeeds1655586994482.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/ManyToManyUserRoles1655586944086.html":{},"classes/PermissionDto.html":{},"classes/PermissionTimestamps1655765304532.html":{},"classes/RoleDto.html":{},"classes/RoleMigration165550928088.html":{},"entities/User.html":{}}}],["nullable",{"_index":42,"title":{},"body":{"entities/Address.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["number",{"_index":36,"title":{},"body":{"entities/Address.html":{},"classes/AssignRolePermissionsQuery.html":{},"classes/AssignRoleUsersQuery.html":{},"classes/PageMetaDto.html":{},"interfaces/PageMetaDtoParameters.html":{},"classes/PageOptionsDto.html":{},"entities/Permission.html":{},"controllers/PermissionController.html":{},"classes/PermissionDto.html":{},"injectables/PermissionService.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"injectables/RoleService.html":{},"entities/User.html":{},"license.html":{}}}],["numerous",{"_index":1369,"title":{},"body":{"license.html":{}}}],["object",{"_index":328,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"miscellaneous/variables.html":{}}}],["obligations",{"_index":1291,"title":{},"body":{"license.html":{}}}],["offer",{"_index":1319,"title":{},"body":{"license.html":{}}}],["offering",{"_index":1465,"title":{},"body":{"license.html":{}}}],["office",{"_index":1532,"title":{},"body":{"license.html":{}}}],["office@decodex.net",{"_index":92,"title":{},"body":{"classes/AdminUserSeeds1655586994482.html":{}}}],["offices",{"_index":1515,"title":{},"body":{"license.html":{}}}],["offline",{"_index":1213,"title":{},"body":{"license.html":{}}}],["onetomany",{"_index":939,"title":{},"body":{"entities/User.html":{}}}],["onetomany(undefined",{"_index":917,"title":{},"body":{"entities/User.html":{}}}],["online",{"_index":1212,"title":{},"body":{"license.html":{}}}],["open",{"_index":1543,"title":{},"body":{"license.html":{}}}],["optional",{"_index":70,"title":{},"body":{"classes/AdminUserSeeds1655586994482.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CreatePermissionPolicyHandler.html":{},"classes/DeletePermissionPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/ManyToManyUserRoles1655586944086.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"controllers/PermissionController.html":{},"classes/PermissionDto.html":{},"classes/PermissionPermissionsSeed1655765422849.html":{},"injectables/PermissionService.html":{},"classes/PermissionTimestamps1655765304532.html":{},"guards/PoliciesGuard.html":{},"classes/ReadPermissionPolicyHandler.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"classes/RoleMigration165550928088.html":{},"classes/RolePermissionsSeed1655595255331.html":{},"classes/RoleSeed1655509280886.html":{},"injectables/RoleService.html":{},"classes/TokenDto.html":{},"classes/UpdatePermissionPolicyHandler.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["options.dto",{"_index":551,"title":{},"body":{"interfaces/PageMetaDtoParameters.html":{},"controllers/PermissionController.html":{},"injectables/PermissionService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{}}}],["options.dto.ts",{"_index":552,"title":{},"body":{"classes/PageOptionsDto.html":{},"coverage.html":{}}}],["options.dto.ts:10",{"_index":559,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["options.dto.ts:20",{"_index":562,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["options.dto.ts:32",{"_index":566,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["options.dto.ts:34",{"_index":568,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["order",{"_index":553,"title":{},"body":{"classes/PageOptionsDto.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{}}}],["order.asc",{"_index":556,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["order.model",{"_index":576,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["order.model.ts",{"_index":1019,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["orderby('name",{"_index":894,"title":{},"body":{"injectables/RoleService.html":{}}}],["orderby('resource",{"_index":707,"title":{},"body":{"injectables/PermissionService.html":{}}}],["origin",{"_index":1347,"title":{},"body":{"license.html":{}}}],["original",{"_index":1150,"title":{},"body":{"license.html":{}}}],["osl",{"_index":1544,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":1196,"title":{},"body":{"license.html":{}}}],["out",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PermissionModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":1579,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owned",{"_index":1354,"title":{},"body":{"license.html":{}}}],["owners",{"_index":1288,"title":{},"body":{"license.html":{}}}],["p.action",{"_index":336,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{}}}],["p.resource",{"_index":337,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{}}}],["package",{"_index":976,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":519,"title":{},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"interfaces/PageMetaDtoParameters.html":{},"classes/PageOptionsDto.html":{},"index.html":{}}}],["pagecount",{"_index":528,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["pagedto",{"_index":506,"title":{"classes/PageDto.html":{}},"body":{"classes/PageDto.html":{},"injectables/PermissionService.html":{},"injectables/RoleService.html":{},"coverage.html":{}}}],["pagemetadto",{"_index":512,"title":{"classes/PageMetaDto.html":{}},"body":{"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"injectables/PermissionService.html":{},"injectables/RoleService.html":{},"coverage.html":{}}}],["pagemetadtoparameters",{"_index":531,"title":{"interfaces/PageMetaDtoParameters.html":{}},"body":{"classes/PageMetaDto.html":{},"interfaces/PageMetaDtoParameters.html":{},"coverage.html":{}}}],["pageoptionsdto",{"_index":539,"title":{"classes/PageOptionsDto.html":{}},"body":{"classes/PageMetaDto.html":{},"interfaces/PageMetaDtoParameters.html":{},"classes/PageOptionsDto.html":{},"controllers/PermissionController.html":{},"injectables/PermissionService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"coverage.html":{}}}],["pageoptionsdto.order",{"_index":708,"title":{},"body":{"injectables/PermissionService.html":{},"injectables/RoleService.html":{}}}],["pageoptionsdto.page",{"_index":541,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["pageoptionsdto.take",{"_index":543,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["pagination/page",{"_index":624,"title":{},"body":{"controllers/PermissionController.html":{},"injectables/PermissionService.html":{}}}],["pagination/page.dto",{"_index":704,"title":{},"body":{"injectables/PermissionService.html":{}}}],["param",{"_index":619,"title":{},"body":{"controllers/PermissionController.html":{},"controllers/RoleController.html":{}}}],["parameters",{"_index":68,"title":{},"body":{"classes/AdminUserSeeds1655586994482.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CreatePermissionPolicyHandler.html":{},"classes/DeletePermissionPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/ManyToManyUserRoles1655586944086.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"controllers/PermissionController.html":{},"classes/PermissionDto.html":{},"classes/PermissionPermissionsSeed1655765422849.html":{},"injectables/PermissionService.html":{},"classes/PermissionTimestamps1655765304532.html":{},"guards/PoliciesGuard.html":{},"classes/ReadPermissionPolicyHandler.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"classes/RoleMigration165550928088.html":{},"classes/RolePermissionsSeed1655595255331.html":{},"classes/RoleSeed1655509280886.html":{},"injectables/RoleService.html":{},"classes/TokenDto.html":{},"classes/UpdatePermissionPolicyHandler.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["parameters.interface",{"_index":538,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["parameters.interface.ts",{"_index":550,"title":{},"body":{"interfaces/PageMetaDtoParameters.html":{},"coverage.html":{}}}],["part",{"_index":1393,"title":{},"body":{"license.html":{}}}],["particular",{"_index":1383,"title":{},"body":{"license.html":{}}}],["parties",{"_index":1487,"title":{},"body":{"license.html":{}}}],["passport",{"_index":440,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportstrategy",{"_index":437,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":441,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":98,"title":{},"body":{"classes/AdminUserSeeds1655586994482.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"entities/User.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["patent",{"_index":1299,"title":{},"body":{"license.html":{}}}],["patents",{"_index":1266,"title":{},"body":{"license.html":{}}}],["payload",{"_index":435,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.user",{"_index":445,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pending",{"_index":1108,"title":{},"body":{"index.html":{}}}],["people",{"_index":1180,"title":{},"body":{"license.html":{}}}],["perform",{"_index":1239,"title":{},"body":{"license.html":{}}}],["permission",{"_index":311,"title":{"entities/Permission.html":{}},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"classes/CreatePermissionPolicyHandler.html":{},"classes/DeletePermissionPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"entities/Permission.html":{},"controllers/PermissionController.html":{},"classes/PermissionDto.html":{},"modules/PermissionModule.html":{},"classes/PermissionPermissionsSeed1655765422849.html":{},"injectables/PermissionService.html":{},"classes/PermissionTimestamps1655765304532.html":{},"classes/ReadPermissionPolicyHandler.html":{},"entities/Role.html":{},"modules/RoleModule.html":{},"classes/RolePermissionsSeed1655595255331.html":{},"injectables/RoleService.html":{},"classes/UpdatePermissionPolicyHandler.html":{},"modules/UserModule.html":{},"coverage.html":{},"license.html":{}}}],["permission\"(\"id",{"_index":485,"title":{},"body":{"classes/ManyToManyUserRoles1655586944086.html":{}}}],["permission.action",{"_index":661,"title":{},"body":{"classes/PermissionDto.html":{}}}],["permission.controller",{"_index":674,"title":{},"body":{"modules/PermissionModule.html":{}}}],["permission.datecreated",{"_index":666,"title":{},"body":{"classes/PermissionDto.html":{}}}],["permission.dateupdated",{"_index":668,"title":{},"body":{"classes/PermissionDto.html":{}}}],["permission.dto",{"_index":625,"title":{},"body":{"controllers/PermissionController.html":{},"injectables/PermissionService.html":{}}}],["permission.entity",{"_index":658,"title":{},"body":{"classes/PermissionDto.html":{},"modules/PermissionModule.html":{},"injectables/PermissionService.html":{}}}],["permission.id",{"_index":659,"title":{},"body":{"classes/PermissionDto.html":{}}}],["permission.resource",{"_index":663,"title":{},"body":{"classes/PermissionDto.html":{}}}],["permission.service",{"_index":627,"title":{},"body":{"controllers/PermissionController.html":{},"modules/PermissionModule.html":{}}}],["permission/permission.entity",{"_index":353,"title":{},"body":{"classes/CreatePermissionPolicyHandler.html":{},"classes/DeletePermissionPolicyHandler.html":{},"classes/ReadPermissionPolicyHandler.html":{},"entities/Role.html":{},"classes/UpdatePermissionPolicyHandler.html":{},"modules/UserModule.html":{}}}],["permission/permission.module",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["permission_roles_role",{"_index":458,"title":{},"body":{"classes/ManyToManyUserRoles1655586944086.html":{}}}],["permissionaction",{"_index":314,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"classes/CreatePermissionPolicyHandler.html":{},"classes/DeletePermissionPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"entities/Permission.html":{},"classes/PermissionDto.html":{},"classes/PermissionPermissionsSeed1655765422849.html":{},"classes/ReadPermissionPolicyHandler.html":{},"controllers/RoleController.html":{},"classes/RolePermissionsSeed1655595255331.html":{},"classes/UpdatePermissionPolicyHandler.html":{},"miscellaneous/enumerations.html":{}}}],["permissionaction.create",{"_index":682,"title":{},"body":{"classes/PermissionPermissionsSeed1655765422849.html":{},"classes/RolePermissionsSeed1655595255331.html":{}}}],["permissionaction.delete",{"_index":685,"title":{},"body":{"classes/PermissionPermissionsSeed1655765422849.html":{},"classes/RolePermissionsSeed1655595255331.html":{}}}],["permissionaction.manage",{"_index":686,"title":{},"body":{"classes/PermissionPermissionsSeed1655765422849.html":{},"classes/RolePermissionsSeed1655595255331.html":{}}}],["permissionaction.read",{"_index":683,"title":{},"body":{"classes/PermissionPermissionsSeed1655765422849.html":{},"classes/RolePermissionsSeed1655595255331.html":{}}}],["permissionaction.update",{"_index":684,"title":{},"body":{"classes/PermissionPermissionsSeed1655765422849.html":{},"classes/RolePermissionsSeed1655595255331.html":{}}}],["permissioncontroller",{"_index":596,"title":{"controllers/PermissionController.html":{}},"body":{"controllers/PermissionController.html":{},"modules/PermissionModule.html":{},"coverage.html":{}}}],["permissiondto",{"_index":604,"title":{"classes/PermissionDto.html":{}},"body":{"controllers/PermissionController.html":{},"classes/PermissionDto.html":{},"injectables/PermissionService.html":{},"coverage.html":{}}}],["permissiondto.id",{"_index":723,"title":{},"body":{"injectables/PermissionService.html":{}}}],["permissiondto.tomodel",{"_index":720,"title":{},"body":{"injectables/PermissionService.html":{}}}],["permissionid",{"_index":459,"title":{},"body":{"classes/ManyToManyUserRoles1655586944086.html":{}}}],["permissionids",{"_index":136,"title":{},"body":{"classes/AssignRolePermissionsQuery.html":{},"injectables/RoleService.html":{}}}],["permissionmodule",{"_index":110,"title":{"modules/PermissionModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PermissionModule.html":{},"modules.html":{},"overview.html":{}}}],["permissionobjecttype",{"_index":320,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"miscellaneous/typealiases.html":{}}}],["permissionpermissionsseed.ts",{"_index":678,"title":{},"body":{"classes/PermissionPermissionsSeed1655765422849.html":{},"coverage.html":{}}}],["permissionpermissionsseed.ts:53",{"_index":679,"title":{},"body":{"classes/PermissionPermissionsSeed1655765422849.html":{}}}],["permissionpermissionsseed.ts:9",{"_index":680,"title":{},"body":{"classes/PermissionPermissionsSeed1655765422849.html":{}}}],["permissionpermissionsseed1655765422849",{"_index":676,"title":{"classes/PermissionPermissionsSeed1655765422849.html":{}},"body":{"classes/PermissionPermissionsSeed1655765422849.html":{},"coverage.html":{}}}],["permissionrepository",{"_index":689,"title":{},"body":{"injectables/PermissionService.html":{},"injectables/RoleService.html":{}}}],["permissions",{"_index":756,"title":{},"body":{"entities/Role.html":{},"injectables/RoleService.html":{}}}],["permissions.dto",{"_index":804,"title":{},"body":{"controllers/RoleController.html":{}}}],["permissions.dto.ts",{"_index":135,"title":{},"body":{"classes/AssignRolePermissionsQuery.html":{},"coverage.html":{}}}],["permissions.dto.ts:10",{"_index":140,"title":{},"body":{"classes/AssignRolePermissionsQuery.html":{}}}],["permissions.dto.ts:6",{"_index":142,"title":{},"body":{"classes/AssignRolePermissionsQuery.html":{}}}],["permissions.roles",{"_index":763,"title":{},"body":{"entities/Role.html":{}}}],["permissionservice",{"_index":626,"title":{"injectables/PermissionService.html":{}},"body":{"controllers/PermissionController.html":{},"modules/PermissionModule.html":{},"injectables/PermissionService.html":{},"coverage.html":{},"overview.html":{}}}],["permissiontimestamps.ts",{"_index":726,"title":{},"body":{"classes/PermissionTimestamps1655765304532.html":{},"coverage.html":{}}}],["permissiontimestamps.ts:15",{"_index":728,"title":{},"body":{"classes/PermissionTimestamps1655765304532.html":{}}}],["permissiontimestamps.ts:4",{"_index":727,"title":{},"body":{"classes/PermissionTimestamps1655765304532.html":{}}}],["permissiontimestamps.ts:6",{"_index":729,"title":{},"body":{"classes/PermissionTimestamps1655765304532.html":{}}}],["permissiontimestamps1655765304532",{"_index":724,"title":{"classes/PermissionTimestamps1655765304532.html":{}},"body":{"classes/PermissionTimestamps1655765304532.html":{},"coverage.html":{}}}],["permits",{"_index":1254,"title":{},"body":{"license.html":{}}}],["person",{"_index":1191,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1402,"title":{},"body":{"license.html":{}}}],["pg",{"_index":1004,"title":{},"body":{"dependencies.html":{}}}],["pk_46403d6ce64cde119287c876ca3",{"_index":473,"title":{},"body":{"classes/ManyToManyUserRoles1655586944086.html":{}}}],["pk_534958b0063b8ad39335d7bcfd0",{"_index":462,"title":{},"body":{"classes/ManyToManyUserRoles1655586944086.html":{}}}],["pk_b47cd6c84ee205ac5a713718292",{"_index":477,"title":{},"body":{"classes/ManyToManyUserRoles1655586944086.html":{}}}],["pk_b817d7eca3b85f22130861259dd",{"_index":468,"title":{},"body":{"classes/ManyToManyUserRoles1655586944086.html":{}}}],["placed",{"_index":1139,"title":{},"body":{"license.html":{}}}],["platform",{"_index":1060,"title":{},"body":{"index.html":{}}}],["policies.guard",{"_index":229,"title":{},"body":{"modules/AuthModule.html":{}}}],["policiesguard",{"_index":219,"title":{"guards/PoliciesGuard.html":{}},"body":{"modules/AuthModule.html":{},"controllers/PermissionController.html":{},"guards/PoliciesGuard.html":{},"controllers/RoleController.html":{},"coverage.html":{},"overview.html":{}}}],["policyhandler",{"_index":342,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["policyhandlercallback",{"_index":341,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"miscellaneous/typealiases.html":{}}}],["policyhandlers",{"_index":741,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["policyhandlers.every((handler",{"_index":745,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["port",{"_index":1626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["possibility",{"_index":1418,"title":{},"body":{"license.html":{}}}],["post",{"_index":178,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PermissionController.html":{},"controllers/RoleController.html":{}}}],["post('assignpermissions",{"_index":822,"title":{},"body":{"controllers/RoleController.html":{}}}],["post('assignpermissions')@version('1')@put()@version('1')@checkpolicies(ability",{"_index":780,"title":{},"body":{"controllers/RoleController.html":{}}}],["post('assignusers",{"_index":827,"title":{},"body":{"controllers/RoleController.html":{}}}],["post('assignusers')@version('1')@put()@version('1')@checkpolicies(ability",{"_index":784,"title":{},"body":{"controllers/RoleController.html":{}}}],["post('login",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login')@version('1')@apiunauthorizedresponse({description",{"_index":161,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('refreshtoken",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('refreshtoken')@version('1')@apiforbiddenresponse({description",{"_index":171,"title":{},"body":{"controllers/AuthController.html":{}}}],["post()@version('1')@checkpolicies(ability",{"_index":788,"title":{},"body":{"controllers/RoleController.html":{}}}],["post()@version('1')@checkpolicies(new",{"_index":605,"title":{},"body":{"controllers/PermissionController.html":{}}}],["postgres",{"_index":1619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["postgres_database",{"_index":1621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["postgres_host",{"_index":1614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["postgres_password",{"_index":1620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["postgres_port",{"_index":1616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["postgres_username",{"_index":1618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["postgressconfig",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["power",{"_index":1356,"title":{},"body":{"license.html":{}}}],["prefer",{"_index":1640,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefix",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/PermissionController.html":{},"controllers/RoleController.html":{}}}],["prejudice",{"_index":1483,"title":{},"body":{"license.html":{}}}],["prevail",{"_index":1335,"title":{},"body":{"license.html":{}}}],["primary",{"_index":463,"title":{},"body":{"classes/ManyToManyUserRoles1655586944086.html":{},"license.html":{}}}],["primarygeneratedcolumn",{"_index":37,"title":{},"body":{"entities/Address.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["private",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/HealthController.html":{},"controllers/PermissionController.html":{},"injectables/PermissionService.html":{},"guards/PoliciesGuard.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{}}}],["process.env.typeorm_synchronize",{"_index":1637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.typeorm_synchronize.tolowercase",{"_index":1638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prod",{"_index":1655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["producing",{"_index":1568,"title":{},"body":{"license.html":{}}}],["product",{"_index":1420,"title":{},"body":{"license.html":{}}}],["production",{"_index":1071,"title":{},"body":{"index.html":{},"license.html":{}}}],["program",{"_index":1188,"title":{},"body":{"license.html":{}}}],["progress",{"_index":1366,"title":{},"body":{"license.html":{}}}],["progressive",{"_index":1045,"title":{},"body":{"index.html":{}}}],["prohibited",{"_index":1131,"title":{},"body":{"license.html":{}}}],["project",{"_index":326,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{}}}],["prominent",{"_index":1309,"title":{},"body":{"license.html":{}}}],["promise",{"_index":39,"title":{},"body":{"entities/Address.html":{},"classes/AdminUserSeeds1655586994482.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"classes/ManyToManyUserRoles1655586944086.html":{},"classes/PermissionPermissionsSeed1655765422849.html":{},"injectables/PermissionService.html":{},"classes/PermissionTimestamps1655765304532.html":{},"guards/PoliciesGuard.html":{},"classes/RoleMigration165550928088.html":{},"classes/RolePermissionsSeed1655595255331.html":{},"classes/RoleSeed1655509280886.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{}}}],["pronadjimajstora",{"_index":1059,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":15,"title":{"properties.html":{}},"body":{"entities/Address.html":{},"classes/AssignRolePermissionsQuery.html":{},"classes/AssignRoleUsersQuery.html":{},"interfaces/CaslPermission.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/ManyToManyUserRoles1655586944086.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"interfaces/PageMetaDtoParameters.html":{},"classes/PageOptionsDto.html":{},"entities/Permission.html":{},"classes/PermissionDto.html":{},"injectables/PermissionService.html":{},"classes/PermissionTimestamps1655765304532.html":{},"classes/RefreshTokenDto.html":{},"entities/Role.html":{},"classes/RoleDto.html":{},"classes/RoleMigration165550928088.html":{},"injectables/RoleService.html":{},"classes/TokenDto.html":{},"entities/User.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["property",{"_index":1390,"title":{},"body":{"license.html":{}}}],["protect",{"_index":1569,"title":{},"body":{"license.html":{}}}],["protection",{"_index":1338,"title":{},"body":{"license.html":{}}}],["provide",{"_index":233,"title":{},"body":{"modules/AuthModule.html":{},"license.html":{}}}],["provided",{"_index":1126,"title":{},"body":{"license.html":{}}}],["providers",{"_index":222,"title":{},"body":{"modules/AuthModule.html":{},"modules/PermissionModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{}}}],["provides",{"_index":1269,"title":{},"body":{"license.html":{}}}],["providing",{"_index":1215,"title":{},"body":{"license.html":{}}}],["provision",{"_index":1336,"title":{},"body":{"license.html":{}}}],["provisions",{"_index":1445,"title":{},"body":{"license.html":{}}}],["public",{"_index":61,"title":{},"body":{"classes/AdminUserSeeds1655586994482.html":{},"controllers/AuthController.html":{},"controllers/HealthController.html":{},"classes/ManyToManyUserRoles1655586944086.html":{},"classes/PermissionPermissionsSeed1655765422849.html":{},"classes/PermissionTimestamps1655765304532.html":{},"classes/RoleMigration165550928088.html":{},"classes/RolePermissionsSeed1655595255331.html":{},"classes/RoleSeed1655509280886.html":{},"coverage.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["public\".\"idx_4be2f7adf862634f5f803d246b",{"_index":497,"title":{},"body":{"classes/ManyToManyUserRoles1655586944086.html":{}}}],["public\".\"idx_5f9286e6c25594c6b88c108db7",{"_index":498,"title":{},"body":{"classes/ManyToManyUserRoles1655586944086.html":{}}}],["public\".\"idx_7ec93d4fbf75b063f3ffd2646a",{"_index":504,"title":{},"body":{"classes/ManyToManyUserRoles1655586944086.html":{}}}],["public\".\"idx_9f44b6228b173c7b9dfb8c6600",{"_index":505,"title":{},"body":{"classes/ManyToManyUserRoles1655586944086.html":{}}}],["public\".\"idx_a88fcb405b56bf2e2646e9d479",{"_index":500,"title":{},"body":{"classes/ManyToManyUserRoles1655586944086.html":{}}}],["public\".\"idx_b36cb2e04bc353ca4ede00d87b",{"_index":503,"title":{},"body":{"classes/ManyToManyUserRoles1655586944086.html":{}}}],["public\".\"idx_bfbc9e263d4cea6d7a8c9eb3ad",{"_index":502,"title":{},"body":{"classes/ManyToManyUserRoles1655586944086.html":{}}}],["public\".\"idx_ed6edac7184b013d4bd58d60e5",{"_index":501,"title":{},"body":{"classes/ManyToManyUserRoles1655586944086.html":{}}}],["public.factory",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{}}}],["publicly",{"_index":1240,"title":{},"body":{"license.html":{}}}],["publish",{"_index":1498,"title":{},"body":{"license.html":{}}}],["published",{"_index":1503,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":1384,"title":{},"body":{"license.html":{}}}],["put",{"_index":620,"title":{},"body":{"controllers/PermissionController.html":{},"controllers/RoleController.html":{}}}],["put()@version('1')@checkpolicies(ability",{"_index":800,"title":{},"body":{"controllers/RoleController.html":{}}}],["put()@version('1')@checkpolicies(new",{"_index":617,"title":{},"body":{"controllers/PermissionController.html":{}}}],["query",{"_index":621,"title":{},"body":{"controllers/PermissionController.html":{},"controllers/RoleController.html":{}}}],["querybuilder",{"_index":705,"title":{},"body":{"injectables/PermissionService.html":{},"injectables/RoleService.html":{}}}],["querybuilder.getcount",{"_index":711,"title":{},"body":{"injectables/PermissionService.html":{},"injectables/RoleService.html":{}}}],["querybuilder.getrawandentities",{"_index":712,"title":{},"body":{"injectables/PermissionService.html":{},"injectables/RoleService.html":{}}}],["queryparams",{"_index":782,"title":{},"body":{"controllers/RoleController.html":{}}}],["queryparams.permissionids",{"_index":826,"title":{},"body":{"controllers/RoleController.html":{}}}],["queryparams.roleid",{"_index":825,"title":{},"body":{"controllers/RoleController.html":{}}}],["queryparams.userids",{"_index":830,"title":{},"body":{"controllers/RoleController.html":{}}}],["queryrunner",{"_index":66,"title":{},"body":{"classes/AdminUserSeeds1655586994482.html":{},"classes/ManyToManyUserRoles1655586944086.html":{},"classes/PermissionPermissionsSeed1655765422849.html":{},"classes/PermissionTimestamps1655765304532.html":{},"classes/RoleMigration165550928088.html":{},"classes/RolePermissionsSeed1655595255331.html":{},"classes/RoleSeed1655509280886.html":{}}}],["queryrunner.manager.create(permission",{"_index":681,"title":{},"body":{"classes/PermissionPermissionsSeed1655765422849.html":{},"classes/RolePermissionsSeed1655595255331.html":{}}}],["queryrunner.manager.create(role",{"_index":869,"title":{},"body":{"classes/RoleSeed1655509280886.html":{}}}],["queryrunner.manager.create(user",{"_index":86,"title":{},"body":{"classes/AdminUserSeeds1655586994482.html":{}}}],["queryrunner.manager.findone(role",{"_index":82,"title":{},"body":{"classes/AdminUserSeeds1655586994482.html":{},"classes/PermissionPermissionsSeed1655765422849.html":{},"classes/RolePermissionsSeed1655595255331.html":{}}}],["queryrunner.manager.save",{"_index":85,"title":{},"body":{"classes/AdminUserSeeds1655586994482.html":{},"classes/PermissionPermissionsSeed1655765422849.html":{},"classes/RolePermissionsSeed1655595255331.html":{},"classes/RoleSeed1655509280886.html":{}}}],["queryrunner.query",{"_index":456,"title":{},"body":{"classes/ManyToManyUserRoles1655586944086.html":{},"classes/PermissionTimestamps1655765304532.html":{},"classes/RoleMigration165550928088.html":{}}}],["queryrunner.query('delete",{"_index":687,"title":{},"body":{"classes/PermissionPermissionsSeed1655765422849.html":{},"classes/RolePermissionsSeed1655595255331.html":{}}}],["queryrunner.query('truncate",{"_index":101,"title":{},"body":{"classes/AdminUserSeeds1655586994482.html":{},"classes/RoleSeed1655509280886.html":{}}}],["queryrunner.query(`alter",{"_index":852,"title":{},"body":{"classes/RoleMigration165550928088.html":{}}}],["queryrunner.query(`drop",{"_index":499,"title":{},"body":{"classes/ManyToManyUserRoles1655586944086.html":{}}}],["québec",{"_index":1563,"title":{},"body":{"license.html":{}}}],["r",{"_index":1566,"title":{},"body":{"license.html":{}}}],["radmanovic",{"_index":90,"title":{},"body":{"classes/AdminUserSeeds1655586994482.html":{}}}],["random",{"_index":1040,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rate_limit",{"_index":1604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rate_limit_life",{"_index":1603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["raw",{"_index":1029,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rawpassword",{"_index":1035,"title":{},"body":{"miscellaneous/functions.html":{}}}],["read",{"_index":316,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["readable",{"_index":1177,"title":{},"body":{"license.html":{}}}],["readonly",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{}}}],["readpermissionpolicyhandler",{"_index":354,"title":{"classes/ReadPermissionPolicyHandler.html":{}},"body":{"classes/CreatePermissionPolicyHandler.html":{},"classes/DeletePermissionPolicyHandler.html":{},"controllers/PermissionController.html":{},"classes/ReadPermissionPolicyHandler.html":{},"classes/UpdatePermissionPolicyHandler.html":{},"coverage.html":{}}}],["reason",{"_index":1376,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":1344,"title":{},"body":{"license.html":{}}}],["received",{"_index":1479,"title":{},"body":{"license.html":{}}}],["reciprocity",{"_index":1564,"title":{},"body":{"license.html":{}}}],["reducing",{"_index":1502,"title":{},"body":{"license.html":{}}}],["refer",{"_index":1302,"title":{},"body":{"license.html":{}}}],["references",{"_index":484,"title":{},"body":{"classes/ManyToManyUserRoles1655586944086.html":{}}}],["refers",{"_index":1329,"title":{},"body":{"license.html":{}}}],["reflect",{"_index":1006,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":412,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/PoliciesGuard.html":{}}}],["reformed",{"_index":1494,"title":{},"body":{"license.html":{}}}],["refresh",{"_index":172,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["refresh_token",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{},"classes/RefreshTokenDto.html":{},"classes/TokenDto.html":{}}}],["refresh_token_expiration_time",{"_index":1612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["refresh_token_secret",{"_index":1608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["refreshtoken",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["refreshtoken(@body",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{}}}],["refreshtoken(dto",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshtoken(refreshtokendto",{"_index":169,"title":{},"body":{"controllers/AuthController.html":{}}}],["refreshtokendto",{"_index":170,"title":{"classes/RefreshTokenDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/RefreshTokenDto.html":{},"coverage.html":{}}}],["regarding",{"_index":1472,"title":{},"body":{"license.html":{}}}],["registered",{"_index":1531,"title":{},"body":{"license.html":{}}}],["remain",{"_index":1480,"title":{},"body":{"license.html":{}}}],["remote",{"_index":1467,"title":{},"body":{"license.html":{}}}],["rent",{"_index":1243,"title":{},"body":{"license.html":{}}}],["renting",{"_index":1207,"title":{},"body":{"license.html":{}}}],["repository",{"_index":699,"title":{},"body":{"injectables/PermissionService.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{},"license.html":{}}}],["represents",{"_index":1036,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["reproduce",{"_index":1234,"title":{},"body":{"license.html":{}}}],["reproduced",{"_index":1474,"title":{},"body":{"license.html":{}}}],["reproducing",{"_index":1348,"title":{},"body":{"license.html":{}}}],["request",{"_index":168,"title":{},"body":{"controllers/AuthController.html":{}}}],["requested",{"_index":1471,"title":{},"body":{"license.html":{}}}],["require",{"_index":1573,"title":{},"body":{"license.html":{}}}],["required",{"_index":1168,"title":{},"body":{"license.html":{}}}],["reset",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PermissionModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["residence",{"_index":1534,"title":{},"body":{"license.html":{}}}],["resides",{"_index":1524,"title":{},"body":{"license.html":{}}}],["resource",{"_index":582,"title":{},"body":{"entities/Permission.html":{},"classes/PermissionDto.html":{},"classes/PermissionPermissionsSeed1655765422849.html":{},"classes/RolePermissionsSeed1655595255331.html":{}}}],["responsibility",{"_index":1432,"title":{},"body":{"license.html":{}}}],["restrict",{"_index":1323,"title":{},"body":{"license.html":{}}}],["restrictions",{"_index":1293,"title":{},"body":{"license.html":{}}}],["result",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PermissionService.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{}}}],["result.user",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{}}}],["resulting",{"_index":1511,"title":{},"body":{"license.html":{}}}],["results",{"_index":52,"title":{},"body":{"entities/Address.html":{},"classes/AdminUserSeeds1655586994482.html":{},"modules/AppModule.html":{},"classes/AssignRolePermissionsQuery.html":{},"classes/AssignRoleUsersQuery.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"classes/CreatePermissionPolicyHandler.html":{},"classes/CreateUserDto.html":{},"classes/DeletePermissionPolicyHandler.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/ManyToManyUserRoles1655586944086.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"interfaces/PageMetaDtoParameters.html":{},"classes/PageOptionsDto.html":{},"entities/Permission.html":{},"controllers/PermissionController.html":{},"classes/PermissionDto.html":{},"modules/PermissionModule.html":{},"classes/PermissionPermissionsSeed1655765422849.html":{},"injectables/PermissionService.html":{},"classes/PermissionTimestamps1655765304532.html":{},"guards/PoliciesGuard.html":{},"classes/ReadPermissionPolicyHandler.html":{},"classes/RefreshTokenDto.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"classes/RoleMigration165550928088.html":{},"modules/RoleModule.html":{},"classes/RolePermissionsSeed1655595255331.html":{},"classes/RoleSeed1655509280886.html":{},"injectables/RoleService.html":{},"classes/TokenDto.html":{},"classes/UpdatePermissionPolicyHandler.html":{},"entities/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"classes/CreatePermissionPolicyHandler.html":{},"classes/DeletePermissionPolicyHandler.html":{},"controllers/HealthController.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/PageOptionsDto.html":{},"controllers/PermissionController.html":{},"classes/PermissionDto.html":{},"injectables/PermissionService.html":{},"guards/PoliciesGuard.html":{},"classes/ReadPermissionPolicyHandler.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"injectables/RoleService.html":{},"classes/UpdatePermissionPolicyHandler.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":71,"title":{},"body":{"classes/AdminUserSeeds1655586994482.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CreatePermissionPolicyHandler.html":{},"classes/DeletePermissionPolicyHandler.html":{},"controllers/HealthController.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/ManyToManyUserRoles1655586944086.html":{},"controllers/PermissionController.html":{},"classes/PermissionDto.html":{},"classes/PermissionPermissionsSeed1655765422849.html":{},"injectables/PermissionService.html":{},"classes/PermissionTimestamps1655765304532.html":{},"guards/PoliciesGuard.html":{},"classes/ReadPermissionPolicyHandler.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"classes/RoleMigration165550928088.html":{},"classes/RolePermissionsSeed1655595255331.html":{},"classes/RoleSeed1655509280886.html":{},"injectables/RoleService.html":{},"classes/UpdatePermissionPolicyHandler.html":{},"injectables/UserService.html":{}}}],["right",{"_index":1135,"title":{},"body":{"license.html":{}}}],["rights",{"_index":1221,"title":{},"body":{"license.html":{}}}],["rimraf",{"_index":1009,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":74,"title":{"entities/Role.html":{}},"body":{"classes/AdminUserSeeds1655586994482.html":{},"classes/AssignRolePermissionsQuery.html":{},"classes/AssignRoleUsersQuery.html":{},"entities/Permission.html":{},"classes/PermissionPermissionsSeed1655765422849.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"classes/RoleMigration165550928088.html":{},"modules/RoleModule.html":{},"classes/RolePermissionsSeed1655595255331.html":{},"classes/RoleSeed1655509280886.html":{},"injectables/RoleService.html":{},"entities/User.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["role\"(\"id",{"_index":488,"title":{},"body":{"classes/ManyToManyUserRoles1655586944086.html":{}}}],["role.controller",{"_index":857,"title":{},"body":{"modules/RoleModule.html":{}}}],["role.datecreated",{"_index":843,"title":{},"body":{"classes/RoleDto.html":{}}}],["role.dateupdated",{"_index":844,"title":{},"body":{"classes/RoleDto.html":{}}}],["role.dto",{"_index":806,"title":{},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{}}}],["role.entity",{"_index":839,"title":{},"body":{"classes/RoleDto.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{}}}],["role.id",{"_index":840,"title":{},"body":{"classes/RoleDto.html":{}}}],["role.name",{"_index":841,"title":{},"body":{"classes/RoleDto.html":{}}}],["role.permissions",{"_index":903,"title":{},"body":{"injectables/RoleService.html":{}}}],["role.service",{"_index":808,"title":{},"body":{"controllers/RoleController.html":{},"modules/RoleModule.html":{}}}],["role.users",{"_index":907,"title":{},"body":{"injectables/RoleService.html":{}}}],["role/role.entity",{"_index":592,"title":{},"body":{"entities/Permission.html":{},"entities/User.html":{},"modules/UserModule.html":{}}}],["role/role.module",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["role_permissions_permission",{"_index":467,"title":{},"body":{"classes/ManyToManyUserRoles1655586944086.html":{}}}],["role_users_user",{"_index":471,"title":{},"body":{"classes/ManyToManyUserRoles1655586944086.html":{}}}],["rolecontroller",{"_index":770,"title":{"controllers/RoleController.html":{}},"body":{"controllers/RoleController.html":{},"modules/RoleModule.html":{},"coverage.html":{}}}],["roledto",{"_index":787,"title":{"classes/RoleDto.html":{}},"body":{"controllers/RoleController.html":{},"classes/RoleDto.html":{},"injectables/RoleService.html":{},"coverage.html":{}}}],["roleid",{"_index":137,"title":{},"body":{"classes/AssignRolePermissionsQuery.html":{},"classes/AssignRoleUsersQuery.html":{},"classes/ManyToManyUserRoles1655586944086.html":{},"injectables/RoleService.html":{}}}],["rolemigration.ts",{"_index":847,"title":{},"body":{"classes/RoleMigration165550928088.html":{},"coverage.html":{}}}],["rolemigration.ts:15",{"_index":850,"title":{},"body":{"classes/RoleMigration165550928088.html":{}}}],["rolemigration.ts:4",{"_index":849,"title":{},"body":{"classes/RoleMigration165550928088.html":{}}}],["rolemigration.ts:6",{"_index":851,"title":{},"body":{"classes/RoleMigration165550928088.html":{}}}],["rolemigration165550928088",{"_index":845,"title":{"classes/RoleMigration165550928088.html":{}},"body":{"classes/RoleMigration165550928088.html":{},"coverage.html":{}}}],["rolemigration1655515669409",{"_index":848,"title":{},"body":{"classes/RoleMigration165550928088.html":{}}}],["rolemodule",{"_index":111,"title":{"modules/RoleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RoleModule.html":{},"modules.html":{},"overview.html":{}}}],["rolepermissionsseed.ts",{"_index":861,"title":{},"body":{"classes/RolePermissionsSeed1655595255331.html":{},"coverage.html":{}}}],["rolepermissionsseed.ts:51",{"_index":862,"title":{},"body":{"classes/RolePermissionsSeed1655595255331.html":{}}}],["rolepermissionsseed.ts:7",{"_index":863,"title":{},"body":{"classes/RolePermissionsSeed1655595255331.html":{}}}],["rolepermissionsseed1655595255331",{"_index":859,"title":{"classes/RolePermissionsSeed1655595255331.html":{}},"body":{"classes/RolePermissionsSeed1655595255331.html":{},"coverage.html":{}}}],["rolerepository",{"_index":872,"title":{},"body":{"injectables/RoleService.html":{}}}],["roles",{"_index":100,"title":{},"body":{"classes/AdminUserSeeds1655586994482.html":{},"entities/Permission.html":{},"classes/PermissionPermissionsSeed1655765422849.html":{},"classes/RolePermissionsSeed1655595255331.html":{},"entities/User.html":{}}}],["roles.permissions",{"_index":589,"title":{},"body":{"entities/Permission.html":{}}}],["roles.users",{"_index":935,"title":{},"body":{"entities/User.html":{}}}],["roleseed.ts",{"_index":866,"title":{},"body":{"classes/RoleSeed1655509280886.html":{},"coverage.html":{}}}],["roleseed.ts:31",{"_index":867,"title":{},"body":{"classes/RoleSeed1655509280886.html":{}}}],["roleseed.ts:5",{"_index":868,"title":{},"body":{"classes/RoleSeed1655509280886.html":{}}}],["roleseed1655509280886",{"_index":864,"title":{"classes/RoleSeed1655509280886.html":{}},"body":{"classes/RoleSeed1655509280886.html":{},"coverage.html":{}}}],["roleservice",{"_index":807,"title":{"injectables/RoleService.html":{}},"body":{"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"coverage.html":{},"overview.html":{}}}],["royalty",{"_index":1226,"title":{},"body":{"license.html":{}}}],["rules",{"_index":1456,"title":{},"body":{"license.html":{}}}],["run",{"_index":1066,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["running",{"_index":1641,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ruuning",{"_index":1094,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1011,"title":{},"body":{"dependencies.html":{}}}],["sa",{"_index":1561,"title":{},"body":{"license.html":{}}}],["sake",{"_index":1328,"title":{},"body":{"license.html":{}}}],["salt",{"_index":1041,"title":{},"body":{"miscellaneous/functions.html":{}}}],["same",{"_index":1034,"title":{},"body":{"miscellaneous/functions.html":{}}}],["save",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{}}}],["scalable",{"_index":1050,"title":{},"body":{"index.html":{}}}],["schema",{"_index":1104,"title":{},"body":{"index.html":{}}}],["scope",{"_index":1220,"title":{},"body":{"license.html":{}}}],["seat",{"_index":1530,"title":{},"body":{"license.html":{}}}],["secret",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{}}}],["secretorkey",{"_index":444,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["see",{"_index":1032,"title":{},"body":{"miscellaneous/functions.html":{}}}],["selling",{"_index":1204,"title":{},"body":{"license.html":{}}}],["serve",{"_index":1084,"title":{},"body":{"index.html":{}}}],["server",{"_index":1051,"title":{},"body":{"index.html":{}}}],["service",{"_index":1341,"title":{},"body":{"license.html":{}}}],["services",{"_index":1427,"title":{},"body":{"license.html":{}}}],["set",{"_index":1636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata",{"_index":310,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{}}}],["setmetadata(check_policies_key",{"_index":347,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"miscellaneous/variables.html":{}}}],["setmetadata(is_public_key",{"_index":1622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shall",{"_index":1296,"title":{},"body":{"license.html":{}}}],["sharealike",{"_index":1558,"title":{},"body":{"license.html":{}}}],["side",{"_index":1052,"title":{},"body":{"index.html":{}}}],["similar",{"_index":1453,"title":{},"body":{"license.html":{}}}],["similarly",{"_index":1459,"title":{},"body":{"license.html":{}}}],["skip",{"_index":555,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["skip(pageoptionsdto.skip",{"_index":709,"title":{},"body":{"injectables/PermissionService.html":{},"injectables/RoleService.html":{}}}],["software",{"_index":1151,"title":{},"body":{"license.html":{}}}],["sole",{"_index":1431,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"entities/Address.html":{},"classes/AdminUserSeeds1655586994482.html":{},"modules/AppModule.html":{},"classes/AssignRolePermissionsQuery.html":{},"classes/AssignRoleUsersQuery.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"classes/CreatePermissionPolicyHandler.html":{},"classes/CreateUserDto.html":{},"classes/DeletePermissionPolicyHandler.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/ManyToManyUserRoles1655586944086.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"interfaces/PageMetaDtoParameters.html":{},"classes/PageOptionsDto.html":{},"entities/Permission.html":{},"controllers/PermissionController.html":{},"classes/PermissionDto.html":{},"modules/PermissionModule.html":{},"classes/PermissionPermissionsSeed1655765422849.html":{},"injectables/PermissionService.html":{},"classes/PermissionTimestamps1655765304532.html":{},"guards/PoliciesGuard.html":{},"classes/ReadPermissionPolicyHandler.html":{},"classes/RefreshTokenDto.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"classes/RoleMigration165550928088.html":{},"modules/RoleModule.html":{},"classes/RolePermissionsSeed1655595255331.html":{},"classes/RoleSeed1655509280886.html":{},"injectables/RoleService.html":{},"classes/TokenDto.html":{},"classes/UpdatePermissionPolicyHandler.html":{},"entities/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"license.html":{}}}],["specific",{"_index":1509,"title":{},"body":{"license.html":{}}}],["src",{"_index":1652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../bcrypt.ts",{"_index":1025,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../casl",{"_index":1020,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1024,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../page",{"_index":1018,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../postgres.config.ts",{"_index":1590,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../public.factory.ts",{"_index":1589,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/address/address.entity.ts",{"_index":6,"title":{},"body":{"entities/Address.html":{},"coverage.html":{}}}],["src/address/address.entity.ts:17",{"_index":38,"title":{},"body":{"entities/Address.html":{}}}],["src/address/address.entity.ts:20",{"_index":29,"title":{},"body":{"entities/Address.html":{}}}],["src/address/address.entity.ts:23",{"_index":30,"title":{},"body":{"entities/Address.html":{}}}],["src/address/address.entity.ts:26",{"_index":45,"title":{},"body":{"entities/Address.html":{}}}],["src/address/address.entity.ts:29",{"_index":28,"title":{},"body":{"entities/Address.html":{}}}],["src/address/address.entity.ts:32",{"_index":44,"title":{},"body":{"entities/Address.html":{}}}],["src/address/address.entity.ts:35",{"_index":33,"title":{},"body":{"entities/Address.html":{}}}],["src/address/address.entity.ts:38",{"_index":35,"title":{},"body":{"entities/Address.html":{}}}],["src/app.module.ts",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.controller.ts",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:36",{"_index":164,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:43",{"_index":175,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:51",{"_index":167,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module",{"_index":673,"title":{},"body":{"modules/PermissionModule.html":{},"modules/RoleModule.html":{}}}],["src/auth/auth.module.ts",{"_index":221,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:16",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:22",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:36",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:56",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:69",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:85",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/casl",{"_index":303,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"classes/PermissionDto.html":{},"classes/PermissionPermissionsSeed1655765422849.html":{},"controllers/RoleController.html":{},"classes/RolePermissionsSeed1655595255331.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/auth/jwt",{"_index":408,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":430,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:17",{"_index":434,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:7",{"_index":432,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/login.dto.ts",{"_index":446,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/login.dto.ts:5",{"_index":448,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/login.dto.ts:8",{"_index":447,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/policies.guard",{"_index":802,"title":{},"body":{"controllers/RoleController.html":{}}}],["src/auth/policies.guard.ts",{"_index":734,"title":{},"body":{"guards/PoliciesGuard.html":{},"coverage.html":{}}}],["src/auth/policies.guard.ts:11",{"_index":736,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["src/auth/policies.guard.ts:17",{"_index":737,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["src/auth/policies.guard.ts:32",{"_index":739,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["src/auth/policies/permission.policies.ts",{"_index":350,"title":{},"body":{"classes/CreatePermissionPolicyHandler.html":{},"classes/DeletePermissionPolicyHandler.html":{},"classes/ReadPermissionPolicyHandler.html":{},"classes/UpdatePermissionPolicyHandler.html":{},"coverage.html":{}}}],["src/auth/policies/permission.policies.ts:15",{"_index":352,"title":{},"body":{"classes/CreatePermissionPolicyHandler.html":{}}}],["src/auth/policies/permission.policies.ts:21",{"_index":914,"title":{},"body":{"classes/UpdatePermissionPolicyHandler.html":{}}}],["src/auth/policies/permission.policies.ts:27",{"_index":376,"title":{},"body":{"classes/DeletePermissionPolicyHandler.html":{}}}],["src/auth/policies/permission.policies.ts:9",{"_index":751,"title":{},"body":{"classes/ReadPermissionPolicyHandler.html":{}}}],["src/auth/public.factory",{"_index":388,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/auth/public.factory.ts",{"_index":967,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/refresh",{"_index":752,"title":{},"body":{"classes/RefreshTokenDto.html":{},"coverage.html":{}}}],["src/auth/token.dto.ts",{"_index":908,"title":{},"body":{"classes/TokenDto.html":{},"coverage.html":{}}}],["src/auth/token.dto.ts:3",{"_index":911,"title":{},"body":{"classes/TokenDto.html":{}}}],["src/auth/token.dto.ts:4",{"_index":910,"title":{},"body":{"classes/TokenDto.html":{}}}],["src/config/postgres.config.ts",{"_index":968,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/health/health.controller.ts",{"_index":378,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:26",{"_index":382,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":396,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/main.ts",{"_index":969,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/migrations",{"_index":1664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/migrations/1655509280886",{"_index":846,"title":{},"body":{"classes/RoleMigration165550928088.html":{},"coverage.html":{}}}],["src/migrations/1655586944086",{"_index":450,"title":{},"body":{"classes/ManyToManyUserRoles1655586944086.html":{},"coverage.html":{}}}],["src/migrations/1655765304532",{"_index":725,"title":{},"body":{"classes/PermissionTimestamps1655765304532.html":{},"coverage.html":{}}}],["src/migrations/seed/1655519084251",{"_index":865,"title":{},"body":{"classes/RoleSeed1655509280886.html":{},"coverage.html":{}}}],["src/migrations/seed/1655586994482",{"_index":56,"title":{},"body":{"classes/AdminUserSeeds1655586994482.html":{},"coverage.html":{}}}],["src/migrations/seed/1655595255331",{"_index":860,"title":{},"body":{"classes/RolePermissionsSeed1655595255331.html":{},"coverage.html":{}}}],["src/migrations/seed/1655765422849",{"_index":677,"title":{},"body":{"classes/PermissionPermissionsSeed1655765422849.html":{},"coverage.html":{}}}],["src/pagination/page",{"_index":523,"title":{},"body":{"classes/PageMetaDto.html":{},"interfaces/PageMetaDtoParameters.html":{},"classes/PageOptionsDto.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/pagination/page.dto",{"_index":892,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/pagination/page.dto.ts",{"_index":507,"title":{},"body":{"classes/PageDto.html":{},"coverage.html":{}}}],["src/pagination/page.dto.ts:11",{"_index":513,"title":{},"body":{"classes/PageDto.html":{}}}],["src/pagination/page.dto.ts:8",{"_index":515,"title":{},"body":{"classes/PageDto.html":{}}}],["src/permission/permission.controller.ts",{"_index":597,"title":{},"body":{"controllers/PermissionController.html":{},"coverage.html":{}}}],["src/permission/permission.controller.ts:40",{"_index":612,"title":{},"body":{"controllers/PermissionController.html":{}}}],["src/permission/permission.controller.ts:47",{"_index":615,"title":{},"body":{"controllers/PermissionController.html":{}}}],["src/permission/permission.controller.ts:54",{"_index":609,"title":{},"body":{"controllers/PermissionController.html":{}}}],["src/permission/permission.controller.ts:61",{"_index":606,"title":{},"body":{"controllers/PermissionController.html":{}}}],["src/permission/permission.controller.ts:68",{"_index":618,"title":{},"body":{"controllers/PermissionController.html":{}}}],["src/permission/permission.dto.ts",{"_index":644,"title":{},"body":{"classes/PermissionDto.html":{},"coverage.html":{}}}],["src/permission/permission.dto.ts:12",{"_index":652,"title":{},"body":{"classes/PermissionDto.html":{}}}],["src/permission/permission.dto.ts:13",{"_index":648,"title":{},"body":{"classes/PermissionDto.html":{}}}],["src/permission/permission.dto.ts:14",{"_index":649,"title":{},"body":{"classes/PermissionDto.html":{}}}],["src/permission/permission.dto.ts:16",{"_index":656,"title":{},"body":{"classes/PermissionDto.html":{}}}],["src/permission/permission.dto.ts:24",{"_index":654,"title":{},"body":{"classes/PermissionDto.html":{}}}],["src/permission/permission.dto.ts:6",{"_index":650,"title":{},"body":{"classes/PermissionDto.html":{}}}],["src/permission/permission.dto.ts:8",{"_index":647,"title":{},"body":{"classes/PermissionDto.html":{}}}],["src/permission/permission.entity",{"_index":312,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"classes/PermissionPermissionsSeed1655765422849.html":{},"modules/RoleModule.html":{},"classes/RolePermissionsSeed1655595255331.html":{},"injectables/RoleService.html":{}}}],["src/permission/permission.entity.ts",{"_index":581,"title":{},"body":{"entities/Permission.html":{},"coverage.html":{}}}],["src/permission/permission.entity.ts:17",{"_index":586,"title":{},"body":{"entities/Permission.html":{}}}],["src/permission/permission.entity.ts:20",{"_index":583,"title":{},"body":{"entities/Permission.html":{}}}],["src/permission/permission.entity.ts:23",{"_index":587,"title":{},"body":{"entities/Permission.html":{}}}],["src/permission/permission.entity.ts:26",{"_index":590,"title":{},"body":{"entities/Permission.html":{}}}],["src/permission/permission.entity.ts:29",{"_index":584,"title":{},"body":{"entities/Permission.html":{}}}],["src/permission/permission.entity.ts:32",{"_index":585,"title":{},"body":{"entities/Permission.html":{}}}],["src/permission/permission.module.ts",{"_index":672,"title":{},"body":{"modules/PermissionModule.html":{}}}],["src/permission/permission.service.ts",{"_index":688,"title":{},"body":{"injectables/PermissionService.html":{},"coverage.html":{}}}],["src/permission/permission.service.ts:13",{"_index":701,"title":{},"body":{"injectables/PermissionService.html":{}}}],["src/permission/permission.service.ts:15",{"_index":696,"title":{},"body":{"injectables/PermissionService.html":{}}}],["src/permission/permission.service.ts:41",{"_index":697,"title":{},"body":{"injectables/PermissionService.html":{}}}],["src/permission/permission.service.ts:54",{"_index":694,"title":{},"body":{"injectables/PermissionService.html":{}}}],["src/permission/permission.service.ts:65",{"_index":692,"title":{},"body":{"injectables/PermissionService.html":{}}}],["src/permission/permission.service.ts:74",{"_index":698,"title":{},"body":{"injectables/PermissionService.html":{}}}],["src/role/asign",{"_index":134,"title":{},"body":{"classes/AssignRolePermissionsQuery.html":{},"classes/AssignRoleUsersQuery.html":{},"coverage.html":{}}}],["src/role/role.controller.ts",{"_index":771,"title":{},"body":{"controllers/RoleController.html":{},"coverage.html":{}}}],["src/role/role.controller.ts:103",{"_index":785,"title":{},"body":{"controllers/RoleController.html":{}}}],["src/role/role.controller.ts:42",{"_index":795,"title":{},"body":{"controllers/RoleController.html":{}}}],["src/role/role.controller.ts:51",{"_index":798,"title":{},"body":{"controllers/RoleController.html":{}}}],["src/role/role.controller.ts:60",{"_index":792,"title":{},"body":{"controllers/RoleController.html":{}}}],["src/role/role.controller.ts:69",{"_index":789,"title":{},"body":{"controllers/RoleController.html":{}}}],["src/role/role.controller.ts:78",{"_index":801,"title":{},"body":{"controllers/RoleController.html":{}}}],["src/role/role.controller.ts:89",{"_index":781,"title":{},"body":{"controllers/RoleController.html":{}}}],["src/role/role.dto.ts",{"_index":831,"title":{},"body":{"classes/RoleDto.html":{},"coverage.html":{}}}],["src/role/role.dto.ts:11",{"_index":838,"title":{},"body":{"classes/RoleDto.html":{}}}],["src/role/role.dto.ts:18",{"_index":837,"title":{},"body":{"classes/RoleDto.html":{}}}],["src/role/role.dto.ts:5",{"_index":834,"title":{},"body":{"classes/RoleDto.html":{}}}],["src/role/role.dto.ts:7",{"_index":835,"title":{},"body":{"classes/RoleDto.html":{}}}],["src/role/role.dto.ts:8",{"_index":832,"title":{},"body":{"classes/RoleDto.html":{}}}],["src/role/role.dto.ts:9",{"_index":833,"title":{},"body":{"classes/RoleDto.html":{}}}],["src/role/role.entity",{"_index":75,"title":{},"body":{"classes/AdminUserSeeds1655586994482.html":{},"classes/PermissionPermissionsSeed1655765422849.html":{},"classes/RolePermissionsSeed1655595255331.html":{},"classes/RoleSeed1655509280886.html":{}}}],["src/role/role.entity.ts",{"_index":755,"title":{},"body":{"entities/Role.html":{},"coverage.html":{}}}],["src/role/role.entity.ts:17",{"_index":760,"title":{},"body":{"entities/Role.html":{}}}],["src/role/role.entity.ts:21",{"_index":762,"title":{},"body":{"entities/Role.html":{}}}],["src/role/role.entity.ts:28",{"_index":766,"title":{},"body":{"entities/Role.html":{}}}],["src/role/role.entity.ts:31",{"_index":768,"title":{},"body":{"entities/Role.html":{}}}],["src/role/role.entity.ts:34",{"_index":758,"title":{},"body":{"entities/Role.html":{}}}],["src/role/role.entity.ts:37",{"_index":759,"title":{},"body":{"entities/Role.html":{}}}],["src/role/role.module.ts",{"_index":856,"title":{},"body":{"modules/RoleModule.html":{}}}],["src/role/role.service.ts",{"_index":871,"title":{},"body":{"injectables/RoleService.html":{},"coverage.html":{}}}],["src/role/role.service.ts:101",{"_index":879,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/role.service.ts:15",{"_index":889,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/role.service.ts:18",{"_index":887,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/role.service.ts:21",{"_index":891,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/role.service.ts:23",{"_index":884,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/role.service.ts:48",{"_index":885,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/role.service.ts:61",{"_index":882,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/role.service.ts:72",{"_index":880,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/role.service.ts:79",{"_index":886,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/role.service.ts:87",{"_index":877,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/user/create",{"_index":362,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/user.entity",{"_index":76,"title":{},"body":{"classes/AdminUserSeeds1655586994482.html":{},"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{}}}],["src/user/user.entity.ts",{"_index":915,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/user/user.entity.ts:18",{"_index":929,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:21",{"_index":928,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:24",{"_index":933,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:28",{"_index":937,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:32",{"_index":927,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:35",{"_index":932,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:38",{"_index":931,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:41",{"_index":934,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:44",{"_index":923,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:50",{"_index":919,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:53",{"_index":920,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:56",{"_index":924,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.entity.ts:63",{"_index":936,"title":{},"body":{"entities/User.html":{}}}],["src/user/user.module.ts",{"_index":943,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":947,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:11",{"_index":950,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:9",{"_index":952,"title":{},"body":{"injectables/UserService.html":{}}}],["src/util/bcrypt",{"_index":78,"title":{},"body":{"classes/AdminUserSeeds1655586994482.html":{}}}],["src/util/bcrypt.ts",{"_index":974,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":1067,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1070,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["start:prod",{"_index":1649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start:prodrunning",{"_index":1072,"title":{},"body":{"index.html":{}}}],["started",{"_index":1044,"title":{"index.html":{},"license.html":{}},"body":{}}],["state",{"_index":1529,"title":{},"body":{"license.html":{}}}],["stated",{"_index":1391,"title":{},"body":{"license.html":{}}}],["statements",{"_index":957,"title":{},"body":{"coverage.html":{}}}],["stating",{"_index":1310,"title":{},"body":{"license.html":{}}}],["statutory",{"_index":1419,"title":{},"body":{"license.html":{}}}],["stoppage",{"_index":1411,"title":{},"body":{"license.html":{}}}],["stored",{"_index":11,"title":{},"body":{"entities/Address.html":{},"license.html":{}}}],["strategy",{"_index":439,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":24,"title":{},"body":{"entities/Address.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"classes/CreateUserDto.html":{},"interfaces/IPolicyHandler.html":{},"classes/LoginDto.html":{},"classes/ManyToManyUserRoles1655586944086.html":{},"entities/Permission.html":{},"classes/PermissionDto.html":{},"classes/PermissionTimestamps1655765304532.html":{},"classes/RefreshTokenDto.html":{},"entities/Role.html":{},"classes/RoleDto.html":{},"classes/RoleMigration165550928088.html":{},"classes/TokenDto.html":{},"entities/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["strong",{"_index":1567,"title":{},"body":{"license.html":{}}}],["study",{"_index":1181,"title":{},"body":{"license.html":{}}}],["subject",{"_index":329,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"license.html":{}}}],["sublicensable",{"_index":1230,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1244,"title":{},"body":{"license.html":{}}}],["subsequent",{"_index":1362,"title":{},"body":{"license.html":{}}}],["such",{"_index":1133,"title":{},"body":{"license.html":{}}}],["sup3rr3fr3sht0k3ns3cr3t",{"_index":1609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sup3rs3cr3t0k3n",{"_index":1607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["super",{"_index":424,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["super.canactivate(context",{"_index":429,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["support",{"_index":1575,"title":{},"body":{"modules.html":{}}}],["supports",{"_index":1248,"title":{},"body":{"license.html":{}}}],["svg",{"_index":1576,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1001,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["synchronize",{"_index":1635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t",{"_index":511,"title":{},"body":{"classes/PageDto.html":{}}}],["table",{"_index":457,"title":{},"body":{"classes/ManyToManyUserRoles1655586944086.html":{},"classes/PermissionTimestamps1655765304532.html":{},"classes/RoleMigration165550928088.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":975,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":529,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{},"license.html":{}}}],["take(pageoptionsdto.take",{"_index":710,"title":{},"body":{"injectables/PermissionService.html":{},"injectables/RoleService.html":{}}}],["takes",{"_index":1028,"title":{},"body":{"miscellaneous/functions.html":{}}}],["terminate",{"_index":1476,"title":{},"body":{"license.html":{}}}],["termination",{"_index":1475,"title":{},"body":{"license.html":{}}}],["terminusmodule",{"_index":397,"title":{},"body":{"modules/HealthModule.html":{}}}],["terms",{"_index":1128,"title":{},"body":{"license.html":{}}}],["test",{"_index":1080,"title":{},"body":{"index.html":{}}}],["test:covdocumentation",{"_index":1083,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1082,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1079,"title":{},"body":{"index.html":{}}}],["text",{"_index":1030,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["therefore",{"_index":1371,"title":{},"body":{"license.html":{}}}],["thereof",{"_index":1164,"title":{},"body":{"license.html":{}}}],["thereto",{"_index":1290,"title":{},"body":{"license.html":{}}}],["this.access_token",{"_index":912,"title":{},"body":{"classes/TokenDto.html":{}}}],["this.action",{"_index":662,"title":{},"body":{"classes/PermissionDto.html":{}}}],["this.authservice.getcurrentuser(request.headers.authorization",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.login(logindto",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.refreshtoken(refreshtokendto",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.caslabilityfactory.createforuser(user",{"_index":744,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["this.data",{"_index":521,"title":{},"body":{"classes/PageDto.html":{}}}],["this.datecreated",{"_index":665,"title":{},"body":{"classes/PermissionDto.html":{},"classes/RoleDto.html":{}}}],["this.dateupdated",{"_index":667,"title":{},"body":{"classes/PermissionDto.html":{},"classes/RoleDto.html":{}}}],["this.db.pingcheck('postgres",{"_index":395,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.execpolicyhandler(handler",{"_index":746,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["this.generatenewtoken(result.user",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.generatenewtoken(user",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.hasnextpage",{"_index":549,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["this.haspreviouspage",{"_index":547,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["this.health.check",{"_index":393,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck('basic",{"_index":394,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.id",{"_index":660,"title":{},"body":{"classes/PermissionDto.html":{},"classes/RoleDto.html":{}}}],["this.itemcount",{"_index":544,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["this.jwtservice.sign",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(dto.refresh_token",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(token",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.meta",{"_index":522,"title":{},"body":{"classes/PageDto.html":{}}}],["this.name",{"_index":842,"title":{},"body":{"classes/RoleDto.html":{}}}],["this.page",{"_index":540,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{}}}],["this.pagecount",{"_index":545,"title":{},"body":{"classes/PageMetaDto.html":{}}}],["this.permissionrepository.createquerybuilder('permissions",{"_index":706,"title":{},"body":{"injectables/PermissionService.html":{}}}],["this.permissionrepository.delete(id",{"_index":718,"title":{},"body":{"injectables/PermissionService.html":{}}}],["this.permissionrepository.findbyids",{"_index":902,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.permissionrepository.findone",{"_index":722,"title":{},"body":{"injectables/PermissionService.html":{}}}],["this.permissionrepository.findone(id",{"_index":715,"title":{},"body":{"injectables/PermissionService.html":{}}}],["this.permissionrepository.save",{"_index":719,"title":{},"body":{"injectables/PermissionService.html":{}}}],["this.permissionrepository.save(permissiondto.tomodel",{"_index":721,"title":{},"body":{"injectables/PermissionService.html":{}}}],["this.permissionservice.createpermission(permissiondto",{"_index":641,"title":{},"body":{"controllers/PermissionController.html":{}}}],["this.permissionservice.deletepermissionbyid(id",{"_index":639,"title":{},"body":{"controllers/PermissionController.html":{}}}],["this.permissionservice.findallpermissionspageable(pageoptionsdto",{"_index":633,"title":{},"body":{"controllers/PermissionController.html":{}}}],["this.permissionservice.findpermissionbyid(id",{"_index":636,"title":{},"body":{"controllers/PermissionController.html":{}}}],["this.permissionservice.updatepermission(permissiondto",{"_index":643,"title":{},"body":{"controllers/PermissionController.html":{}}}],["this.reflector.get",{"_index":742,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["this.reflector.getallandoverride(is_public_key",{"_index":426,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["this.refresh_token",{"_index":913,"title":{},"body":{"classes/TokenDto.html":{}}}],["this.resource",{"_index":664,"title":{},"body":{"classes/PermissionDto.html":{}}}],["this.rolerepository.createquerybuilder('roles",{"_index":893,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.rolerepository.delete(id",{"_index":898,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.rolerepository.findone(id",{"_index":897,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.rolerepository.findone(role.id",{"_index":905,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.rolerepository.findone(roledto.id",{"_index":900,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.rolerepository.findone(roleid",{"_index":901,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.rolerepository.save(role",{"_index":904,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.rolerepository.save(roledto.tomodel",{"_index":899,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.roleservice.assignpermissions",{"_index":824,"title":{},"body":{"controllers/RoleController.html":{}}}],["this.roleservice.assignusers",{"_index":829,"title":{},"body":{"controllers/RoleController.html":{}}}],["this.roleservice.createrole(roledto",{"_index":819,"title":{},"body":{"controllers/RoleController.html":{}}}],["this.roleservice.deleterolebyid(id",{"_index":817,"title":{},"body":{"controllers/RoleController.html":{}}}],["this.roleservice.findallrolespageable(pageoptionsdto",{"_index":813,"title":{},"body":{"controllers/RoleController.html":{}}}],["this.roleservice.findrolebyid(id",{"_index":815,"title":{},"body":{"controllers/RoleController.html":{}}}],["this.roleservice.updaterole(roledto",{"_index":821,"title":{},"body":{"controllers/RoleController.html":{}}}],["this.take",{"_index":542,"title":{},"body":{"classes/PageMetaDto.html":{},"classes/PageOptionsDto.html":{}}}],["this.userrepository.findbyids(userids",{"_index":906,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.userrepository.findone",{"_index":953,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.findbyusernameoremail(usernameoremail",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.validateuser",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{}}}],["those",{"_index":1245,"title":{},"body":{"license.html":{}}}],["throttlerguard",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/PermissionController.html":{},"controllers/RoleController.html":{}}}],["throttlermodule",{"_index":401,"title":{},"body":{"modules/HealthModule.html":{}}}],["throttlermodule.forroot",{"_index":402,"title":{},"body":{"modules/HealthModule.html":{}}}],["throw",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PermissionService.html":{},"injectables/RoleService.html":{}}}],["time",{"_index":1360,"title":{},"body":{"license.html":{}}}],["timestamp",{"_index":730,"title":{},"body":{"classes/PermissionTimestamps1655765304532.html":{},"classes/RoleMigration165550928088.html":{}}}],["todo",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{}}}],["token",{"_index":173,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["token.dto",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["token.dto.ts",{"_index":753,"title":{},"body":{"classes/RefreshTokenDto.html":{},"coverage.html":{}}}],["token.dto.ts:5",{"_index":754,"title":{},"body":{"classes/RefreshTokenDto.html":{}}}],["tokendto",{"_index":264,"title":{"classes/TokenDto.html":{}},"body":{"injectables/AuthService.html":{},"classes/TokenDto.html":{},"coverage.html":{}}}],["tokendto(access_token",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["tomodel",{"_index":646,"title":{},"body":{"classes/PermissionDto.html":{},"classes/RoleDto.html":{}}}],["trade",{"_index":1339,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":1300,"title":{},"body":{"license.html":{}}}],["transformer",{"_index":570,"title":{},"body":{"classes/PageOptionsDto.html":{},"dependencies.html":{}}}],["transmitting",{"_index":1210,"title":{},"body":{"license.html":{}}}],["treaty",{"_index":1521,"title":{},"body":{"license.html":{}}}],["true",{"_index":43,"title":{},"body":{"entities/Address.html":{},"classes/AdminUserSeeds1655586994482.html":{},"modules/AppModule.html":{},"classes/AssignRolePermissionsQuery.html":{},"classes/AssignRoleUsersQuery.html":{},"injectables/JwtAuthGuard.html":{},"classes/PageDto.html":{},"entities/Role.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["true})@index",{"_index":926,"title":{},"body":{"entities/User.html":{}}}],["true})@jointable",{"_index":765,"title":{},"body":{"entities/Role.html":{},"entities/User.html":{}}}],["try",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{}}}],["ts",{"_index":1656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ttl",{"_index":403,"title":{},"body":{"modules/HealthModule.html":{}}}],["type",{"_index":22,"title":{},"body":{"entities/Address.html":{},"classes/AdminUserSeeds1655586994482.html":{},"classes/AssignRolePermissionsQuery.html":{},"classes/AssignRoleUsersQuery.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"classes/CreatePermissionPolicyHandler.html":{},"classes/CreateUserDto.html":{},"classes/DeletePermissionPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/ManyToManyUserRoles1655586944086.html":{},"classes/PageDto.html":{},"classes/PageMetaDto.html":{},"interfaces/PageMetaDtoParameters.html":{},"classes/PageOptionsDto.html":{},"entities/Permission.html":{},"controllers/PermissionController.html":{},"classes/PermissionDto.html":{},"classes/PermissionPermissionsSeed1655765422849.html":{},"injectables/PermissionService.html":{},"classes/PermissionTimestamps1655765304532.html":{},"guards/PoliciesGuard.html":{},"classes/ReadPermissionPolicyHandler.html":{},"classes/RefreshTokenDto.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"classes/RoleMigration165550928088.html":{},"classes/RolePermissionsSeed1655595255331.html":{},"classes/RoleSeed1655509280886.html":{},"injectables/RoleService.html":{},"classes/TokenDto.html":{},"classes/UpdatePermissionPolicyHandler.html":{},"entities/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1586,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":747,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["typeorm",{"_index":49,"title":{},"body":{"entities/Address.html":{},"classes/AdminUserSeeds1655586994482.html":{},"classes/ManyToManyUserRoles1655586944086.html":{},"entities/Permission.html":{},"classes/PermissionPermissionsSeed1655765422849.html":{},"injectables/PermissionService.html":{},"classes/PermissionTimestamps1655765304532.html":{},"entities/Role.html":{},"classes/RoleMigration165550928088.html":{},"classes/RolePermissionsSeed1655595255331.html":{},"classes/RoleSeed1655509280886.html":{},"injectables/RoleService.html":{},"entities/User.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["typeormhealthindicator",{"_index":386,"title":{},"body":{"controllers/HealthController.html":{}}}],["typeormmodule",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"modules/PermissionModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature([permission",{"_index":675,"title":{},"body":{"modules/PermissionModule.html":{}}}],["typeormmodule.forfeature([role",{"_index":858,"title":{},"body":{"modules/RoleModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":946,"title":{},"body":{"modules/UserModule.html":{}}}],["typeormmodule.forroot(postgressconfig",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":1623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typescript",{"_index":1058,"title":{},"body":{"index.html":{}}}],["ui",{"_index":1013,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorizedexception('wrong",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":922,"title":{},"body":{"entities/User.html":{}}}],["undefined})@isenum(order)@isoptional",{"_index":558,"title":{},"body":{"classes/PageOptionsDto.html":{}}}],["under",{"_index":1127,"title":{},"body":{"license.html":{}}}],["unenforceable",{"_index":1488,"title":{},"body":{"license.html":{}}}],["union",{"_index":1113,"title":{},"body":{"index.html":{},"license.html":{}}}],["unique",{"_index":594,"title":{},"body":{"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{},"license.html":{}}}],["unique(['action",{"_index":595,"title":{},"body":{"entities/Permission.html":{}}}],["unit",{"_index":1078,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":436,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/PermissionService.html":{},"injectables/RoleService.html":{}}}],["unless",{"_index":1315,"title":{},"body":{"license.html":{}}}],["unlicensed",{"_index":1584,"title":{},"body":{"properties.html":{}}}],["unported",{"_index":1559,"title":{},"body":{"license.html":{}}}],["up",{"_index":64,"title":{},"body":{"classes/AdminUserSeeds1655586994482.html":{},"classes/ManyToManyUserRoles1655586944086.html":{},"classes/PermissionPermissionsSeed1655765422849.html":{},"classes/PermissionTimestamps1655765304532.html":{},"classes/RoleMigration165550928088.html":{},"classes/RolePermissionsSeed1655595255331.html":{},"classes/RoleSeed1655509280886.html":{}}}],["up(queryrunner",{"_index":72,"title":{},"body":{"classes/AdminUserSeeds1655586994482.html":{},"classes/ManyToManyUserRoles1655586944086.html":{},"classes/PermissionPermissionsSeed1655765422849.html":{},"classes/PermissionTimestamps1655765304532.html":{},"classes/RoleMigration165550928088.html":{},"classes/RolePermissionsSeed1655595255331.html":{},"classes/RoleSeed1655509280886.html":{}}}],["update",{"_index":317,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"classes/ManyToManyUserRoles1655586944086.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["updated",{"_index":1501,"title":{},"body":{"license.html":{}}}],["updatedatecolumn",{"_index":34,"title":{},"body":{"entities/Address.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["updatepermission",{"_index":602,"title":{},"body":{"controllers/PermissionController.html":{},"injectables/PermissionService.html":{}}}],["updatepermission(@body",{"_index":642,"title":{},"body":{"controllers/PermissionController.html":{}}}],["updatepermission(permissiondto",{"_index":616,"title":{},"body":{"controllers/PermissionController.html":{},"injectables/PermissionService.html":{}}}],["updatepermissionpolicyhandler",{"_index":357,"title":{"classes/UpdatePermissionPolicyHandler.html":{}},"body":{"classes/CreatePermissionPolicyHandler.html":{},"classes/DeletePermissionPolicyHandler.html":{},"controllers/PermissionController.html":{},"classes/ReadPermissionPolicyHandler.html":{},"classes/UpdatePermissionPolicyHandler.html":{},"coverage.html":{}}}],["updaterole",{"_index":778,"title":{},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{}}}],["updaterole(@body",{"_index":820,"title":{},"body":{"controllers/RoleController.html":{}}}],["updaterole(roledto",{"_index":799,"title":{},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{}}}],["upon",{"_index":1162,"title":{},"body":{"license.html":{}}}],["uptest",{"_index":1077,"title":{},"body":{"index.html":{}}}],["usage",{"_index":1200,"title":{},"body":{"license.html":{}}}],["use",{"_index":1129,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["useclass",{"_index":234,"title":{},"body":{"modules/AuthModule.html":{}}}],["useguards",{"_index":180,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/PermissionController.html":{},"controllers/RoleController.html":{}}}],["useguards(jwtauthguard",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(policiesguard",{"_index":630,"title":{},"body":{"controllers/PermissionController.html":{},"controllers/RoleController.html":{}}}],["useguards(throttlerguard",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/PermissionController.html":{},"controllers/RoleController.html":{}}}],["user",{"_index":10,"title":{"entities/User.html":{}},"body":{"entities/Address.html":{},"classes/AdminUserSeeds1655586994482.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{},"entities/Role.html":{},"modules/RoleModule.html":{},"classes/RoleSeed1655509280886.html":{},"injectables/RoleService.html":{},"entities/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user\"(\"id",{"_index":493,"title":{},"body":{"classes/ManyToManyUserRoles1655586944086.html":{}}}],["user.addresses",{"_index":41,"title":{},"body":{"entities/Address.html":{}}}],["user.dto.ts",{"_index":363,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:11",{"_index":369,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:14",{"_index":370,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:17",{"_index":371,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:21",{"_index":366,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:5",{"_index":372,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:8",{"_index":368,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.entity",{"_index":944,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["user.password",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.roles",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.roles.reduce",{"_index":331,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/CaslPermission.html":{},"interfaces/IPolicyHandler.html":{}}}],["user.service",{"_index":945,"title":{},"body":{"modules/UserModule.html":{}}}],["user/user.entity",{"_index":47,"title":{},"body":{"entities/Address.html":{},"injectables/AuthService.html":{},"entities/Role.html":{}}}],["user/user.module",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["user/user.service",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{}}}],["user_roles_role",{"_index":476,"title":{},"body":{"classes/ManyToManyUserRoles1655586944086.html":{}}}],["userid",{"_index":472,"title":{},"body":{"classes/ManyToManyUserRoles1655586944086.html":{}}}],["userids",{"_index":148,"title":{},"body":{"classes/AssignRoleUsersQuery.html":{},"injectables/RoleService.html":{}}}],["usermodule",{"_index":112,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":97,"title":{},"body":{"classes/AdminUserSeeds1655586994482.html":{},"classes/CreateUserDto.html":{},"entities/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["usernameoremail",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginDto.html":{}}}],["userrepository",{"_index":873,"title":{},"body":{"injectables/RoleService.html":{},"injectables/UserService.html":{}}}],["users",{"_index":757,"title":{},"body":{"entities/Role.html":{},"injectables/RoleService.html":{}}}],["users.dto",{"_index":805,"title":{},"body":{"controllers/RoleController.html":{}}}],["users.dto.ts",{"_index":147,"title":{},"body":{"classes/AssignRoleUsersQuery.html":{},"coverage.html":{}}}],["users.dto.ts:10",{"_index":150,"title":{},"body":{"classes/AssignRoleUsersQuery.html":{}}}],["users.dto.ts:6",{"_index":149,"title":{},"body":{"classes/AssignRoleUsersQuery.html":{}}}],["users.roles",{"_index":767,"title":{},"body":{"entities/Role.html":{}}}],["userservice",{"_index":243,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":1634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["util/bcrypt",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{}}}],["v",{"_index":1119,"title":{},"body":{"license.html":{}}}],["valid",{"_index":1495,"title":{},"body":{"license.html":{}}}],["validate",{"_index":431,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":433,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validateif",{"_index":374,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["validateif((_object",{"_index":375,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["validateuser",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(usernameoremail",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["validator",{"_index":145,"title":{},"body":{"classes/AssignRolePermissionsQuery.html":{},"classes/AssignRoleUsersQuery.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/PageDto.html":{},"classes/PageOptionsDto.html":{},"classes/PermissionDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RoleDto.html":{},"dependencies.html":{}}}],["validity",{"_index":1490,"title":{},"body":{"license.html":{}}}],["value",{"_index":365,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/ManyToManyUserRoles1655586944086.html":{},"classes/PageOptionsDto.html":{},"classes/PermissionTimestamps1655765304532.html":{},"classes/RoleMigration165550928088.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":959,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1588,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":181,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"controllers/PermissionController.html":{},"controllers/RoleController.html":{},"license.html":{},"properties.html":{}}}],["version('1",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PermissionController.html":{},"controllers/RoleController.html":{}}}],["versions",{"_index":1500,"title":{},"body":{"license.html":{}}}],["vested",{"_index":1232,"title":{},"body":{"license.html":{}}}],["visit",{"_index":1088,"title":{},"body":{"index.html":{}}}],["void",{"_index":655,"title":{},"body":{"classes/PermissionDto.html":{},"classes/RoleDto.html":{}}}],["waives",{"_index":1258,"title":{},"body":{"license.html":{}}}],["warranties",{"_index":1304,"title":{},"body":{"license.html":{}}}],["warrants",{"_index":1352,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1365,"title":{},"body":{"license.html":{}}}],["watch",{"_index":1068,"title":{},"body":{"index.html":{}}}],["way",{"_index":1454,"title":{},"body":{"license.html":{}}}],["website",{"_index":1470,"title":{},"body":{"license.html":{}}}],["whether",{"_index":1033,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["whole",{"_index":1492,"title":{},"body":{"license.html":{}}}],["wilful",{"_index":1397,"title":{},"body":{"license.html":{}}}],["willingness",{"_index":1147,"title":{},"body":{"license.html":{}}}],["window",{"_index":1449,"title":{},"body":{"license.html":{}}}],["without",{"_index":1378,"title":{},"body":{"license.html":{}}}],["work",{"_index":1124,"title":{},"body":{"license.html":{}}}],["working",{"_index":1096,"title":{},"body":{"index.html":{}}}],["works",{"_index":1158,"title":{},"body":{"license.html":{}}}],["worldwide",{"_index":1225,"title":{},"body":{"license.html":{}}}],["written",{"_index":1057,"title":{},"body":{"index.html":{}}}],["wrong",{"_index":162,"title":{},"body":{"controllers/AuthController.html":{}}}],["zipcode",{"_index":21,"title":{},"body":{"entities/Address.html":{}}}],["zoom",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PermissionModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"entities/Address.html":{"url":"entities/Address.html","title":"entity - Address","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Address\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/address/address.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                Address model, which is bound to the user and stored inside the database\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                city\n                            \n                            \n                                country\n                            \n                            \n                                dateCreated\n                            \n                            \n                                dateUpdated\n                            \n                            \n                                id\n                            \n                            \n                                user\n                            \n                            \n                                zipCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/address/address.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/address/address.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/address/address.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/address/address.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateUpdated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/address/address.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/address/address.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Promise\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.addresses, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/address/address.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        zipCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/address/address.entity.ts:26\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { User } from '../user/user.entity';\nimport {\n  Column,\n  CreateDateColumn,\n  Entity,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n\n/**\n * Address model, which is bound to the user and stored inside the database\n */\n@Entity()\nexport class Address {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  city: string;\n\n  @Column()\n  country: string;\n\n  @Column()\n  zipCode: string;\n\n  @Column()\n  address: string;\n\n  @ManyToOne(() => User, (user) => user.addresses, { nullable: true })\n  user: Promise;\n\n  @CreateDateColumn()\n  dateCreated: Date;\n\n  @UpdateDateColumn()\n  dateUpdated: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AdminUserSeeds1655586994482.html":{"url":"classes/AdminUserSeeds1655586994482.html","title":"class - AdminUserSeeds1655586994482","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AdminUserSeeds1655586994482\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/seed/1655586994482-AdminUserSeeds.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/seed/1655586994482-AdminUserSeeds.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/seed/1655586994482-AdminUserSeeds.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Role } from 'src/role/role.entity';\nimport { User } from 'src/user/user.entity';\nimport { encodePassword } from 'src/util/bcrypt';\nimport { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AdminUserSeeds1655586994482 implements MigrationInterface {\n  public async up(queryRunner: QueryRunner): Promise {\n    const adminRole = await queryRunner.manager.findOne(Role, {\n      where: { name: 'admin' },\n    });\n\n    const adminUser = await queryRunner.manager.save(\n      queryRunner.manager.create(User, {\n        firstName: 'Dejan',\n        lastName: 'Radmanovic',\n        email: 'office@decodex.net',\n        isAccountActivated: true,\n        isEmailVerified: true,\n        dateCreated: Date(),\n        dateUpdated: Date(),\n        dateOfBirth: null,\n        username: 'admin',\n        password: encodePassword('admin'),\n        roles: [adminRole],\n      }),\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query('TRUNCATE user');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nPermissionModule\n\nPermissionModule\n\nAppModule -->\n\nPermissionModule->AppModule\n\n\n\n\n\nRoleModule\n\nRoleModule\n\nAppModule -->\n\nRoleModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            HealthModule\n                        \n                        \n                            PermissionModule\n                        \n                        \n                            RoleModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AuthModule } from './auth/auth.module';\nimport postgressConfig from './config/postgres.config';\nimport { HealthModule } from './health/health.module';\nimport { UserModule } from './user/user.module';\nimport { RoleModule } from './role/role.module';\nimport { PermissionModule } from './permission/permission.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n    }),\n    TypeOrmModule.forRoot(postgressConfig),\n    HealthModule,\n    UserModule,\n    AuthModule,\n    RoleModule,\n    PermissionModule,\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AssignRolePermissionsQuery.html":{"url":"classes/AssignRolePermissionsQuery.html","title":"class - AssignRolePermissionsQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AssignRolePermissionsQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/role/asign-role-permissions.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                permissionIds\n                            \n                            \n                                roleId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        permissionIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber({}, {each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/role/asign-role-permissions.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roleId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/role/asign-role-permissions.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber } from 'class-validator';\n\nexport class AssignRolePermissionsQuery {\n  @IsNumber()\n  @IsNotEmpty()\n  roleId: number;\n\n  @IsNotEmpty()\n  @IsNumber({}, { each: true })\n  permissionIds: number[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AssignRoleUsersQuery.html":{"url":"classes/AssignRoleUsersQuery.html","title":"class - AssignRoleUsersQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AssignRoleUsersQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/role/asign-role-users.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                roleId\n                            \n                            \n                                userIds\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        roleId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/role/asign-role-users.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber({}, {each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/role/asign-role-users.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber } from 'class-validator';\n\nexport class AssignRoleUsersQuery {\n  @IsNumber()\n  @IsNotEmpty()\n  roleId: number;\n\n  @IsNotEmpty()\n  @IsNumber({}, { each: true })\n  userIds: number[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                me\n                            \n                            \n                                refreshToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(loginDto: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')@Version('1')@ApiUnauthorizedResponse({description: 'Wrong Credentials'})\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        me\n                        \n                    \n                \n            \n            \n                \nme(request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('me')@Version('1')@ApiBearerAuth()@UseGuards(JwtAuthGuard)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshToken\n                        \n                    \n                \n            \n            \n                \nrefreshToken(refreshTokenDto: RefreshTokenDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('refreshToken')@Version('1')@ApiForbiddenResponse({description: 'Refresh Token is Invalid'})\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    refreshTokenDto\n                                    \n                                                RefreshTokenDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Inject,\n  Post,\n  Headers,\n  UseGuards,\n  Version,\n  Request,\n} from '@nestjs/common';\nimport {\n  ApiBearerAuth,\n  ApiForbiddenResponse,\n  ApiTags,\n  ApiUnauthorizedResponse,\n} from '@nestjs/swagger';\nimport { ThrottlerGuard } from '@nestjs/throttler';\nimport { AuthService } from './auth.service';\nimport { JwtAuthGuard } from './jwt-auth.guard';\nimport { LoginDto } from './login.dto';\nimport { Public } from './public.factory';\nimport { RefreshTokenDto } from './refresh-token.dto';\n\n@Controller('auth')\n@UseGuards(ThrottlerGuard)\n@ApiTags('auth')\n@Public()\nexport class AuthController {\n  @Inject()\n  private readonly authService: AuthService;\n\n  @Post('login')\n  @Version('1')\n  @ApiUnauthorizedResponse({ description: 'Wrong Credentials' })\n  login(@Body() loginDto: LoginDto) {\n    return this.authService.login(loginDto);\n  }\n\n  @Post('refreshToken')\n  @Version('1')\n  @ApiForbiddenResponse({ description: 'Refresh Token is Invalid' })\n  refreshToken(@Body() refreshTokenDto: RefreshTokenDto) {\n    return this.authService.refreshToken(refreshTokenDto);\n  }\n\n  @Get('me')\n  @Version('1')\n  @ApiBearerAuth()\n  @UseGuards(JwtAuthGuard)\n  me(@Request() request) {\n    return this.authService.getCurrentUser(request.headers.authorization);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_exports\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nCaslAbilityFactory \n\nCaslAbilityFactory \n\nCaslAbilityFactory  -->\n\nAuthModule->CaslAbilityFactory \n\n\n\n\n\nPoliciesGuard \n\nPoliciesGuard \n\nPoliciesGuard  -->\n\nAuthModule->PoliciesGuard \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nCaslAbilityFactory\n\nCaslAbilityFactory\n\nAuthModule -->\n\nCaslAbilityFactory->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            CaslAbilityFactory\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                        \n                            CaslAbilityFactory\n                        \n                        \n                            PoliciesGuard\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { UserModule } from '../user/user.module';\nimport { AuthService } from './auth.service';\nimport { CaslAbilityFactory } from './casl-ability.factory';\nimport { JwtAuthGuard } from './jwt-auth.guard';\nimport { JwtStrategy } from './jwt.strategy';\nimport { PoliciesGuard } from './policies.guard';\nimport { AuthController } from './auth.controller';\nimport { APP_GUARD } from '@nestjs/core';\n\n@Module({\n  imports: [UserModule],\n  providers: [\n    AuthService,\n    JwtService,\n    JwtStrategy,\n    CaslAbilityFactory,\n    {\n      provide: APP_GUARD,\n      useClass: JwtAuthGuard,\n    },\n    PoliciesGuard,\n  ],\n  exports: [AuthService, CaslAbilityFactory, PoliciesGuard],\n  controllers: [AuthController],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                generateNewToken\n                            \n                            \n                                    Async\n                                getCurrentUser\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                refreshToken\n                            \n                            \n                                    Private\n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        generateNewToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateNewToken(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCurrentUser(authHeader: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authHeader\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginDto: LoginDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        refreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    refreshToken(dto: RefreshTokenDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                RefreshTokenDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(usernameOrEmail: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    usernameOrEmail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ForbiddenException,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport enviroment from '../../env';\nimport { User } from '../user/user.entity';\nimport { UserService } from '../user/user.service';\nimport { comparePasswords } from '../util/bcrypt';\nimport { LoginDto } from './login.dto';\nimport { RefreshTokenDto } from './refresh-token.dto';\nimport { TokenDto } from './token.dto';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly userService: UserService,\n    private readonly jwtService: JwtService,\n  ) {}\n\n  private async validateUser(\n    usernameOrEmail: string,\n    password: string,\n  ): Promise {\n    const user = await this.userService.findByUsernameOrEmail(usernameOrEmail);\n    await user.roles;\n    if (user && comparePasswords(password, user.password)) {\n      return user;\n    } else {\n      return null;\n    }\n  }\n\n  //TODO: Save refresh token in fast memory\n  private generateNewToken(user: User) {\n    const access_token = this.jwtService.sign(\n      { user },\n      {\n        issuer: enviroment.APP_URL,\n        secret: enviroment.ACCESS_TOKEN_SECRET,\n        expiresIn: enviroment.ACCESS_TOKEN_EXPIRATION_TIME,\n      },\n    );\n    const refresh_token = this.jwtService.sign(\n      { user },\n      {\n        issuer: enviroment.APP_URL,\n        secret: enviroment.REFRESH_TOKEN_SECRET,\n        expiresIn: enviroment.REFRESH_TOKEN_EXPIRATION_TIME,\n      },\n    );\n    return new TokenDto(access_token, refresh_token);\n  }\n\n  async login(loginDto: LoginDto): Promise {\n    const user = await this.validateUser(\n      loginDto.usernameOrEmail,\n      loginDto.password,\n    );\n\n    if (user) {\n      return this.generateNewToken(user);\n    } else {\n      throw new UnauthorizedException('Wrong Credentials');\n    }\n  }\n\n  async refreshToken(dto: RefreshTokenDto): Promise {\n    let result = null;\n    try {\n      result = this.jwtService.verify(dto.refresh_token, {\n        issuer: enviroment.APP_URL,\n        secret: enviroment.REFRESH_TOKEN_SECRET,\n        ignoreExpiration: false,\n      });\n    } catch {}\n    if (result) {\n      return this.generateNewToken(result.user);\n    } else {\n      throw new ForbiddenException('Invalid Refresh Token');\n    }\n  }\n\n  async getCurrentUser(authHeader: string): Promise {\n    const token = authHeader.replace('Bearer ', '');\n    let result = null;\n    try {\n      result = this.jwtService.verify(token, {\n        issuer: enviroment.APP_URL,\n        secret: enviroment.ACCESS_TOKEN_SECRET,\n        ignoreExpiration: false,\n      });\n    } catch {}\n    if (result) {\n      return result.user;\n    } else {\n      throw new ForbiddenException('Invalid JWT Token');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CaslAbilityFactory.html":{"url":"injectables/CaslAbilityFactory.html","title":"injectable - CaslAbilityFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CaslAbilityFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/casl-ability.factory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createForUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createForUser(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/casl-ability.factory.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Ability } from '@casl/ability';\nimport { Injectable, SetMetadata } from '@nestjs/common';\nimport { Permission } from 'src/permission/permission.entity';\nimport { User } from 'src/user/user.entity';\n\nexport enum PermissionAction {\n  CREATE = 'create',\n  READ = 'read',\n  UPDATE = 'update',\n  DELETE = 'delete',\n  MANAGE = 'manage',\n}\n\nexport type PermissionObjectType = any;\nexport type AppAbility = Ability;\ninterface CaslPermission {\n  action: PermissionAction;\n  // In our database, Invoice, Project... are called \"object\"\n  // but in CASL they are called \"subject\"\n  subject: string;\n}\n@Injectable()\nexport class CaslAbilityFactory {\n  async createForUser(user: User): Promise {\n    const dbPermissions: Permission[] = user.roles.reduce(\n      (acc, it) => [...acc, ...it.permissions],\n      [],\n    );\n    const caslPermissions: CaslPermission[] = dbPermissions.map((p) => ({\n      action: p.action,\n      subject: p.resource,\n    }));\n    return new Ability(\n      caslPermissions,\n    );\n  }\n}\n\nexport interface IPolicyHandler {\n  handle(ability: AppAbility): boolean;\n}\n\ntype PolicyHandlerCallback = (ability: AppAbility) => boolean;\n\nexport type PolicyHandler = IPolicyHandler | PolicyHandlerCallback;\n\nexport const CHECK_POLICIES_KEY = 'check_policy';\nexport const CheckPolicies = (...handlers: PolicyHandler[]) =>\n  SetMetadata(CHECK_POLICIES_KEY, handlers);\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CaslPermission.html":{"url":"interfaces/CaslPermission.html","title":"interface - CaslPermission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CaslPermission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/casl-ability.factory.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            action\n                                        \n                                \n                                \n                                        \n                                            subject\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        action:         PermissionAction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PermissionAction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subject:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Ability } from '@casl/ability';\nimport { Injectable, SetMetadata } from '@nestjs/common';\nimport { Permission } from 'src/permission/permission.entity';\nimport { User } from 'src/user/user.entity';\n\nexport enum PermissionAction {\n  CREATE = 'create',\n  READ = 'read',\n  UPDATE = 'update',\n  DELETE = 'delete',\n  MANAGE = 'manage',\n}\n\nexport type PermissionObjectType = any;\nexport type AppAbility = Ability;\ninterface CaslPermission {\n  action: PermissionAction;\n  // In our database, Invoice, Project... are called \"object\"\n  // but in CASL they are called \"subject\"\n  subject: string;\n}\n@Injectable()\nexport class CaslAbilityFactory {\n  async createForUser(user: User): Promise {\n    const dbPermissions: Permission[] = user.roles.reduce(\n      (acc, it) => [...acc, ...it.permissions],\n      [],\n    );\n    const caslPermissions: CaslPermission[] = dbPermissions.map((p) => ({\n      action: p.action,\n      subject: p.resource,\n    }));\n    return new Ability(\n      caslPermissions,\n    );\n  }\n}\n\nexport interface IPolicyHandler {\n  handle(ability: AppAbility): boolean;\n}\n\ntype PolicyHandlerCallback = (ability: AppAbility) => boolean;\n\nexport type PolicyHandler = IPolicyHandler | PolicyHandlerCallback;\n\nexport const CHECK_POLICIES_KEY = 'check_policy';\nexport const CheckPolicies = (...handlers: PolicyHandler[]) =>\n  SetMetadata(CHECK_POLICIES_KEY, handlers);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePermissionPolicyHandler.html":{"url":"classes/CreatePermissionPolicyHandler.html","title":"class - CreatePermissionPolicyHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePermissionPolicyHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/policies/permission.policies.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IPolicyHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(ability: AppAbility)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/policies/permission.policies.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ability\n                                    \n                                                AppAbility\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Permission } from '../../permission/permission.entity';\nimport {\n  AppAbility,\n  IPolicyHandler,\n  PermissionAction,\n} from '../casl-ability.factory';\n\nexport class ReadPermissionPolicyHandler implements IPolicyHandler {\n  handle(ability: AppAbility) {\n    return ability.can(PermissionAction.READ, Permission);\n  }\n}\n\nexport class CreatePermissionPolicyHandler implements IPolicyHandler {\n  handle(ability: AppAbility) {\n    return ability.can(PermissionAction.CREATE, Permission);\n  }\n}\n\nexport class UpdatePermissionPolicyHandler implements IPolicyHandler {\n  handle(ability: AppAbility) {\n    return ability.can(PermissionAction.UPDATE, Permission);\n  }\n}\n\nexport class DeletePermissionPolicyHandler implements IPolicyHandler {\n  handle(ability: AppAbility) {\n    return ability.can(PermissionAction.DELETE, Permission);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dateOfBirth\n                            \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dateOfBirth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@ValidateIf((_object, value) => )\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/create-user.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/create-user.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/create-user.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/create-user.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/create-user.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/create-user.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsDate, IsEmail, IsNotEmpty, ValidateIf } from 'class-validator';\n\nexport class CreateUserDto {\n  @IsNotEmpty()\n  username: string;\n\n  @IsEmail()\n  email: string;\n\n  @IsNotEmpty()\n  firstName: string;\n\n  @IsNotEmpty()\n  lastName: string;\n\n  @IsNotEmpty()\n  password: string;\n\n  @IsDate()\n  @ValidateIf((_object, value) => value !== null)\n  dateOfBirth: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeletePermissionPolicyHandler.html":{"url":"classes/DeletePermissionPolicyHandler.html","title":"class - DeletePermissionPolicyHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeletePermissionPolicyHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/policies/permission.policies.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IPolicyHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(ability: AppAbility)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/policies/permission.policies.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ability\n                                    \n                                                AppAbility\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Permission } from '../../permission/permission.entity';\nimport {\n  AppAbility,\n  IPolicyHandler,\n  PermissionAction,\n} from '../casl-ability.factory';\n\nexport class ReadPermissionPolicyHandler implements IPolicyHandler {\n  handle(ability: AppAbility) {\n    return ability.can(PermissionAction.READ, Permission);\n  }\n}\n\nexport class CreatePermissionPolicyHandler implements IPolicyHandler {\n  handle(ability: AppAbility) {\n    return ability.can(PermissionAction.CREATE, Permission);\n  }\n}\n\nexport class UpdatePermissionPolicyHandler implements IPolicyHandler {\n  handle(ability: AppAbility) {\n    return ability.can(PermissionAction.UPDATE, Permission);\n  }\n}\n\nexport class DeletePermissionPolicyHandler implements IPolicyHandler {\n  handle(ability: AppAbility) {\n    return ability.can(PermissionAction.DELETE, Permission);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        check\n                        \n                    \n                \n            \n            \n                \ncheck()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HealthCheck()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, UseGuards, Version } from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport {\n  HealthCheck,\n  HealthCheckService,\n  HttpHealthIndicator,\n  TypeOrmHealthIndicator\n} from '@nestjs/terminus';\nimport { ThrottlerGuard } from '@nestjs/throttler';\nimport enviroment from 'env';\nimport { Public } from 'src/auth/public.factory';\n\n@Public()\n@Controller('health')\n@ApiTags('health')\n@UseGuards(ThrottlerGuard)\nexport class HealthController {\n  constructor(\n    private health: HealthCheckService,\n    private http: HttpHealthIndicator,\n    private db: TypeOrmHealthIndicator,\n  ) {}\n\n  @Get()\n  @HealthCheck()\n  check() {\n    return this.health.check([\n      () => this.http.pingCheck('Basic Check', enviroment.APP_URL),\n      () => this.db.pingCheck('postgres'),\n    ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TerminusModule } from '@nestjs/terminus';\nimport { HealthController } from './health.controller';\nimport { HttpModule } from '@nestjs/axios';\nimport { ThrottlerModule } from '@nestjs/throttler';\n\n@Module({\n  imports: [\n    TerminusModule,\n    HttpModule,\n    ThrottlerModule.forRoot({ ttl: 60, limit: 10 }),\n  ],\n  controllers: [HealthController],\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPolicyHandler.html":{"url":"interfaces/IPolicyHandler.html","title":"interface - IPolicyHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPolicyHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/casl-ability.factory.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        handle\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(ability: AppAbility)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/casl-ability.factory.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ability\n                                    \n                                                AppAbility\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Ability } from '@casl/ability';\nimport { Injectable, SetMetadata } from '@nestjs/common';\nimport { Permission } from 'src/permission/permission.entity';\nimport { User } from 'src/user/user.entity';\n\nexport enum PermissionAction {\n  CREATE = 'create',\n  READ = 'read',\n  UPDATE = 'update',\n  DELETE = 'delete',\n  MANAGE = 'manage',\n}\n\nexport type PermissionObjectType = any;\nexport type AppAbility = Ability;\ninterface CaslPermission {\n  action: PermissionAction;\n  // In our database, Invoice, Project... are called \"object\"\n  // but in CASL they are called \"subject\"\n  subject: string;\n}\n@Injectable()\nexport class CaslAbilityFactory {\n  async createForUser(user: User): Promise {\n    const dbPermissions: Permission[] = user.roles.reduce(\n      (acc, it) => [...acc, ...it.permissions],\n      [],\n    );\n    const caslPermissions: CaslPermission[] = dbPermissions.map((p) => ({\n      action: p.action,\n      subject: p.resource,\n    }));\n    return new Ability(\n      caslPermissions,\n    );\n  }\n}\n\nexport interface IPolicyHandler {\n  handle(ability: AppAbility): boolean;\n}\n\ntype PolicyHandlerCallback = (ability: AppAbility) => boolean;\n\nexport type PolicyHandler = IPolicyHandler | PolicyHandlerCallback;\n\nexport const CHECK_POLICIES_KEY = 'check_policy';\nexport const CheckPolicies = (...handlers: PolicyHandler[]) =>\n  SetMetadata(CHECK_POLICIES_KEY, handlers);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt-auth.guard.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt-auth.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt-auth.guard.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { AuthGuard } from '@nestjs/passport';\nimport { IS_PUBLIC_KEY } from './public.factory';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  constructor(private reflector: Reflector) {\n    super();\n  }\n\n  canActivate(context: ExecutionContext) {\n    const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n    if (isPublic) {\n      return true;\n    }\n    return super.canActivate(context);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport enviroment from '../../env';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: enviroment.ACCESS_TOKEN_SECRET,\n      issuer: enviroment.APP_URL,\n    });\n  }\n\n  async validate(payload: any) {\n    return payload.user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                usernameOrEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/login.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usernameOrEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/login.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\n\nexport class LoginDto {\n  @IsNotEmpty()\n  usernameOrEmail: string;\n\n  @IsNotEmpty()\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ManyToManyUserRoles1655586944086.html":{"url":"classes/ManyToManyUserRoles1655586944086.html","title":"class - ManyToManyUserRoles1655586944086","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ManyToManyUserRoles1655586944086\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1655586944086-ManyToManyUserRoles.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ManyToManyUserRoles1655586944086'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1655586944086-ManyToManyUserRoles.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1655586944086-ManyToManyUserRoles.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1655586944086-ManyToManyUserRoles.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class ManyToManyUserRoles1655586944086 implements MigrationInterface {\n  name = 'ManyToManyUserRoles1655586944086';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `CREATE TABLE \"permission_roles_role\" (\"permissionId\" integer NOT NULL, \"roleId\" integer NOT NULL, CONSTRAINT \"PK_534958b0063b8ad39335d7bcfd0\" PRIMARY KEY (\"permissionId\", \"roleId\"))`,\n    );\n    await queryRunner.query(\n      `CREATE INDEX \"IDX_9f44b6228b173c7b9dfb8c6600\" ON \"permission_roles_role\" (\"permissionId\") `,\n    );\n    await queryRunner.query(\n      `CREATE INDEX \"IDX_7ec93d4fbf75b063f3ffd2646a\" ON \"permission_roles_role\" (\"roleId\") `,\n    );\n    await queryRunner.query(\n      `CREATE TABLE \"role_permissions_permission\" (\"roleId\" integer NOT NULL, \"permissionId\" integer NOT NULL, CONSTRAINT \"PK_b817d7eca3b85f22130861259dd\" PRIMARY KEY (\"roleId\", \"permissionId\"))`,\n    );\n    await queryRunner.query(\n      `CREATE INDEX \"IDX_b36cb2e04bc353ca4ede00d87b\" ON \"role_permissions_permission\" (\"roleId\") `,\n    );\n    await queryRunner.query(\n      `CREATE INDEX \"IDX_bfbc9e263d4cea6d7a8c9eb3ad\" ON \"role_permissions_permission\" (\"permissionId\") `,\n    );\n    await queryRunner.query(\n      `CREATE TABLE \"role_users_user\" (\"roleId\" integer NOT NULL, \"userId\" integer NOT NULL, CONSTRAINT \"PK_46403d6ce64cde119287c876ca3\" PRIMARY KEY (\"roleId\", \"userId\"))`,\n    );\n    await queryRunner.query(\n      `CREATE INDEX \"IDX_ed6edac7184b013d4bd58d60e5\" ON \"role_users_user\" (\"roleId\") `,\n    );\n    await queryRunner.query(\n      `CREATE INDEX \"IDX_a88fcb405b56bf2e2646e9d479\" ON \"role_users_user\" (\"userId\") `,\n    );\n    await queryRunner.query(\n      `CREATE TABLE \"user_roles_role\" (\"userId\" integer NOT NULL, \"roleId\" integer NOT NULL, CONSTRAINT \"PK_b47cd6c84ee205ac5a713718292\" PRIMARY KEY (\"userId\", \"roleId\"))`,\n    );\n    await queryRunner.query(\n      `CREATE INDEX \"IDX_5f9286e6c25594c6b88c108db7\" ON \"user_roles_role\" (\"userId\") `,\n    );\n    await queryRunner.query(\n      `CREATE INDEX \"IDX_4be2f7adf862634f5f803d246b\" ON \"user_roles_role\" (\"roleId\") `,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"permission_roles_role\" ADD CONSTRAINT \"FK_9f44b6228b173c7b9dfb8c66003\" FOREIGN KEY (\"permissionId\") REFERENCES \"permission\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"permission_roles_role\" ADD CONSTRAINT \"FK_7ec93d4fbf75b063f3ffd2646a5\" FOREIGN KEY (\"roleId\") REFERENCES \"role\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"role_permissions_permission\" ADD CONSTRAINT \"FK_b36cb2e04bc353ca4ede00d87b9\" FOREIGN KEY (\"roleId\") REFERENCES \"role\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"role_permissions_permission\" ADD CONSTRAINT \"FK_bfbc9e263d4cea6d7a8c9eb3ad2\" FOREIGN KEY (\"permissionId\") REFERENCES \"permission\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"role_users_user\" ADD CONSTRAINT \"FK_ed6edac7184b013d4bd58d60e54\" FOREIGN KEY (\"roleId\") REFERENCES \"role\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"role_users_user\" ADD CONSTRAINT \"FK_a88fcb405b56bf2e2646e9d4797\" FOREIGN KEY (\"userId\") REFERENCES \"user\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"user_roles_role\" ADD CONSTRAINT \"FK_5f9286e6c25594c6b88c108db77\" FOREIGN KEY (\"userId\") REFERENCES \"user\"(\"id\") ON DELETE CASCADE ON UPDATE CASCADE`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"user_roles_role\" ADD CONSTRAINT \"FK_4be2f7adf862634f5f803d246b8\" FOREIGN KEY (\"roleId\") REFERENCES \"role\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `ALTER TABLE \"user_roles_role\" DROP CONSTRAINT \"FK_4be2f7adf862634f5f803d246b8\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"user_roles_role\" DROP CONSTRAINT \"FK_5f9286e6c25594c6b88c108db77\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"role_users_user\" DROP CONSTRAINT \"FK_a88fcb405b56bf2e2646e9d4797\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"role_users_user\" DROP CONSTRAINT \"FK_ed6edac7184b013d4bd58d60e54\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"role_permissions_permission\" DROP CONSTRAINT \"FK_bfbc9e263d4cea6d7a8c9eb3ad2\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"role_permissions_permission\" DROP CONSTRAINT \"FK_b36cb2e04bc353ca4ede00d87b9\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"permission_roles_role\" DROP CONSTRAINT \"FK_7ec93d4fbf75b063f3ffd2646a5\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"permission_roles_role\" DROP CONSTRAINT \"FK_9f44b6228b173c7b9dfb8c66003\"`,\n    );\n    await queryRunner.query(\n      `DROP INDEX \"public\".\"IDX_4be2f7adf862634f5f803d246b\"`,\n    );\n    await queryRunner.query(\n      `DROP INDEX \"public\".\"IDX_5f9286e6c25594c6b88c108db7\"`,\n    );\n    await queryRunner.query(`DROP TABLE \"user_roles_role\"`);\n    await queryRunner.query(\n      `DROP INDEX \"public\".\"IDX_a88fcb405b56bf2e2646e9d479\"`,\n    );\n    await queryRunner.query(\n      `DROP INDEX \"public\".\"IDX_ed6edac7184b013d4bd58d60e5\"`,\n    );\n    await queryRunner.query(`DROP TABLE \"role_users_user\"`);\n    await queryRunner.query(\n      `DROP INDEX \"public\".\"IDX_bfbc9e263d4cea6d7a8c9eb3ad\"`,\n    );\n    await queryRunner.query(\n      `DROP INDEX \"public\".\"IDX_b36cb2e04bc353ca4ede00d87b\"`,\n    );\n    await queryRunner.query(`DROP TABLE \"role_permissions_permission\"`);\n    await queryRunner.query(\n      `DROP INDEX \"public\".\"IDX_7ec93d4fbf75b063f3ffd2646a\"`,\n    );\n    await queryRunner.query(\n      `DROP INDEX \"public\".\"IDX_9f44b6228b173c7b9dfb8c6600\"`,\n    );\n    await queryRunner.query(`DROP TABLE \"permission_roles_role\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageDto.html":{"url":"classes/PageDto.html","title":"class - PageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pagination/page.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                data\n                            \n                            \n                                    Readonly\n                                meta\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: T[], meta: PageMetaDto)\n                    \n                \n                        \n                            \n                                Defined in src/pagination/page.dto.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    T[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        meta\n                                                  \n                                                        \n                                                                        PageMetaDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@ApiProperty({isArray: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pagination/page.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        meta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PageMetaDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => PageMetaDto})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pagination/page.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsArray } from 'class-validator';\nimport { PageMetaDto } from './page-meta.dto';\n\nexport class PageDto {\n  @IsArray()\n  @ApiProperty({ isArray: true })\n  readonly data: T[];\n\n  @ApiProperty({ type: () => PageMetaDto })\n  readonly meta: PageMetaDto;\n\n  constructor(data: T[], meta: PageMetaDto) {\n    this.data = data;\n    this.meta = meta;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageMetaDto.html":{"url":"classes/PageMetaDto.html","title":"class - PageMetaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageMetaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pagination/page-meta.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                hasNextPage\n                            \n                            \n                                    Readonly\n                                hasPreviousPage\n                            \n                            \n                                    Readonly\n                                itemCount\n                            \n                            \n                                    Readonly\n                                page\n                            \n                            \n                                    Readonly\n                                pageCount\n                            \n                            \n                                    Readonly\n                                take\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: PageMetaDtoParameters)\n                    \n                \n                        \n                            \n                                Defined in src/pagination/page-meta.dto.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        PageMetaDtoParameters\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        hasNextPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pagination/page-meta.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        hasPreviousPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pagination/page-meta.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        itemCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pagination/page-meta.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pagination/page-meta.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        pageCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pagination/page-meta.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        take\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pagination/page-meta.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { PageMetaDtoParameters } from './page-meta-dto-parameters.interface';\n\nexport class PageMetaDto {\n  @ApiProperty()\n  readonly page: number;\n\n  @ApiProperty()\n  readonly take: number;\n\n  @ApiProperty()\n  readonly itemCount: number;\n\n  @ApiProperty()\n  readonly pageCount: number;\n\n  @ApiProperty()\n  readonly hasPreviousPage: boolean;\n\n  @ApiProperty()\n  readonly hasNextPage: boolean;\n\n  constructor({ pageOptionsDto, itemCount }: PageMetaDtoParameters) {\n    this.page = pageOptionsDto.page;\n    this.take = pageOptionsDto.take;\n    this.itemCount = itemCount;\n    this.pageCount = Math.ceil(this.itemCount / this.take);\n    this.hasPreviousPage = this.page > 1;\n    this.hasNextPage = this.page \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PageMetaDtoParameters.html":{"url":"interfaces/PageMetaDtoParameters.html","title":"interface - PageMetaDtoParameters","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PageMetaDtoParameters\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pagination/page-meta-dto-parameters.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            itemCount\n                                        \n                                \n                                \n                                        \n                                            pageOptionsDto\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        itemCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        itemCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageOptionsDto\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pageOptionsDto:         PageOptionsDto\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PageOptionsDto\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PageOptionsDto } from './page-options.dto';\n\nexport interface PageMetaDtoParameters {\n  pageOptionsDto: PageOptionsDto;\n  itemCount: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PageOptionsDto.html":{"url":"classes/PageOptionsDto.html","title":"class - PageOptionsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PageOptionsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pagination/page-options.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                order\n                            \n                            \n                                    Readonly\n                                    Optional\n                                page\n                            \n                            \n                                    Readonly\n                                    Optional\n                                take\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    skip\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        order\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Order\n\n                    \n                \n                \n                    \n                        Default value : Order.ASC\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: Order, default: undefined})@IsEnum(Order)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pagination/page-options.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({minimum: 1, default: 1})@Type(undefined)@IsInt()@Min(1)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pagination/page-options.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        take\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({minimum: 1, maximum: 100, default: 10})@Type(undefined)@IsInt()@Min(1)@Max(100)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pagination/page-options.dto.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        skip\n                    \n                \n\n                \n                    \n                        getskip()\n                    \n                \n                            \n                                \n                                    Defined in src/pagination/page-options.dto.ts:34\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsEnum, IsInt, IsOptional, Max, Min } from 'class-validator';\nimport { Order } from './page-order.model';\n\nexport class PageOptionsDto {\n  @ApiPropertyOptional({ enum: Order, default: Order.ASC })\n  @IsEnum(Order)\n  @IsOptional()\n  readonly order?: Order = Order.ASC;\n\n  @ApiPropertyOptional({\n    minimum: 1,\n    default: 1,\n  })\n  @Type(() => Number)\n  @IsInt()\n  @Min(1)\n  @IsOptional()\n  readonly page?: number = 1;\n\n  @ApiPropertyOptional({\n    minimum: 1,\n    maximum: 100,\n    default: 10,\n  })\n  @Type(() => Number)\n  @IsInt()\n  @Min(1)\n  @Max(100)\n  @IsOptional()\n  readonly take?: number = 10;\n\n  get skip(): number {\n    return (this.page - 1) * this.take;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Permission.html":{"url":"entities/Permission.html","title":"entity - Permission","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Permission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permission/permission.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                dateCreated\n                            \n                            \n                                dateUpdated\n                            \n                            \n                                id\n                            \n                            \n                                resource\n                            \n                            \n                                roles\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PermissionAction\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permission/permission.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permission/permission.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateUpdated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permission/permission.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permission/permission.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resource\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permission/permission.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, roles => roles.permissions)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permission/permission.entity.ts:26\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { PermissionAction } from '../auth/casl-ability.factory';\nimport { Role } from '../role/role.entity';\nimport {\n  Column,\n  CreateDateColumn,\n  Entity,\n  ManyToMany,\n  PrimaryGeneratedColumn,\n  Unique,\n  UpdateDateColumn,\n} from 'typeorm';\n\n@Entity()\n@Unique(['action', 'resource'])\nexport class Permission {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  action: PermissionAction;\n\n  @Column()\n  resource: string;\n\n  @ManyToMany(() => Role, (roles) => roles.permissions)\n  roles: Role[];\n\n  @CreateDateColumn()\n  dateCreated: Date;\n\n  @UpdateDateColumn()\n  dateUpdated: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PermissionController.html":{"url":"controllers/PermissionController.html","title":"controller - PermissionController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PermissionController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permission/permission.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                permission\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createPermission\n                            \n                            \n                                deletePermission\n                            \n                            \n                                findAllPermissions\n                            \n                            \n                                findPermissionById\n                            \n                            \n                                updatePermission\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createPermission\n                        \n                    \n                \n            \n            \n                \ncreatePermission(permissionDto: PermissionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@Version('1')@CheckPolicies(new CreatePermissionPolicyHandler())\n                \n            \n\n            \n                \n                    Defined in src/permission/permission.controller.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    permissionDto\n                                    \n                                                PermissionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletePermission\n                        \n                    \n                \n            \n            \n                \ndeletePermission(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@Version('1')@CheckPolicies(new DeletePermissionPolicyHandler())\n                \n            \n\n            \n                \n                    Defined in src/permission/permission.controller.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAllPermissions\n                        \n                    \n                \n            \n            \n                \nfindAllPermissions(pageOptionsDto: PageOptionsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Version('1')@CheckPolicies(new ReadPermissionPolicyHandler())\n                \n            \n\n            \n                \n                    Defined in src/permission/permission.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                PageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findPermissionById\n                        \n                    \n                \n            \n            \n                \nfindPermissionById(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@Version('1')@CheckPolicies(new ReadPermissionPolicyHandler())\n                \n            \n\n            \n                \n                    Defined in src/permission/permission.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePermission\n                        \n                    \n                \n            \n            \n                \nupdatePermission(permissionDto: PermissionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put()@Version('1')@CheckPolicies(new UpdatePermissionPolicyHandler())\n                \n            \n\n            \n                \n                    Defined in src/permission/permission.controller.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    permissionDto\n                                    \n                                                PermissionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Inject,\n  Param,\n  Post,\n  Put,\n  Query,\n  UseGuards,\n  Version,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { ThrottlerGuard } from '@nestjs/throttler';\nimport { CheckPolicies } from '../auth/casl-ability.factory';\nimport { PoliciesGuard } from '../auth/policies.guard';\nimport {\n  CreatePermissionPolicyHandler,\n  DeletePermissionPolicyHandler,\n  ReadPermissionPolicyHandler,\n  UpdatePermissionPolicyHandler,\n} from '../auth/policies/permission.policies';\nimport { PageOptionsDto } from '../pagination/page-options.dto';\nimport { PermissionDto } from './permission.dto';\nimport { PermissionService } from './permission.service';\n\n@Controller('permission')\n@ApiTags('permission')\n@UseGuards(PoliciesGuard)\n@UseGuards(ThrottlerGuard)\n@ApiBearerAuth()\nexport class PermissionController {\n  @Inject()\n  private permissionService: PermissionService;\n\n  @Get()\n  @Version('1')\n  @CheckPolicies(new ReadPermissionPolicyHandler())\n  findAllPermissions(@Query() pageOptionsDto: PageOptionsDto) {\n    return this.permissionService.findAllPermissionsPageable(pageOptionsDto);\n  }\n\n  @Get(':id')\n  @Version('1')\n  @CheckPolicies(new ReadPermissionPolicyHandler())\n  findPermissionById(@Param('id') id: number) {\n    return this.permissionService.findPermissionById(id);\n  }\n\n  @Delete(':id')\n  @Version('1')\n  @CheckPolicies(new DeletePermissionPolicyHandler())\n  deletePermission(@Param('id') id: number) {\n    return this.permissionService.deletePermissionById(id);\n  }\n\n  @Post()\n  @Version('1')\n  @CheckPolicies(new CreatePermissionPolicyHandler())\n  createPermission(@Body() permissionDto: PermissionDto) {\n    return this.permissionService.createPermission(permissionDto);\n  }\n\n  @Put()\n  @Version('1')\n  @CheckPolicies(new UpdatePermissionPolicyHandler())\n  updatePermission(@Body() permissionDto: PermissionDto) {\n    return this.permissionService.updatePermission(permissionDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PermissionDto.html":{"url":"classes/PermissionDto.html","title":"class - PermissionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PermissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permission/permission.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                dateCreated\n                            \n                            \n                                dateUpdated\n                            \n                            \n                                id\n                            \n                            \n                                resource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fromModel\n                            \n                            \n                                toModel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PermissionAction\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permission/permission.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                    \n                        \n                                Defined in src/permission/permission.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateUpdated\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                    \n                        \n                                Defined in src/permission/permission.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                    \n                        \n                                Defined in src/permission/permission.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resource\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permission/permission.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fromModel\n                        \n                    \n                \n            \n            \n                \nfromModel(permission: Permission)\n                \n            \n\n\n            \n                \n                    Defined in src/permission/permission.dto.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    permission\n                                    \n                                                Permission\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toModel\n                        \n                    \n                \n            \n            \n                \ntoModel()\n                \n            \n\n\n            \n                \n                    Defined in src/permission/permission.dto.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Permission\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\nimport { PermissionAction } from 'src/auth/casl-ability.factory';\nimport { Permission } from './permission.entity';\n\nexport class PermissionDto {\n  id: number | null;\n  @IsNotEmpty()\n  action: PermissionAction;\n\n  @IsNotEmpty()\n  @IsString()\n  resource: string;\n  dateCreated: Date | null;\n  dateUpdated: Date | null;\n\n  toModel(): Permission {\n    const permission = new Permission();\n    permission.id = this.id;\n    permission.action = this.action;\n    permission.resource = this.resource;\n    return permission;\n  }\n\n  fromModel(permission: Permission) {\n    this.id = permission.id;\n    this.action = permission.action;\n    this.resource = permission.resource;\n    this.dateCreated = permission.dateCreated;\n    this.dateUpdated = permission.dateUpdated;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PermissionModule.html":{"url":"modules/PermissionModule.html","title":"module - PermissionModule","body":"\n                   \n\n\n\n\n    Modules\n    PermissionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PermissionModule\n\n\n\ncluster_PermissionModule_imports\n\n\n\ncluster_PermissionModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nPermissionModule\n\nPermissionModule\n\nPermissionModule -->\n\nAuthModule->PermissionModule\n\n\n\n\n\nPermissionService\n\nPermissionService\n\nPermissionModule -->\n\nPermissionService->PermissionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/permission/permission.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PermissionService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PermissionController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { PermissionController } from './permission.controller';\nimport { Permission } from './permission.entity';\nimport { PermissionService } from './permission.service';\n\n@Module({\n  imports: [AuthModule, TypeOrmModule.forFeature([Permission])],\n  providers: [PermissionService],\n  controllers: [PermissionController],\n})\nexport class PermissionModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PermissionPermissionsSeed1655765422849.html":{"url":"classes/PermissionPermissionsSeed1655765422849.html","title":"class - PermissionPermissionsSeed1655765422849","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PermissionPermissionsSeed1655765422849\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/seed/1655765422849-PermissionPermissionsSeed.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/seed/1655765422849-PermissionPermissionsSeed.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/seed/1655765422849-PermissionPermissionsSeed.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { PermissionAction } from 'src/auth/casl-ability.factory';\nimport { Permission } from 'src/permission/permission.entity';\nimport { Role } from 'src/role/role.entity';\nimport { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class PermissionPermissionsSeed1655765422849\n  implements MigrationInterface\n{\n  public async up(queryRunner: QueryRunner): Promise {\n    const adminRole = await queryRunner.manager.findOne(Role, {\n      where: {\n        name: 'admin',\n      },\n    });\n\n    await queryRunner.manager.save(\n      queryRunner.manager.create(Permission, {\n        action: PermissionAction.CREATE,\n        resource: 'Permission',\n      }),\n    );\n\n    await queryRunner.manager.save(\n      queryRunner.manager.create(Permission, {\n        action: PermissionAction.READ,\n        resource: 'Permission',\n      }),\n    );\n\n    await queryRunner.manager.save(\n      queryRunner.manager.create(Permission, {\n        action: PermissionAction.UPDATE,\n        resource: 'Permission',\n      }),\n    );\n\n    await queryRunner.manager.save(\n      queryRunner.manager.create(Permission, {\n        action: PermissionAction.DELETE,\n        resource: 'Permission',\n      }),\n    );\n\n    await queryRunner.manager.save(\n      queryRunner.manager.create(Permission, {\n        action: PermissionAction.MANAGE,\n        resource: 'Permission',\n        roles: [adminRole],\n      }),\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    queryRunner.query('DELETE * FROM permission WHERE resource = \"Permission\"');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PermissionService.html":{"url":"injectables/PermissionService.html","title":"injectable - PermissionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PermissionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permission/permission.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                permissionRepository\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createPermission\n                            \n                            \n                                    Async\n                                deletePermissionById\n                            \n                            \n                                    Async\n                                findAllPermissionsPageable\n                            \n                            \n                                    Async\n                                findPermissionById\n                            \n                            \n                                    Async\n                                updatePermission\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createPermission\n                        \n                    \n                \n            \n            \n                \n                    \n                    createPermission(permissionDto: PermissionDto)\n                \n            \n\n\n            \n                \n                    Defined in src/permission/permission.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    permissionDto\n                                    \n                                                PermissionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deletePermissionById\n                        \n                    \n                \n            \n            \n                \n                    \n                    deletePermissionById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/permission/permission.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllPermissionsPageable\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllPermissionsPageable(pageOptionsDto: PageOptionsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/permission/permission.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                PageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findPermissionById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findPermissionById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/permission/permission.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updatePermission\n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePermission(permissionDto: PermissionDto)\n                \n            \n\n\n            \n                \n                    Defined in src/permission/permission.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    permissionDto\n                                    \n                                                PermissionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        permissionRepository\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repository\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @InjectRepository(Permission)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permission/permission.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { PageMetaDto } from '../pagination/page-meta.dto';\nimport { PageOptionsDto } from '../pagination/page-options.dto';\nimport { PageDto } from '../pagination/page.dto';\nimport { Repository } from 'typeorm';\nimport { PermissionDto } from './permission.dto';\nimport { Permission } from './permission.entity';\n\n@Injectable()\nexport class PermissionService {\n  @InjectRepository(Permission)\n  private permissionRepository: Repository;\n\n  async findAllPermissionsPageable(\n    pageOptionsDto: PageOptionsDto,\n  ): Promise> {\n    const queryBuilder =\n      this.permissionRepository.createQueryBuilder('permissions');\n\n    queryBuilder\n      .orderBy('resource', pageOptionsDto.order)\n      .skip(pageOptionsDto.skip)\n      .take(pageOptionsDto.take);\n\n    const itemCount = await queryBuilder.getCount();\n    const { entities } = await queryBuilder.getRawAndEntities();\n\n    const pageMetaDto = new PageMetaDto({ itemCount, pageOptionsDto });\n\n    return new PageDto(\n      entities.map((permission) => {\n        const dto = new PermissionDto();\n        dto.fromModel(permission);\n        return dto;\n      }),\n      pageMetaDto,\n    );\n  }\n\n  async findPermissionById(id: number): Promise {\n    const result = await this.permissionRepository.findOne(id);\n    if (result) {\n      const dto = new PermissionDto();\n      dto.fromModel(result);\n      return dto;\n    } else {\n      throw new NotFoundException(\n        'An permission with id: ' + id + ' has not been found in database',\n      );\n    }\n  }\n\n  async deletePermissionById(id: number) {\n    const result = await this.permissionRepository.findOne(id);\n    if (result) {\n      return this.permissionRepository.delete(id);\n    } else {\n      throw new NotFoundException(\n        'An permission with id: ' + id + ' has not been found in database',\n      );\n    }\n  }\n\n  async createPermission(permissionDto: PermissionDto): Promise {\n    const permission = await this.permissionRepository.save(\n      permissionDto.toModel(),\n    );\n    const dto = new PermissionDto();\n    dto.fromModel(permission);\n    return dto;\n  }\n\n  async updatePermission(permissionDto: PermissionDto): Promise {\n    await this.permissionRepository.save(permissionDto.toModel());\n    const permission = await this.permissionRepository.findOne(\n      permissionDto.id,\n    );\n    const dto = new PermissionDto();\n    dto.fromModel(permission);\n    return dto;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PermissionTimestamps1655765304532.html":{"url":"classes/PermissionTimestamps1655765304532.html","title":"class - PermissionTimestamps1655765304532","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PermissionTimestamps1655765304532\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1655765304532-PermissionTimestamps.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'PermissionTimestamps1655765304532'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1655765304532-PermissionTimestamps.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1655765304532-PermissionTimestamps.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1655765304532-PermissionTimestamps.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class PermissionTimestamps1655765304532 implements MigrationInterface {\n  name = 'PermissionTimestamps1655765304532';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `ALTER TABLE \"permission\" ADD \"dateCreated\" TIMESTAMP NOT NULL DEFAULT now()`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"permission\" ADD \"dateUpdated\" TIMESTAMP NOT NULL DEFAULT now()`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `ALTER TABLE \"permission\" DROP COLUMN \"dateUpdated\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"permission\" DROP COLUMN \"dateCreated\"`,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/PoliciesGuard.html":{"url":"guards/PoliciesGuard.html","title":"guard - PoliciesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    PoliciesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/policies.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                execPolicyHandler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector, caslAbilityFactory: CaslAbilityFactory)\n                    \n                \n                        \n                            \n                                Defined in src/auth/policies.guard.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        caslAbilityFactory\n                                                  \n                                                        \n                                                                        CaslAbilityFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/policies.guard.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        execPolicyHandler\n                        \n                    \n                \n            \n            \n                \n                    \n                    execPolicyHandler(handler: PolicyHandler, ability: AppAbility)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/policies.guard.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handler\n                                    \n                                                PolicyHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ability\n                                    \n                                                AppAbility\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport {\n  AppAbility,\n  CaslAbilityFactory,\n  CHECK_POLICIES_KEY,\n  PolicyHandler,\n} from './casl-ability.factory';\n\n@Injectable()\nexport class PoliciesGuard implements CanActivate {\n  constructor(\n    private reflector: Reflector,\n    private caslAbilityFactory: CaslAbilityFactory,\n  ) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const policyHandlers =\n      this.reflector.get(\n        CHECK_POLICIES_KEY,\n        context.getHandler(),\n      ) || [];\n\n    const { user } = context.switchToHttp().getRequest();\n    const ability = await this.caslAbilityFactory.createForUser(user);\n\n    return policyHandlers.every((handler) =>\n      this.execPolicyHandler(handler, ability),\n    );\n  }\n\n  private execPolicyHandler(handler: PolicyHandler, ability: AppAbility) {\n    if (typeof handler === 'function') {\n      return handler(ability);\n    }\n    return handler.handle(ability);\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReadPermissionPolicyHandler.html":{"url":"classes/ReadPermissionPolicyHandler.html","title":"class - ReadPermissionPolicyHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReadPermissionPolicyHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/policies/permission.policies.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IPolicyHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(ability: AppAbility)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/policies/permission.policies.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ability\n                                    \n                                                AppAbility\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Permission } from '../../permission/permission.entity';\nimport {\n  AppAbility,\n  IPolicyHandler,\n  PermissionAction,\n} from '../casl-ability.factory';\n\nexport class ReadPermissionPolicyHandler implements IPolicyHandler {\n  handle(ability: AppAbility) {\n    return ability.can(PermissionAction.READ, Permission);\n  }\n}\n\nexport class CreatePermissionPolicyHandler implements IPolicyHandler {\n  handle(ability: AppAbility) {\n    return ability.can(PermissionAction.CREATE, Permission);\n  }\n}\n\nexport class UpdatePermissionPolicyHandler implements IPolicyHandler {\n  handle(ability: AppAbility) {\n    return ability.can(PermissionAction.UPDATE, Permission);\n  }\n}\n\nexport class DeletePermissionPolicyHandler implements IPolicyHandler {\n  handle(ability: AppAbility) {\n    return ability.can(PermissionAction.DELETE, Permission);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RefreshTokenDto.html":{"url":"classes/RefreshTokenDto.html","title":"class - RefreshTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RefreshTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/refresh-token.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                refresh_token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        refresh_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/refresh-token.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\n\nexport class RefreshTokenDto {\n  @IsNotEmpty()\n  refresh_token: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Role.html":{"url":"entities/Role.html","title":"entity - Role","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/role/role.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dateCreated\n                            \n                            \n                                dateUpdated\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                permissions\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dateCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/role/role.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateUpdated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/role/role.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/role/role.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/role/role.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Permission[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, permissions => permissions.roles, {nullable: true, eager: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/role/role.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, users => users.roles, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/role/role.entity.ts:31\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Permission } from '../permission/permission.entity';\nimport { User } from '../user/user.entity';\nimport {\n  Column,\n  CreateDateColumn,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n\n@Entity()\nexport class Role {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Index()\n  @Column({ unique: true })\n  name: string;\n\n  @ManyToMany(() => Permission, (permissions) => permissions.roles, {\n    nullable: true,\n    eager: true,\n  })\n  @JoinTable()\n  permissions: Permission[];\n\n  @ManyToMany(() => User, (users) => users.roles, { nullable: true })\n  users: User[];\n\n  @CreateDateColumn()\n  dateCreated: Date;\n\n  @UpdateDateColumn()\n  dateUpdated: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RoleController.html":{"url":"controllers/RoleController.html","title":"controller - RoleController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RoleController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/role/role.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                role\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                assignPermissions\n                            \n                            \n                                assignUsers\n                            \n                            \n                                createRole\n                            \n                            \n                                deleteRole\n                            \n                            \n                                findAllRoles\n                            \n                            \n                                findRoleById\n                            \n                            \n                                updateRole\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        assignPermissions\n                        \n                    \n                \n            \n            \n                \nassignPermissions(queryParams: AssignRolePermissionsQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('assignPermissions')@Version('1')@Put()@Version('1')@CheckPolicies(ability => )\n                \n            \n\n            \n                \n                    Defined in src/role/role.controller.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryParams\n                                    \n                                                AssignRolePermissionsQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        assignUsers\n                        \n                    \n                \n            \n            \n                \nassignUsers(queryParams: AssignRoleUsersQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('assignUsers')@Version('1')@Put()@Version('1')@CheckPolicies(ability => )\n                \n            \n\n            \n                \n                    Defined in src/role/role.controller.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryParams\n                                    \n                                                AssignRoleUsersQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createRole\n                        \n                    \n                \n            \n            \n                \ncreateRole(roleDto: RoleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@Version('1')@CheckPolicies(ability => )\n                \n            \n\n            \n                \n                    Defined in src/role/role.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roleDto\n                                    \n                                                RoleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteRole\n                        \n                    \n                \n            \n            \n                \ndeleteRole(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@Version('1')@CheckPolicies(ability => )\n                \n            \n\n            \n                \n                    Defined in src/role/role.controller.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAllRoles\n                        \n                    \n                \n            \n            \n                \nfindAllRoles(pageOptionsDto: PageOptionsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Version('1')@CheckPolicies(ability => )\n                \n            \n\n            \n                \n                    Defined in src/role/role.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                PageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findRoleById\n                        \n                    \n                \n            \n            \n                \nfindRoleById(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@Version('1')@CheckPolicies(ability => )\n                \n            \n\n            \n                \n                    Defined in src/role/role.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateRole\n                        \n                    \n                \n            \n            \n                \nupdateRole(roleDto: RoleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put()@Version('1')@CheckPolicies(ability => )\n                \n            \n\n            \n                \n                    Defined in src/role/role.controller.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roleDto\n                                    \n                                                RoleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Inject,\n  Param,\n  Post,\n  Put,\n  Query,\n  UseGuards,\n  Version,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { ThrottlerGuard } from '@nestjs/throttler';\nimport {\n  AppAbility,\n  CheckPolicies,\n  PermissionAction,\n} from 'src/auth/casl-ability.factory';\nimport { PoliciesGuard } from 'src/auth/policies.guard';\nimport { PageOptionsDto } from 'src/pagination/page-options.dto';\nimport { AssignRolePermissionsQuery } from './asign-role-permissions.dto';\nimport { AssignRoleUsersQuery } from './asign-role-users.dto';\nimport { RoleDto } from './role.dto';\nimport { RoleService } from './role.service';\n\n@Controller('role')\n@ApiTags('role')\n@UseGuards(PoliciesGuard)\n@UseGuards(ThrottlerGuard)\n@ApiBearerAuth()\nexport class RoleController {\n  @Inject()\n  private roleService: RoleService;\n\n  @Get()\n  @Version('1')\n  @CheckPolicies((ability: AppAbility) =>\n    ability.can(PermissionAction.READ, 'Role'),\n  )\n  findAllRoles(@Query() pageOptionsDto: PageOptionsDto) {\n    return this.roleService.findAllRolesPageable(pageOptionsDto);\n  }\n\n  @Get(':id')\n  @Version('1')\n  @CheckPolicies((ability: AppAbility) =>\n    ability.can(PermissionAction.READ, 'Role'),\n  )\n  findRoleById(@Param('id') id: number) {\n    return this.roleService.findRoleById(id);\n  }\n\n  @Delete(':id')\n  @Version('1')\n  @CheckPolicies((ability: AppAbility) =>\n    ability.can(PermissionAction.DELETE, 'Role'),\n  )\n  deleteRole(@Param('id') id: number) {\n    return this.roleService.deleteRoleById(id);\n  }\n\n  @Post()\n  @Version('1')\n  @CheckPolicies((ability: AppAbility) =>\n    ability.can(PermissionAction.CREATE, 'Role'),\n  )\n  createRole(@Body() roleDto: RoleDto) {\n    return this.roleService.createRole(roleDto);\n  }\n\n  @Put()\n  @Version('1')\n  @CheckPolicies((ability: AppAbility) =>\n    ability.can(PermissionAction.UPDATE, 'Role'),\n  )\n  updateRole(@Body() roleDto: RoleDto) {\n    return this.roleService.updateRole(roleDto);\n  }\n\n  @Post('assignPermissions')\n  @Version('1')\n  @Put()\n  @Version('1')\n  @CheckPolicies((ability: AppAbility) =>\n    ability.can(PermissionAction.UPDATE, 'Role'),\n  )\n  assignPermissions(@Query() queryParams: AssignRolePermissionsQuery) {\n    return this.roleService.assignPermissions(\n      queryParams.roleId,\n      queryParams.permissionIds,\n    );\n  }\n\n  @Post('assignUsers')\n  @Version('1')\n  @Put()\n  @Version('1')\n  @CheckPolicies((ability: AppAbility) =>\n    ability.can(PermissionAction.UPDATE, 'Role'),\n  )\n  assignUsers(@Query() queryParams: AssignRoleUsersQuery) {\n    return this.roleService.assignUsers(\n      queryParams.roleId,\n      queryParams.userIds,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoleDto.html":{"url":"classes/RoleDto.html","title":"class - RoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/role/role.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dateCreated\n                            \n                            \n                                dateUpdated\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fromModel\n                            \n                            \n                                toModel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dateCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                    \n                        \n                                Defined in src/role/role.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateUpdated\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                    \n                        \n                                Defined in src/role/role.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                    \n                        \n                                Defined in src/role/role.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/role/role.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fromModel\n                        \n                    \n                \n            \n            \n                \nfromModel(role: Role)\n                \n            \n\n\n            \n                \n                    Defined in src/role/role.dto.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    role\n                                    \n                                                Role\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toModel\n                        \n                    \n                \n            \n            \n                \ntoModel()\n                \n            \n\n\n            \n                \n                    Defined in src/role/role.dto.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Role\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\nimport { Role } from './role.entity';\n\nexport class RoleDto {\n  id: number | null;\n  @IsNotEmpty()\n  name: string;\n  dateCreated: Date | null;\n  dateUpdated: Date | null;\n\n  toModel(): Role {\n    const role = new Role();\n    role.id = this.id;\n    role.name = this.name;\n    return role;\n  }\n\n  fromModel(role: Role) {\n    this.id = role.id;\n    this.name = role.name;\n    this.dateCreated = role.dateCreated;\n    this.dateUpdated = role.dateUpdated;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoleMigration165550928088.html":{"url":"classes/RoleMigration165550928088.html","title":"class - RoleMigration165550928088","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RoleMigration165550928088\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1655509280886-RoleMigration.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'RoleMigration1655515669409'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1655509280886-RoleMigration.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1655509280886-RoleMigration.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1655509280886-RoleMigration.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class RoleMigration165550928088 implements MigrationInterface {\n  name = 'RoleMigration1655515669409';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `ALTER TABLE \"role\" ADD \"dateCreated\" TIMESTAMP NOT NULL DEFAULT now()`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"role\" ADD \"dateUpdated\" TIMESTAMP NOT NULL DEFAULT now()`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"role\" DROP COLUMN \"dateUpdated\"`);\n    await queryRunner.query(`ALTER TABLE \"role\" DROP COLUMN \"dateCreated\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RoleModule.html":{"url":"modules/RoleModule.html","title":"module - RoleModule","body":"\n                   \n\n\n\n\n    Modules\n    RoleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RoleModule\n\n\n\ncluster_RoleModule_providers\n\n\n\ncluster_RoleModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nRoleModule\n\nRoleModule\n\nRoleModule -->\n\nAuthModule->RoleModule\n\n\n\n\n\nRoleService\n\nRoleService\n\nRoleModule -->\n\nRoleService->RoleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/role/role.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RoleService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RoleController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { Permission } from 'src/permission/permission.entity';\nimport { User } from 'src/user/user.entity';\nimport { RoleController } from './role.controller';\nimport { Role } from './role.entity';\nimport { RoleService } from './role.service';\n\n@Module({\n  imports: [AuthModule, TypeOrmModule.forFeature([Role, User, Permission])],\n  providers: [RoleService],\n  controllers: [RoleController],\n})\nexport class RoleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RolePermissionsSeed1655595255331.html":{"url":"classes/RolePermissionsSeed1655595255331.html","title":"class - RolePermissionsSeed1655595255331","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RolePermissionsSeed1655595255331\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/seed/1655595255331-RolePermissionsSeed.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/seed/1655595255331-RolePermissionsSeed.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/seed/1655595255331-RolePermissionsSeed.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { PermissionAction } from 'src/auth/casl-ability.factory';\nimport { Permission } from 'src/permission/permission.entity';\nimport { Role } from 'src/role/role.entity';\nimport { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class RolePermissionsSeed1655595255331 implements MigrationInterface {\n  public async up(queryRunner: QueryRunner): Promise {\n    const adminRole = await queryRunner.manager.findOne(Role, {\n      where: {\n        name: 'admin',\n      },\n    });\n\n    await queryRunner.manager.save(\n      queryRunner.manager.create(Permission, {\n        action: PermissionAction.CREATE,\n        resource: 'Role',\n      }),\n    );\n\n    await queryRunner.manager.save(\n      queryRunner.manager.create(Permission, {\n        action: PermissionAction.READ,\n        resource: 'Role',\n      }),\n    );\n\n    await queryRunner.manager.save(\n      queryRunner.manager.create(Permission, {\n        action: PermissionAction.UPDATE,\n        resource: 'Role',\n      }),\n    );\n\n    await queryRunner.manager.save(\n      queryRunner.manager.create(Permission, {\n        action: PermissionAction.DELETE,\n        resource: 'Role',\n      }),\n    );\n\n    await queryRunner.manager.save(\n      queryRunner.manager.create(Permission, {\n        action: PermissionAction.MANAGE,\n        resource: 'Role',\n        roles: [adminRole],\n      }),\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    queryRunner.query('DELETE * FROM permission WHERE resource = \"Role\"');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoleSeed1655509280886.html":{"url":"classes/RoleSeed1655509280886.html","title":"class - RoleSeed1655509280886","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RoleSeed1655509280886\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/seed/1655519084251-RoleSeed.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/seed/1655519084251-RoleSeed.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/seed/1655519084251-RoleSeed.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Role } from 'src/role/role.entity';\nimport { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class RoleSeed1655509280886 implements MigrationInterface {\n  public async up(queryRunner: QueryRunner): Promise {\n    const admin = await queryRunner.manager.save(\n      queryRunner.manager.create(Role, {\n        name: 'admin',\n        dateCreated: Date(),\n        dateUpdated: Date(),\n      }),\n    );\n\n    const contractor = await queryRunner.manager.save(\n      queryRunner.manager.create(Role, {\n        name: 'contractor',\n        dateCreated: Date(),\n        dateUpdated: Date(),\n      }),\n    );\n\n    const user = await queryRunner.manager.save(\n      queryRunner.manager.create(Role, {\n        name: 'user',\n        dateCreated: Date(),\n        dateUpdated: Date(),\n      }),\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query('TRUNCATE role');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleService.html":{"url":"injectables/RoleService.html","title":"injectable - RoleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/role/role.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                permissionRepository\n                            \n                            \n                                    Private\n                                roleRepository\n                            \n                            \n                                    Private\n                                userRepository\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                assignPermissions\n                            \n                            \n                                    Async\n                                assignUsers\n                            \n                            \n                                    Async\n                                createRole\n                            \n                            \n                                    Async\n                                deleteRoleById\n                            \n                            \n                                    Async\n                                findAllRolesPageable\n                            \n                            \n                                    Async\n                                findRoleById\n                            \n                            \n                                    Async\n                                updateRole\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        assignPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    assignPermissions(roleId: number, permissionIds: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/role/role.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roleId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissionIds\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        assignUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    assignUsers(roleId: number, userIds: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/role/role.service.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roleId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userIds\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createRole\n                        \n                    \n                \n            \n            \n                \n                    \n                    createRole(roleDto: RoleDto)\n                \n            \n\n\n            \n                \n                    Defined in src/role/role.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roleDto\n                                    \n                                                RoleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteRoleById\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteRoleById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/role/role.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllRolesPageable\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllRolesPageable(pageOptionsDto: PageOptionsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/role/role.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageOptionsDto\n                                    \n                                                PageOptionsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findRoleById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findRoleById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/role/role.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateRole\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateRole(roleDto: RoleDto)\n                \n            \n\n\n            \n                \n                    Defined in src/role/role.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roleDto\n                                    \n                                                RoleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        permissionRepository\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repository\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @InjectRepository(Permission)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/role/role.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        roleRepository\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repository\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @InjectRepository(Role)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/role/role.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userRepository\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repository\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @InjectRepository(User)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/role/role.service.ts:21\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { PageMetaDto } from 'src/pagination/page-meta.dto';\nimport { PageOptionsDto } from 'src/pagination/page-options.dto';\nimport { PageDto } from 'src/pagination/page.dto';\nimport { Permission } from 'src/permission/permission.entity';\nimport { User } from 'src/user/user.entity';\nimport { Repository } from 'typeorm';\nimport { RoleDto } from './role.dto';\nimport { Role } from './role.entity';\n\n@Injectable()\nexport class RoleService {\n  @InjectRepository(Role)\n  private roleRepository: Repository;\n\n  @InjectRepository(Permission)\n  private permissionRepository: Repository;\n\n  @InjectRepository(User)\n  private userRepository: Repository;\n\n  async findAllRolesPageable(\n    pageOptionsDto: PageOptionsDto,\n  ): Promise> {\n    const queryBuilder = this.roleRepository.createQueryBuilder('roles');\n\n    queryBuilder\n      .orderBy('name', pageOptionsDto.order)\n      .skip(pageOptionsDto.skip)\n      .take(pageOptionsDto.take);\n\n    const itemCount = await queryBuilder.getCount();\n    const { entities } = await queryBuilder.getRawAndEntities();\n\n    const pageMetaDto = new PageMetaDto({ itemCount, pageOptionsDto });\n\n    return new PageDto(\n      entities.map((role) => {\n        const dto = new RoleDto();\n        dto.fromModel(role);\n        return dto;\n      }),\n      pageMetaDto,\n    );\n  }\n\n  async findRoleById(id: number): Promise {\n    const result = await this.roleRepository.findOne(id);\n    if (result) {\n      const dto = new RoleDto();\n      dto.fromModel(result);\n      return dto;\n    } else {\n      throw new NotFoundException(\n        'An role with id: ' + id + ' has not been found in database',\n      );\n    }\n  }\n\n  async deleteRoleById(id: number) {\n    const result = await this.roleRepository.findOne(id);\n    if (result) {\n      return this.roleRepository.delete(id);\n    } else {\n      throw new NotFoundException(\n        'An role with id: ' + id + ' has not been found in database',\n      );\n    }\n  }\n\n  async createRole(roleDto: RoleDto): Promise {\n    const role = await this.roleRepository.save(roleDto.toModel());\n    const dto = new RoleDto();\n    dto.fromModel(role);\n    return dto;\n  }\n\n  async updateRole(roleDto: RoleDto): Promise {\n    await this.roleRepository.save(roleDto.toModel());\n    const role = await this.roleRepository.findOne(roleDto.id);\n    const dto = new RoleDto();\n    dto.fromModel(role);\n    return dto;\n  }\n\n  async assignPermissions(roleId: number, permissionIds: number[]) {\n    let role = await this.roleRepository.findOne(roleId);\n    const permissions = await this.permissionRepository.findByIds(\n      permissionIds,\n    );\n\n    role.permissions = permissions;\n    await this.roleRepository.save(role);\n    role = await this.roleRepository.findOne(role.id);\n    const dto = new RoleDto();\n    dto.fromModel(role);\n    return dto;\n  }\n\n  async assignUsers(roleId: number, userIds: number[]) {\n    let role = await this.roleRepository.findOne(roleId);\n    const users = await this.userRepository.findByIds(userIds);\n\n    role.users = users;\n    await this.roleRepository.save(role);\n    role = await this.roleRepository.findOne(role.id);\n    const dto = new RoleDto();\n    dto.fromModel(role);\n    return dto;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TokenDto.html":{"url":"classes/TokenDto.html","title":"class - TokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/token.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                access_token\n                            \n                            \n                                refresh_token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(access_token: string, refresh_token: string)\n                    \n                \n                        \n                            \n                                Defined in src/auth/token.dto.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        access_token\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        refresh_token\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        access_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/token.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/token.dto.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class TokenDto {\n  access_token: string;\n  refresh_token: string;\n\n  constructor(access_token: string, refresh_token: string) {\n    this.access_token = access_token;\n    this.refresh_token = refresh_token;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePermissionPolicyHandler.html":{"url":"classes/UpdatePermissionPolicyHandler.html","title":"class - UpdatePermissionPolicyHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePermissionPolicyHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/policies/permission.policies.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IPolicyHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(ability: AppAbility)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/policies/permission.policies.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ability\n                                    \n                                                AppAbility\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Permission } from '../../permission/permission.entity';\nimport {\n  AppAbility,\n  IPolicyHandler,\n  PermissionAction,\n} from '../casl-ability.factory';\n\nexport class ReadPermissionPolicyHandler implements IPolicyHandler {\n  handle(ability: AppAbility) {\n    return ability.can(PermissionAction.READ, Permission);\n  }\n}\n\nexport class CreatePermissionPolicyHandler implements IPolicyHandler {\n  handle(ability: AppAbility) {\n    return ability.can(PermissionAction.CREATE, Permission);\n  }\n}\n\nexport class UpdatePermissionPolicyHandler implements IPolicyHandler {\n  handle(ability: AppAbility) {\n    return ability.can(PermissionAction.UPDATE, Permission);\n  }\n}\n\nexport class DeletePermissionPolicyHandler implements IPolicyHandler {\n  handle(ability: AppAbility) {\n    return ability.can(PermissionAction.DELETE, Permission);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addresses\n                            \n                            \n                                dateCreated\n                            \n                            \n                                dateOfBirth\n                            \n                            \n                                dateUpdated\n                            \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                isAccountActivated\n                            \n                            \n                                isEmailVerified\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                            \n                                roles\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addresses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Address[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, address => address.user, {nullable: true, eager: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateCreated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateOfBirth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true, default: undefined, type: 'date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dateUpdated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})@Index()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAccountActivated\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEmailVerified\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, roles => roles.users, {nullable: true, eager: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})@Index()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.entity.ts:28\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Address } from '../address/address.entity';\nimport { Role } from '../role/role.entity';\nimport {\n  Column,\n  CreateDateColumn,\n  Entity,\n  Index,\n  JoinTable,\n  ManyToMany,\n  OneToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n\n@Entity()\nexport class User {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  firstName: string;\n\n  @Column()\n  lastName: string;\n\n  @Column({ unique: true })\n  @Index()\n  username: string;\n\n  @Column({ unique: true })\n  @Index()\n  email: string;\n\n  @Column({ default: false })\n  isEmailVerified: boolean;\n\n  @Column({ default: true })\n  isAccountActivated: true;\n\n  @Column()\n  password: string;\n\n  @Column({ nullable: true, default: null, type: 'date' })\n  dateOfBirth: Date;\n\n  @OneToMany(() => Address, (address) => address.user, {\n    nullable: true,\n    eager: true,\n  })\n  addresses: Address[];\n\n  @CreateDateColumn()\n  dateCreated: Date;\n\n  @UpdateDateColumn()\n  dateUpdated: Date;\n\n  @ManyToMany(() => Role, (roles) => roles.users, {\n    nullable: true,\n    eager: true,\n  })\n  @JoinTable()\n  roles: Role[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService \n\nUserService \n\n\n\nUserModule\n\nUserModule\n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Address } from '../address/address.entity';\nimport { Permission } from '../permission/permission.entity';\nimport { Role } from '../role/role.entity';\nimport { User } from './user.entity';\nimport { UserService } from './user.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([User, Address, Role, Permission])],\n  providers: [UserService],\n  exports: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                userRepository\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findByUsernameOrEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByUsernameOrEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByUsernameOrEmail(emailOrUsername: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    emailOrUsername\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userRepository\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repository\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @InjectRepository(User)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { User } from './user.entity';\n\n@Injectable()\nexport class UserService {\n  @InjectRepository(User)\n  private userRepository: Repository;\n\n  async findByUsernameOrEmail(\n    emailOrUsername: string,\n  ): Promise {\n    const result = this.userRepository.findOne({\n      where: [{ email: emailOrUsername }, { username: emailOrUsername }],\n    });\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                dev.env.ts\n            \n            variable\n            enviroment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/address/address.entity.ts\n            \n            entity\n            Address\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/auth/casl-ability.factory.ts\n            \n            injectable\n            CaslAbilityFactory\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/casl-ability.factory.ts\n            \n            interface\n            CaslPermission\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/casl-ability.factory.ts\n            \n            interface\n            IPolicyHandler\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/casl-ability.factory.ts\n            \n            variable\n            CHECK_POLICIES_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/casl-ability.factory.ts\n            \n            variable\n            CheckPolicies\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/policies.guard.ts\n            \n            guard\n            PoliciesGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/policies/permission.policies.ts\n            \n            class\n            CreatePermissionPolicyHandler\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/policies/permission.policies.ts\n            \n            class\n            DeletePermissionPolicyHandler\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/policies/permission.policies.ts\n            \n            class\n            ReadPermissionPolicyHandler\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/policies/permission.policies.ts\n            \n            class\n            UpdatePermissionPolicyHandler\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/public.factory.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/public.factory.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/refresh-token.dto.ts\n            \n            class\n            RefreshTokenDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/token.dto.ts\n            \n            class\n            TokenDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/config/postgres.config.ts\n            \n            variable\n            postgressConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/migrations/1655509280886-RoleMigration.ts\n            \n            class\n            RoleMigration165550928088\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/migrations/1655586944086-ManyToManyUserRoles.ts\n            \n            class\n            ManyToManyUserRoles1655586944086\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/migrations/1655765304532-PermissionTimestamps.ts\n            \n            class\n            PermissionTimestamps1655765304532\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/migrations/seed/1655519084251-RoleSeed.ts\n            \n            class\n            RoleSeed1655509280886\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/migrations/seed/1655586994482-AdminUserSeeds.ts\n            \n            class\n            AdminUserSeeds1655586994482\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/migrations/seed/1655595255331-RolePermissionsSeed.ts\n            \n            class\n            RolePermissionsSeed1655595255331\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/migrations/seed/1655765422849-PermissionPermissionsSeed.ts\n            \n            class\n            PermissionPermissionsSeed1655765422849\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/pagination/page-meta-dto-parameters.interface.ts\n            \n            interface\n            PageMetaDtoParameters\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/pagination/page-meta.dto.ts\n            \n            class\n            PageMetaDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/pagination/page-options.dto.ts\n            \n            class\n            PageOptionsDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/pagination/page.dto.ts\n            \n            class\n            PageDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/permission/permission.controller.ts\n            \n            controller\n            PermissionController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/permission/permission.dto.ts\n            \n            class\n            PermissionDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/permission/permission.entity.ts\n            \n            entity\n            Permission\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/permission/permission.entity.ts\n            \n            class\n            Permission\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/permission/permission.service.ts\n            \n            injectable\n            PermissionService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/role/asign-role-permissions.dto.ts\n            \n            class\n            AssignRolePermissionsQuery\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/role/asign-role-users.dto.ts\n            \n            class\n            AssignRoleUsersQuery\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/role/role.controller.ts\n            \n            controller\n            RoleController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/role/role.dto.ts\n            \n            class\n            RoleDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/role/role.entity.ts\n            \n            entity\n            Role\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/role/role.service.ts\n            \n            injectable\n            RoleService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/user/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/user/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/util/bcrypt.ts\n            \n            function\n            comparePasswords\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/util/bcrypt.ts\n            \n            function\n            encodePassword\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @casl/ability : ^5.4.4\n        \n            @nestjs/axios : ^0.0.8\n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/config : ^2.1.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/jwt : ^8.0.1\n        \n            @nestjs/passport : ^8.2.2\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/platform-fastify : ^8.4.6\n        \n            @nestjs/swagger : ^5.2.1\n        \n            @nestjs/terminus : ^8.0.6\n        \n            @nestjs/throttler : ^2.0.1\n        \n            @nestjs/typeorm : ^8.1.4\n        \n            bcrypt : ^5.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            dotenv : ^16.0.1\n        \n            fastify-csrf : ^3.1.0\n        \n            fastify-helmet : ^7.1.0\n        \n            fastify-swagger : ^5.2.0\n        \n            passport-jwt : ^4.0.0\n        \n            pg : ^8.7.3\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.4.0\n        \n            typeorm : ^0.2.45\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Order   (src/.../page-order.model.ts)\n                        \n                        \n                            PermissionAction   (src/.../casl-ability.factory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/pagination/page-order.model.ts\n    \n        \n            \n                \n                    \n                        \n                        Order\n                    \n                \n                        \n                            \n                                 ASC\n                            \n                        \n                        \n                            \n                                Value : ASC\n                            \n                        \n                        \n                            \n                                 DESC\n                            \n                        \n                        \n                            \n                                Value : DESC\n                            \n                        \n            \n        \n\n    src/auth/casl-ability.factory.ts\n    \n        \n            \n                \n                    \n                        \n                        PermissionAction\n                    \n                \n                        \n                            \n                                 CREATE\n                            \n                        \n                        \n                            \n                                Value : create\n                            \n                        \n                        \n                            \n                                 READ\n                            \n                        \n                        \n                            \n                                Value : read\n                            \n                        \n                        \n                            \n                                 UPDATE\n                            \n                        \n                        \n                            \n                                Value : update\n                            \n                        \n                        \n                            \n                                 DELETE\n                            \n                        \n                        \n                            \n                                Value : delete\n                            \n                        \n                        \n                            \n                                 MANAGE\n                            \n                        \n                        \n                            \n                                Value : manage\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            comparePasswords   (src/.../bcrypt.ts)\n                        \n                        \n                            encodePassword   (src/.../bcrypt.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/util/bcrypt.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        comparePasswords\n                        \n                    \n                \n            \n            \n                \ncomparePasswords(rawPassword: string, hash: string)\n                \n            \n\n\n\n\n            \n                \n                    Function that takes the raw text and hash and compares them to see whether they are the same\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    rawPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        represents raw text to compare\n\n                                    \n                                \n                                \n                                    hash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        value that represents the bcrypt hash to compare raw text with\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        encodePassword\n                        \n                    \n                \n            \n            \n                \nencodePassword(rawPassword: string)\n                \n            \n\n\n\n\n            \n                \n                    Function that takes the value of the raw string and encodes it to the bcrypt hash with random salt\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    rawPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        text value that represents password that will be encoded\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\nDescription\nNest framework backend application written in TypeScript for PronadjiMajstora platform.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRunning the app on docker\n$ docker-compose -f docker-compose-dev.yml upTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covDocumentation\nTo Serve Documentation locally\nnpm run documentation:serveAfter This command you should visit http://localhost:8080 in order to look at code documentation page page\nTo Build Documentation\nnpm run documentation:buildOr visit swagger page after ruuning application on http://localhost:3000:/api/docs\nWorking With Database Migrations\nCreating new empty migration\n$ npm run migration:create `migration name`Generating migrations depending on the schema change\n$ npm run migration:generate `migration name`Showing Pending migrations\n$ npm run migration:showRunning migrations\n$ npm run migration:migrateReverting migrations\n$ npm run migration:revertLicense\nEuropean Union Public License 1.2, For more details read LICENSE\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n EUROPEAN UNION PUBLIC LICENCE v. 1.2\n                      EUPL © the European Union 2007, 2016\nThis European Union Public Licence (the ‘EUPL’) applies to the Work (as\ndefined below) which is provided under the terms of this Licence. Any use of\nthe Work, other than as authorised under this Licence is prohibited (to the\nextent such use is covered by a right of the copyright holder of the Work).\nThe Work is provided under the terms of this Licence when the Licensor (as\ndefined below) has placed the following notice immediately following the\ncopyright notice for the Work:\n    Licensed under the EUPLor has expressed by any other means his willingness to license under the EUPL.\n\nDefinitions\n\nIn this Licence, the following terms have the following meaning:\n\n‘The Licence’: this Licence.\n\n‘The Original Work’: the work or software distributed or communicated by the\nLicensor under this Licence, available as Source Code and also as Executable\nCode as the case may be.\n\n‘Derivative Works’: the works or software that could be created by the\nLicensee, based upon the Original Work or modifications thereof. This\nLicence does not define the extent of modification or dependence on the\nOriginal Work required in order to classify a work as a Derivative Work;\nthis extent is determined by copyright law applicable in the country\nmentioned in Article 15.\n\n‘The Work’: the Original Work or its Derivative Works.\n\n‘The Source Code’: the human-readable form of the Work which is the most\nconvenient for people to study and modify.\n\n‘The Executable Code’: any code which has generally been compiled and which\nis meant to be interpreted by a computer as a program.\n\n‘The Licensor’: the natural or legal person that distributes or communicates\nthe Work under the Licence.\n\n‘Contributor(s)’: any natural or legal person who modifies the Work under\nthe Licence, or otherwise contributes to the creation of a Derivative Work.\n\n‘The Licensee’ or ‘You’: any natural or legal person who makes any usage of\nthe Work under the terms of the Licence.\n\n‘Distribution’ or ‘Communication’: any act of selling, giving, lending,\nrenting, distributing, communicating, transmitting, or otherwise making\navailable, online or offline, copies of the Work or providing access to its\nessential functionalities at the disposal of any other natural or legal\nperson.\n\n\n\nScope of the rights granted by the Licence\n\nThe Licensor hereby grants You a worldwide, royalty-free, non-exclusive,\nsublicensable licence to do the following, for the duration of copyright\nvested in the Original Work:\n\nuse the Work in any circumstance and for all usage,\nreproduce the Work,\nmodify the Work, and make Derivative Works based upon the Work,\ncommunicate to the public, including the right to make available or display\nthe Work or copies thereof to the public and perform publicly, as the case\nmay be, the Work,\ndistribute the Work or copies thereof,\nlend and rent the Work or copies thereof,\nsublicense rights in the Work or copies thereof.\n\nThose rights can be exercised on any media, supports and formats, whether now\nknown or later invented, as far as the applicable law permits so.\nIn the countries where moral rights apply, the Licensor waives his right to\nexercise his moral right to the extent allowed by law in order to make\neffective the licence of the economic rights here above listed.\nThe Licensor grants to the Licensee royalty-free, non-exclusive usage rights\nto any patents held by the Licensor, to the extent necessary to make use of\nthe rights granted on the Work under this Licence.\n\nCommunication of the Source Code\n\nThe Licensor may provide the Work either in its Source Code form, or as\nExecutable Code. If the Work is provided as Executable Code, the Licensor\nprovides in addition a machine-readable copy of the Source Code of the Work\nalong with each copy of the Work that the Licensor distributes or indicates,\nin a notice following the copyright notice attached to the Work, a repository\nwhere the Source Code is easily and freely accessible for as long as the\nLicensor continues to distribute or communicate the Work.\n\nLimitations on copyright\n\nNothing in this Licence is intended to deprive the Licensee of the benefits\nfrom any exception or limitation to the exclusive rights of the rights owners\nin the Work, of the exhaustion of those rights or of other applicable\nlimitations thereto.\n\nObligations of the Licensee\n\nThe grant of the rights mentioned above is subject to some restrictions and\nobligations imposed on the Licensee. Those obligations are the following:\nAttribution right: The Licensee shall keep intact all copyright, patent or\ntrademarks notices and all notices that refer to the Licence and to the\ndisclaimer of warranties. The Licensee must include a copy of such notices and\na copy of the Licence with every copy of the Work he/she distributes or\ncommunicates. The Licensee must cause any Derivative Work to carry prominent\nnotices stating that the Work has been modified and the date of modification.\nCopyleft clause: If the Licensee distributes or communicates copies of the\nOriginal Works or Derivative Works, this Distribution or Communication will be\ndone under the terms of this Licence or of a later version of this Licence\nunless the Original Work is expressly distributed only under this version of\nthe Licence — for example by communicating ‘EUPL v. 1.2 only’. The Licensee\n(becoming Licensor) cannot offer or impose any additional terms or conditions\non the Work or Derivative Work that alter or restrict the terms of the\nLicence.\nCompatibility clause: If the Licensee Distributes or Communicates Derivative\nWorks or copies thereof based upon both the Work and another work licensed\nunder a Compatible Licence, this Distribution or Communication can be done\nunder the terms of this Compatible Licence. For the sake of this clause,\n‘Compatible Licence’ refers to the licences listed in the appendix attached to\nthis Licence. Should the Licensee's obligations under the Compatible Licence\nconflict with his/her obligations under this Licence, the obligations of the\nCompatible Licence shall prevail.\nProvision of Source Code: When distributing or communicating copies of the\nWork, the Licensee will provide a machine-readable copy of the Source Code or\nindicate a repository where this Source will be easily and freely available\nfor as long as the Licensee continues to distribute or communicate the Work.\nLegal Protection: This Licence does not grant permission to use the trade\nnames, trademarks, service marks, or names of the Licensor, except as required\nfor reasonable and customary use in describing the origin of the Work and\nreproducing the content of the copyright notice.\n\nChain of Authorship\n\nThe original Licensor warrants that the copyright in the Original Work granted\nhereunder is owned by him/her or licensed to him/her and that he/she has the\npower and authority to grant the Licence.\nEach Contributor warrants that the copyright in the modifications he/she\nbrings to the Work are owned by him/her or licensed to him/her and that he/she\nhas the power and authority to grant the Licence.\nEach time You accept the Licence, the original Licensor and subsequent\nContributors grant You a licence to their contributions to the Work, under the\nterms of this Licence.\n\nDisclaimer of Warranty\n\nThe Work is a work in progress, which is continuously improved by numerous\nContributors. It is not a finished work and may therefore contain defects or\n‘bugs’ inherent to this type of development.\nFor the above reason, the Work is provided under the Licence on an ‘as is’\nbasis and without warranties of any kind concerning the Work, including\nwithout limitation merchantability, fitness for a particular purpose, absence\nof defects or errors, accuracy, non-infringement of intellectual property\nrights other than copyright as stated in Article 6 of this Licence.\nThis disclaimer of warranty is an essential part of the Licence and a\ncondition for the grant of any rights to the Work.\n\nDisclaimer of Liability\n\nExcept in the cases of wilful misconduct or damages directly caused to natural\npersons, the Licensor will in no event be liable for any direct or indirect,\nmaterial or moral, damages of any kind, arising out of the Licence or of the\nuse of the Work, including without limitation, damages for loss of goodwill,\nwork stoppage, computer failure or malfunction, loss of data or any commercial\ndamage, even if the Licensor has been advised of the possibility of such\ndamage. However, the Licensor will be liable under statutory product liability\nlaws as far such laws apply to the Work.\n\nAdditional agreements\n\nWhile distributing the Work, You may choose to conclude an additional\nagreement, defining obligations or services consistent with this Licence.\nHowever, if accepting obligations, You may act only on your own behalf and on\nyour sole responsibility, not on behalf of the original Licensor or any other\nContributor, and only if You agree to indemnify, defend, and hold each\nContributor harmless for any liability incurred by, or claims asserted against\nsuch Contributor by the fact You have accepted any warranty or additional\nliability.\n\nAcceptance of the Licence\n\nThe provisions of this Licence can be accepted by clicking on an icon ‘I\nagree’ placed under the bottom of a window displaying the text of this Licence\nor by affirming consent in any other similar way, in accordance with the rules\nof applicable law. Clicking on that icon indicates your clear and irrevocable\nacceptance of this Licence and all of its terms and conditions.\nSimilarly, you irrevocably accept this Licence and all of its terms and\nconditions by exercising any rights granted to You by Article 2 of this\nLicence, such as the use of the Work, the creation by You of a Derivative Work\nor the Distribution or Communication by You of the Work or copies thereof.\n\nInformation to the public\n\nIn case of any Distribution or Communication of the Work by means of\nelectronic communication by You (for example, by offering to download the Work\nfrom a remote location) the distribution channel or media (for example, a\nwebsite) must at least provide to the public the information requested by the\napplicable law regarding the Licensor, the Licence and the way it may be\naccessible, concluded, stored and reproduced by the Licensee.\n\nTermination of the Licence\n\nThe Licence and the rights granted hereunder will terminate automatically upon\nany breach by the Licensee of the terms of the Licence.\nSuch a termination will not terminate the licences of any person who has\nreceived the Work from the Licensee under the Licence, provided such persons\nremain in full compliance with the Licence.\n\nMiscellaneous\n\nWithout prejudice of Article 9 above, the Licence represents the complete\nagreement between the Parties as to the Work.\nIf any provision of the Licence is invalid or unenforceable under applicable\nlaw, this will not affect the validity or enforceability of the Licence as a\nwhole. Such provision will be construed or reformed so as necessary to make it\nvalid and enforceable.\nThe European Commission may publish other linguistic versions or new versions\nof this Licence or updated versions of the Appendix, so far this is required\nand reasonable, without reducing the scope of the rights granted by the\nLicence. New versions of the Licence will be published with a unique version\nnumber.\nAll linguistic versions of this Licence, approved by the European Commission,\nhave identical value. Parties can take advantage of the linguistic version of\ntheir choice.\n\nJurisdiction\n\nWithout prejudice to specific agreement between parties,\n\nany litigation resulting from the interpretation of this License, arising\nbetween the European Union institutions, bodies, offices or agencies, as a\nLicensor, and any Licensee, will be subject to the jurisdiction of the Court\nof Justice of the European Union, as laid down in article 272 of the Treaty\non the Functioning of the European Union,\n\nany litigation arising between other parties and resulting from the\ninterpretation of this License, will be subject to the exclusive\njurisdiction of the competent court where the Licensor resides or conducts\nits primary business.\n\n\n\nApplicable Law\n\nWithout prejudice to specific agreement between parties,\n\nthis Licence shall be governed by the law of the European Union Member State\nwhere the Licensor has his seat, resides or has his registered office,\n\nthis licence shall be governed by Belgian law if the Licensor has no seat,\nresidence or registered office inside a European Union Member State.\n\n\nAppendix\n‘Compatible Licences’ according to Article 5 EUPL are:\n\nGNU General Public License (GPL) v. 2, v. 3\nGNU Affero General Public License (AGPL) v. 3\nOpen Software License (OSL) v. 2.1, v. 3.0\nEclipse Public License (EPL) v. 1.0\nCeCILL v. 2.0, v. 2.1\nMozilla Public Licence (MPL) v. 2\nGNU Lesser General Public Licence (LGPL) v. 2.1, v. 3\nCreative Commons Attribution-ShareAlike v. 3.0 Unported (CC BY-SA 3.0) for\nworks other than software\nEuropean Union Public Licence (EUPL) v. 1.1, v. 1.2\nQuébec Free and Open-Source Licence — Reciprocity (LiLiQ-R) or Strong\nReciprocity (LiLiQ-R+).\n\nThe European Commission may update this Appendix to later versions of the\nabove licences without producing a new version of the EUPL, as long as they\nprovide the rights granted in Article 2 of this Licence and protect the\ncovered Source Code from exclusive appropriation.\nAll other changes or additions to this Appendix require the production of a\nnew EUPL version.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PermissionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RoleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_PermissionModule\n\n\n\ncluster_PermissionModule_providers\n\n\n\ncluster_RoleModule\n\n\n\ncluster_RoleModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nPermissionModule\n\nPermissionModule\n\nPermissionModule -->\n\nAuthModule->PermissionModule\n\n\n\n\n\nRoleModule\n\nRoleModule\n\nRoleModule -->\n\nAuthModule->RoleModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nCaslAbilityFactory \n\nCaslAbilityFactory \n\nCaslAbilityFactory  -->\n\nAuthModule->CaslAbilityFactory \n\n\n\n\n\nPoliciesGuard \n\nPoliciesGuard \n\nPoliciesGuard  -->\n\nAuthModule->PoliciesGuard \n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\nAppModule -->\n\nPermissionModule->AppModule\n\n\n\nAppModule -->\n\nRoleModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nCaslAbilityFactory\n\nCaslAbilityFactory\n\nAuthModule -->\n\nCaslAbilityFactory->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nPermissionService\n\nPermissionService\n\nPermissionModule -->\n\nPermissionService->PermissionModule\n\n\n\n\n\nRoleService\n\nRoleService\n\nRoleModule -->\n\nRoleService->RoleModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    23 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AppAbility   (src/.../casl-ability.factory.ts)\n                        \n                        \n                            PermissionObjectType   (src/.../casl-ability.factory.ts)\n                        \n                        \n                            PolicyHandler   (src/.../casl-ability.factory.ts)\n                        \n                        \n                            PolicyHandlerCallback   (src/.../casl-ability.factory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/casl-ability.factory.ts\n    \n    \n        \n            \n                \n                    \n                    AppAbility\n                \n            \n            \n                \n                        Ability<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PermissionObjectType\n                \n            \n            \n                \n                            any\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PolicyHandler\n                \n            \n            \n                \n                            IPolicyHandler | PolicyHandlerCallback\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PolicyHandlerCallback\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CHECK_POLICIES_KEY   (src/.../casl-ability.factory.ts)\n                        \n                        \n                            CheckPolicies   (src/.../casl-ability.factory.ts)\n                        \n                        \n                            enviroment   (dev.env.ts)\n                        \n                        \n                            IS_PUBLIC_KEY   (src/.../public.factory.ts)\n                        \n                        \n                            postgressConfig   (src/.../postgres.config.ts)\n                        \n                        \n                            Public   (src/.../public.factory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/casl-ability.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CHECK_POLICIES_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'check_policy'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CheckPolicies\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...handlers: PolicyHandler[]) =>\n  SetMetadata(CHECK_POLICIES_KEY, handlers)\n                    \n                \n\n\n        \n    \n\n    dev.env.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        enviroment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  APP_NAME: 'PronadjiMajstora Backend',\n  APP_DESCRIPTION: 'Backend for PronadjiMajstora application',\n  APP_VERSION: '1.0.0',\n  APP_PORT: 3000,\n  APP_URL: 'https://pronadjimajstora.rs',\n  APP_MODE: 'DEV',\n  APP_DOCUMENTATION_PATH: 'api/docs',\n  RATE_LIMIT_LIFE: 60,\n  RATE_LIMIT: 40,\n  ACCESS_TOKEN_SECRET: 'SuP3rS3cr3T0k3N',\n  REFRESH_TOKEN_SECRET: 'Sup3rR3fr3shT0k3nS3cr3T',\n  ACCESS_TOKEN_EXPIRATION_TIME: 900,\n  REFRESH_TOKEN_EXPIRATION_TIME: 3600,\n  POSTGRES_HOST: 'localhost',\n  POSTGRES_PORT: 5432,\n  POSTGRES_USERNAME: 'postgres',\n  POSTGRES_PASSWORD: 'postgres',\n  POSTGRES_DATABASE: 'pronadjimajstora',\n}\n                    \n                \n\n\n        \n    \n\n    src/auth/public.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n\n    src/config/postgres.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        postgressConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TypeOrmModuleOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  type: 'postgres',\n  host: enviroment.POSTGRES_HOST, // localhost\n  port: enviroment.POSTGRES_PORT, // 5432\n  username: enviroment.POSTGRES_USERNAME, // databse login role username\n  password: enviroment.POSTGRES_PASSWORD, // database login role password\n  database: enviroment.POSTGRES_DATABASE, // db name\n\n  // entities name should be **.entity.ts\n  entities: ['dist/src/**/*.entity.js'],\n\n  // We are using migrations, synchronize should be set to false.\n  // synchronize: process.env.TYPEORM_SYNCHRONIZE\n  //  ? process.env.TYPEORM_SYNCHRONIZE.toLowerCase() === 'true'\n  //  : false,\n  synchronize: false,\n\n  // Run migrations automatically,\n  // you can disable this if you prefer running migration manually.\n  migrationsRun: false,\n\n  logging: false,\n  // logger: 'advanced-console',\n\n  // Allow both start:prod and start:dev to use migrations\n  // __dirname is either dist or src folder, meaning either\n  // the compiled js in prod or the ts in dev.\n  migrations: ['dist/src/migrations/seed/*.js', 'dist/src/migrations/*.js'],\n  autoLoadEntities: true,\n  migrationsTableName: 'migrations_typeorm',\n  cli: {\n    migrationsDir: 'src/migrations',\n  },\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
